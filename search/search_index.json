{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to winson's coding space!</p>"},{"location":"about/","title":"About","text":"<p>Welcome to winson's coding space!</p>"},{"location":"algorithm/algorithm_basic/","title":"\u7b97\u6cd5\u57fa\u7840","text":""},{"location":"algorithm/algorithm_basic/#_2","title":"\u4e8c\u5206\u67e5\u627e","text":""},{"location":"algorithm/algorithm_basic/#x","title":"\u67e5\u627e\u5927\u4e8e\u7b49\u4e8ex \u7684\u7b2c\u4e00\u4e2a\u6570","text":"<p>a[mid] &gt;= target\u8bf4\u660e\u8981\u5bfb\u627e\u7684\u6570\u5728[l, mid]\u4e2d</p> <p>a[mid] &lt; target\u8bf4\u660e\u8981\u5bfb\u627e\u7684\u6570\u5728(mid, n - 1]\u4e2d</p> <pre><code>// \u533a\u95f4[l, r]\u88ab\u5212\u5206\u6210[l, mid]\u548c[mid + 1, r]\u65f6\u4f7f\u7528\uff1a\nint bsearch_1(int l, int r)\n{\n    while (l &lt; r)\n    {\n        int mid = l + r &gt;&gt; 1;\n        if (a[mid] &lt; target) l = mid + 1;    // check()\u5224\u65admid\u662f\u5426\u6ee1\u8db3\u6027\u8d28\n        else r = mid ;\n    }\n    return l;\n}\n</code></pre>"},{"location":"algorithm/algorithm_basic/#x_1","title":"\u67e5\u627e\u5c0f\u4e8e\u7b49\u4e8ex \u7684\u6700\u540e\u4e00\u4e2a\u6570","text":"<p>a[mid] &gt;= target\u8bf4\u660e\u8981\u5bfb\u627e\u7684\u6570\u5728[l, mid]\u4e2d</p> <p>a[mid] &lt; target\u8bf4\u660e\u8981\u5bfb\u627e\u7684\u6570\u5728(mid, n - 1]\u4e2d</p> <pre><code>// \u533a\u95f4[l, r]\u88ab\u5212\u5206\u6210[l, mid - 1]\u548c[mid, r]\u65f6\u4f7f\u7528\uff1a\nint bsearch_2(int l, int r)\n{\n    while (l &lt; r)\n    {\n        int mid = l + r + 1 &gt;&gt; 1;\n        if (a[mid] &gt; target) r = mid - 1;\n        else l = mid;\n    }\n    return l;\n}\n</code></pre>"},{"location":"algorithm/algorithm_basic/#_3","title":"\u8bb0\u5fc6\u53e3\u8bc0","text":"<p>\u5927\u4e8e\u7b49\u4e8ex\uff1a</p> <ul> <li>r = mid</li> <li>\u56e0\u4e3a\u662f\u5927\u4e8e\uff0c\u6240\u4ee5l \u662f mid + 1</li> </ul> <p>\u5c0f\u4e8e\u7b49\u4e8ex\uff1a</p> <ul> <li>l = mid</li> <li>\u56e0\u4e3a\u662f\u5c0f\u4e8e\uff0c\u6240\u4ee5r \u662fmid - 1</li> </ul>"},{"location":"algorithm/algorithm_basic/#_4","title":"\u52a8\u6001\u89c4\u5212","text":"<p>\u52a8\u6001\u89c4\u5212\u53ef\u6839\u636e\u4ee5\u4e0b\u4e24\u4e2a\u7ef4\u5ea6\u601d\u8003\uff1a</p> <ol> <li>\u72b6\u6001\u8868\u793a</li> <li>\u96c6\u5408</li> <li>\u5c5e\u6027</li> <li>\u72b6\u6001\u8ba1\u7b97</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\u8ba1\u7b97\uff1a\u72b6\u6001\u6570 * \u72b6\u6001\u8f6c\u79fb\u8ba1\u7b97\u6b21\u6570</li> </ol>"},{"location":"algorithm/algorithm_basic/#_5","title":"\u80cc\u5305\u95ee\u9898","text":"<p>\u7ed9\u51faN\u4e2a\u7269\u54c1\u7684\u4f53\u79ef\\(v_i\\)\u548c\u4ef7\u503c\\(w_i\\)\uff0c\u4ee5\u53ca\u80cc\u5305\u7684\u603b\u5bb9\u91cfV</p> <p>\u6c42\u89e3\u5c06\u54ea\u4e9b\u7269\u54c1\u88c5\u5165\u80cc\u5305\uff0c\u53ef\u4f7f\u8fd9\u4e9b\u7269\u54c1\u7684\u603b\u4f53\u79ef\u4e0d\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\uff0c\u4e14\u603b\u4ef7\u503c\u6700\u5927\u3002</p> <p>\u8f93\u51fa\u6700\u5927\u4ef7\u503c\u3002</p>"},{"location":"algorithm/algorithm_basic/#01","title":"01\u80cc\u5305\u95ee\u9898","text":"<p>\u6a21\u677f\u9898\uff1ahttps://www.acwing.com/problem/content/2/</p> <p>\u7279\u70b9\uff1a\u6bcf\u4ef6\u7269\u54c1\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21</p> <p>\u72b6\u6001\u8ba1\u7b97\uff1a</p> <p>\u7531\u4e8e\u6bcf\u4e2a\u7269\u54c1\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\uff0c\u90a3\u4e48\u5206\u7c7b\u8ba8\u8bba\u4e3a\uff1a</p> <ol> <li>\u7b2ci\u4e2a\u7269\u54c1\u4e0d\u88c5\u8fdb\u4e66\u5305\uff1a<code>f[i][j]=f[i - 1][j]</code></li> <li>\u7b2ci\u4e2a\u7269\u54c1\u88c5\u8fdb\u4e66\u5305\uff1a<code>f[i][j] =f[i - 1][j - v[i]] + w[i]</code> </li> </ol> <p><code>f[i][j]\u53d6\u4ee5\u4e0a\u7ed3\u679c\u7684\u6700\u5927\u503cmax\u5373\u53ef\uff0c\u5373f[i][j] = max(f[i - 1][j], f[i - 1][j - v[i]] + w[i])</code></p>"},{"location":"algorithm/algorithm_basic/#_6","title":"\u6734\u7d20\u7248","text":"<p>\u91c7\u7528\u4e8c\u7ef4\u6570\u7ec4<code>f[i][j]</code>\u4f5c\u4e3a\u72b6\u6001\u8868\u8fbe\u5f0f\uff0c\u8868\u793a\u524di\u4e2a\u7269\u54c1\u80cc\u5305\u5bb9\u79ef\u4e3aj\u7684\u6240\u6709\u9009\u62e9</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 1010, V = 1010;\n//  f[N][V] \u72b6\u6001\u8868\u8fbe\u5f0f\n//  \u96c6\u5408\uff1af[i][j] \u8868\u793a \u524di\u4e2a\u7269\u54c1\u80cc\u5305\u5bb9\u79ef\u4e3aj\u7684\u6240\u6709\u9009\u62e9\n//  \u5c5e\u6027\uff1a\u6240\u6709\u9009\u62e9\u7684\u4ef7\u503c\u6700\u5927\u503c\nint f[N][V];\n\n// v[i] \u8bb0\u5f55\u6bcf\u4e2a\u7269\u54c1\u7684\u4f53\u79ef\uff0cw[i] \u8bb0\u5f55\u6bcf\u4e2a\u7269\u54c1\u7684\u4ef7\u503c\nint v[N],w[N];\n\nint main(){\n    int n, m;\n    cin &gt;&gt; n &gt;&gt; m;\n    //  \u8f93\u5165    \n    for(int i = 1; i &lt;= n; i++){\n        cin &gt;&gt; v[i] &gt;&gt; w[i];\n    }\n\n    //  \u5f00\u59cb\u6c42\u89e3\n    //  f[0][0~m]\u90fd\u662f0\uff0c\u56e0\u4e3a\u7b2c0\u4e2a\u7269\u54c1\u6ca1\u6709\u4ef7\u503c\u53ef\u8a00\n    //  \u4ece\u7b2c1\u4e2a\u7269\u54c1\u5f00\u59cb\u8ba1\u7b97\n    for(int i = 1; i &lt;= n; i++){\n        //  \u904d\u5386\u6bcf\u4e2a\u5bb9\u79ef\n        for(int j = 0; j &lt;= m; j++){\n            //  \u5982\u679c\u4e0d\u9009\u7b2ci\u4e2a\u7269\u54c1\n            f[i][j] = f[i - 1][j];\n            //  \u5982\u679c\u9009\u62e9\u7b2ci\u4e2a\u7269\u54c1\n            //  \u5224\u65ad\u5f53\u524d\u5bb9\u79ef\u662f\u5426\u80fd\u5bb9\u7eb3\u7b2ci\u4e2a\u7269\u54c1\n            if(j &gt;= v[i])   \n                // f[i - 1][j - v[i]]\u8868\u793a\u9009\u62e9\u7b2ci\u4e2a\u7269\u54c1\u7684\u524d\u63d0\u4e0b\uff0c\u7b2ci - 1\u4e2a\u7269\u54c1\u7684\u4ef7\u503c\u6700\u5927\u503c\n                f[i][j] = max(f[i][j], f[i - 1][j - v[i]] + w[i]);\n        }\n    }\n\n    //  \u8f93\u51fa\u7ed3\u679c\uff0cf[n][m]\u8868\u793a\u524dn\u4e2a\u7269\u54c1\u5bb9\u79ef\u4e3am\u7684\u4ef7\u503c\u6700\u5927\u503c\uff0c\u5373\u6211\u4eec\u95ee\u9898\u7684\u89e3\n    cout &lt;&lt; f[n][m] &lt;&lt; endl;\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(NV)\\approx O(n^2)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(NV)\\approx O(n^2)\\)</p>"},{"location":"algorithm/algorithm_basic/#_7","title":"\u4f18\u5316\u7248","text":"<p>\u4f18\u5316\u601d\u8def\uff1a</p> <ol> <li>\u8ba1\u7b97<code>f[i]</code>\u90fd\u662f\u4f9d\u9760<code>f[i - 1]</code>\uff0c\u56e0\u6b64\u672c\u8d28\u4e0a\u53ea\u9700\u8981\u4e00\u7ef4\u6570\u7ec4\uff0c\u8fd9\u79cd\u79f0\u4e3a\u6eda\u52a8\u6570\u7ec4\uff08\u6eda\u52a8\u6570\u7ec4\uff1a\u4e8c\u7ef4\u6570\u7ec4\u8ba1\u7b97\u7684\u65f6\u5019<code>f[i]</code>\u53ea\u4f9d\u6258\u4e8e<code>f[i - 1]</code>\u7b49\u6709\u9650\u4e2a\u524d\u9a71\u6570\u7ec4\uff09</li> <li>\u904d\u5386\u5bb9\u79ef\u90fd\u662f\u4ece<code>j == 0</code>\u5f00\u59cb\uff0c\u4f46\u662f\u53c8\u6709\u5224\u65ad<code>j &gt;= v[i]</code>\u624d\u4f1a\u8ba1\u7b97<code>f[i][j] = max(f[i][j], f[i - 1][j - v[i]] + w[i]);</code>\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u4ece<code>j == v[i]</code>\u5f00\u59cb</li> </ol> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff1a</p> <p>\u7531\u4e8e\u6eda\u52a8\u6570\u7ec4\u53ea\u6709\u4e00\u7ef4\uff0c\u56e0\u6b64<code>f[i - 1][j]</code>\u5b9e\u9645\u4e0a\u4ee5\u4e0a\u4e00\u6b21\u5b58\u50a8\u7684<code>f[j]</code>\u6765\u8868\u793a</p> <p>\u5982\u679c\u4ece\u5de6\u5f80\u53f3\u8ba1\u7b97\uff0c\u90a3\u4e48\u8ba1\u7b97<code>f[i][j]</code>\u65f6\uff0c\u7531\u4e8e<code>j - v[i] &lt;= j</code>\uff0c<code>f[j - v[i]]</code>\u5728<code>f[j]</code>\u7684\u5de6\u4fa7\uff0c\u5373\u5df2\u7ecf\u88ab\u8ba1\u7b97\u8fc7</p> <p>\u6b64\u65f6<code>f[j - v[i]]</code>\u8868\u793a\u7684\u662f<code>f[i][j - v[i]]</code>\u800c\u4e0d\u662f<code>f[i - 1][j - v[i]]</code>\uff0c\u4e0e\u9898\u610f\u4e0d\u7b26</p> <p>\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4ece\u53f3\u5f80\u5de6\u8ba1\u7b97\uff0c\u4fdd\u8bc1\u8ba1\u7b97\u987a\u5e8f<code>f[j]</code>\u65e9\u4e8e<code>f[j - v[i]]</code></p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 1010, V = 1010;\n//  f[V] \u72b6\u6001\u8868\u8fbe\u5f0f\n//  \u96c6\u5408\uff1a\u904d\u5386\u7b2ci\u6b21\uff0cf[j] \u8868\u793a \u524di\u4e2a\u7269\u54c1\u80cc\u5305\u5bb9\u79ef\u4e3aj\u7684\u6240\u6709\u9009\u62e9\n//  \u5c5e\u6027\uff1a\u6240\u6709\u9009\u62e9\u7684\u4ef7\u503c\u6700\u5927\u503c\nint f[V];\n\n// v[i] \u8bb0\u5f55\u6bcf\u4e2a\u7269\u54c1\u7684\u4f53\u79ef\uff0cw[i] \u8bb0\u5f55\u6bcf\u4e2a\u7269\u54c1\u7684\u4ef7\u503c\nint v[N],w[N];\n\nint main(){\n    int n, m;\n    cin &gt;&gt; n &gt;&gt; m;\n    //  \u8f93\u5165    \n    for(int i = 1; i &lt;= n; i++){\n        cin &gt;&gt; v[i] &gt;&gt; w[i];\n    }\n\n    //  \u5f00\u59cb\u6c42\u89e3\n    //  f[0~m]\u90fd\u662f0\uff0c\u56e0\u4e3a\u7b2c0\u4e2a\u7269\u54c1\u6ca1\u6709\u4ef7\u503c\u53ef\u8a00\n    //  \u4ece\u7b2c1\u4e2a\u7269\u54c1\u5f00\u59cb\u8ba1\u7b97\n    for(int i = 1; i &lt;= n; i++){\n        //  \u904d\u5386\u6bcf\u4e2a\u5bb9\u79ef\n        for(int j = m; j &gt;= v[i]; j--){\n            f[j] = max(f[j], f[j - v[i]] + w[i]);\n        }\n    }\n\n    //  \u8f93\u51fa\u7ed3\u679c\uff0c\u5df2\u7ecf\u904d\u5386\u4e86n\u6b21\uff0cf[m]\u8868\u793a\u524dn\u4e2a\u7269\u54c1\u5bb9\u79ef\u4e3am\u7684\u4ef7\u503c\u6700\u5927\u503c\uff0c\u5373\u6211\u4eec\u95ee\u9898\u7684\u89e3\n    cout &lt;&lt; f[m] &lt;&lt; endl;\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(NV)\\approx O(n^2)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(V)\\approx O(n)\\)</p>"},{"location":"algorithm/algorithm_basic/#_8","title":"\u5b8c\u5168\u80cc\u5305\u95ee\u9898","text":"<p>\u6a21\u677f\u9898\uff1ahttps://www.acwing.com/problem/content/3/</p> <p>\u7279\u6027\uff1a\u6bcf\u79cd\u7269\u54c1\u90fd\u6709\u65e0\u9650\u4ef6\u53ef\u7528\u3002</p> <p>\u72b6\u6001\u8ba1\u7b97\uff1a</p> <p>\u4ee5\u7269\u54c1\u7684\u4e2a\u6570\u4f5c\u4e3a\u5206\u7c7b\u8ba8\u8bba\u6761\u4ef6\uff1a</p> <ol> <li>\u7b2ci\u4e2a\u7269\u54c1\u53d60\u4e2a\uff1a<code>f[i - 1][j] = f[i][j - 0*v[i]]+0*w[i]</code></li> <li>\u7b2ci\u4e2a\u7269\u54c1\u53d61\u4e2a\uff1a<code>f[i][j - 1*v[i]]+1*w[i]</code></li> <li>....</li> <li>\u7b2ci\u4e2a\u7269\u54c1\u53d6k\u4e2a\uff1a<code>f[i][j - k*v[i]]+k*w[i]</code></li> <li>....</li> </ol> <p>\u4fdd\u8bc1<code>k * v[i] &lt;= j</code>\u7684\u524d\u63d0\uff0c\u628a\u4ee5\u4e0a\u72b6\u6001\u5168\u90e8\u53d6\u4e2amax\u5f97\u5230\u7ed3\u679c</p>"},{"location":"algorithm/algorithm_basic/#_9","title":"\u6700\u521d\u7248","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 1010, V = 1010;\nint f[N][V];\nint v[N], w[N];\n\nint main(){\n    int n, m;\n    cin &gt;&gt; n &gt;&gt; m;\n    for(int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; v[i] &gt;&gt; w[i];\n    for(int i = 1; i &lt;= n; i++){\n        for(int j = 0; j &lt;= m; j++){\n            for(int k = 0; k * v[i] &lt;= j; k++){\n                f[i][j] = max(f[i][j], f[i - 1][j - k * v[i]] + k * w[i]);\n            }\n        }\n    }\n\n    cout &lt;&lt; f[n][m] &lt;&lt; endl;\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(NV*\\frac{V}{v})\\approx O(n^3)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(NV)\\approx O(n^2)\\)</p> <p>\u8be5\u65b9\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u8fc7\u4e8e\u9ad8\uff0c\u57fa\u672c\u4e0d\u4f7f\u7528</p>"},{"location":"algorithm/algorithm_basic/#_10","title":"\u666e\u901a\u4f18\u5316\u7248","text":"<pre><code>f[i][j] \n= max(f[i - 1][j], f[i - 1][j - v[i]] + w[i], f[i - 1][j - 2 * v[i]] + 2 * w[i],f[i - 1][j - 3 * v[i]] + 2 * w[i]\uff0c ..., f[i - 1][j - k * v[i]] + k * w[i]     ,...)\n\nf[i][j - v[i]] \n= max(             f[i - 1][j - v[i]]       , f[i - 1][j - 2 *v[i]] + w[i],      f[i - 1][j - 3 * v[i]] + 2 * w[i], ..., f[i - 1][j - (k + 1) * v[i]] + k * w[i],...)\n\n\u53ef\u4ee5\u53d1\u73b0\n`f[i][j] \n= max(f[i - 1][j], f[i][j - v[i]] + w[i])`\n</code></pre> <p>\u6211\u4eec\u5f97\u5230\u65b0\u7684\u72b6\u6001\u8ba1\u7b97\u65b9\u7a0b\uff1a</p> <p><code>f[i][j] = max(f[i - 1][j], f[i][j - v[i]] + w[i])</code></p> <p>\u6ce8\u610f\uff1a</p> <p>\u5b8c\u5168\u80cc\u5305\u95ee\u9898\u7684\u72b6\u6001\u65b9\u7a0b\u4e0e01\u80cc\u5305\u95ee\u9898\u4e0d\u540c</p> <ul> <li>01\u80cc\u5305\u95ee\u9898\u7684\u72b6\u6001\u8ba1\u7b97\u65b9\u7a0b\u4e3a<code>f[i][j] = max(f[i - 1][j], f[i - 1][j - v[i]] + w[i])</code>\uff0c\u8fd9\u91cc\u662f i - 1</li> <li>\u5b8c\u5168\u80cc\u5305\u95ee\u9898\u7684\u72b6\u6001\u8ba1\u7b97\u65b9\u7a0b\u4e3a<code>f[i][j] = max(f[i - 1][j], f[i][j - v[i]] + w[i])</code>\uff0c \u8fd9\u91cc\u662f i</li> </ul> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 1010, V = 1010;\nint f[N][V];\nint v[N], w[N];\n\nint main(){\n    int n, m;\n    cin &gt;&gt; n &gt;&gt; m;\n    for(int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; v[i] &gt;&gt; w[i];\n    for(int i = 1; i &lt;= n; i++){\n        for(int j = 0; j &lt;= m; j++){\n            f[i][j] = f[i - 1][j];\n            if(j &gt;= v[i])\n                f[i][j] = max(f[i][j], f[i][j - v[i]] + w[i]);\n        }\n    }\n\n    cout &lt;&lt; f[n][m] &lt;&lt; endl;\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(NV)\\approx O(n^2)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(NV)\\approx O(n^2)\\)</p> <p>\u4e0e01\u80cc\u5305\u95ee\u9898\u7c7b\u4f3c\uff0c\u8be5\u65b9\u6cd5\u8fd8\u80fd\u4f18\u5316\u4e3a\u4e00\u7ef4\u6570\u7ec4\u7248</p>"},{"location":"algorithm/algorithm_basic/#_11","title":"\u6700\u7ec8\u4f18\u5316\u7248","text":"<p>\u4f18\u5316\u601d\u8def\u4e0e01\u80cc\u5305\u95ee\u9898\u5927\u81f4\u76f8\u540c</p> <p>\u552f\u4e00\u4e0d\u540c\u70b9\u5728\u4e8e\uff1a</p> <p>\u672c\u6b21\u662f\u4ece\u5de6\u5f80\u53f3\u904d\u5386\u5bb9\u79efj\uff0801\u80cc\u5305\u662f\u4ece\u53f3\u5f80\u5de6\uff09\uff0c\u8fd9\u662f\u56e0\u4e3a\u72b6\u6001\u8ba1\u7b97\u65b9\u7a0b\u4e0d\u540c\uff1a</p> <ul> <li>01\u80cc\u5305\u95ee\u9898\u7684\u72b6\u6001\u8ba1\u7b97\u65b9\u7a0b\u4e3a<code>f[i][j] = max(f[i - 1][j], f[i - 1][j - v[i]] + w[i])</code>\uff0c\u8fd9\u91cc\u662f i - 1</li> <li>\u5b8c\u5168\u80cc\u5305\u95ee\u9898\u7684\u72b6\u6001\u8ba1\u7b97\u65b9\u7a0b\u4e3a<code>f[i][j] = max(f[i - 1][j], f[i][j - v[i]] + w[i])</code>\uff0c \u8fd9\u91cc\u662f i</li> </ul> <p><code>f[i][j - v[i]]</code>\u4e0e<code>f[i][j]</code>\u5728\u540c\u4e00\u884c\uff0c\u4f18\u5316\u4e3a\u4e00\u7ef4\u6570\u7ec4\u540e\uff0c\u4e3a<code>f[j - v[i]]</code>\uff0c\u5728<code>f[j]</code>\u7684\u5de6\u8fb9\uff0c\u8ba1\u7b97\u987a\u5e8f\uff1a<code>f[j - v[i]]</code>\u5148\u4e8e<code>f[j]</code></p> <p>\u6240\u4ee5\u4ece\u5de6\u5f80\u53f3\u904d\u5386</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 1010, V = 1010;\nint f[V];\nint v[N], w[N];\n\nint main(){\n    int n, m;\n    cin &gt;&gt; n &gt;&gt; m;\n    for(int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; v[i] &gt;&gt; w[i];\n    for(int i = 1; i &lt;= n; i++){\n        // \u4ece\u5de6\u5f80\u53f3\u904d\u5386\n        for(int j = v[i]; j &lt;= m; j++){\n            f[j] = max(f[j], f[j - v[i]] + w[i]);\n        }\n    }\n\n    cout &lt;&lt; f[m] &lt;&lt; endl;\n}\n</code></pre>"},{"location":"algorithm/algorithm_basic/#_12","title":"\u591a\u91cd\u80cc\u5305\u95ee\u9898","text":"<p>\u6a21\u677f\u9898\uff1a</p> <ul> <li>\u4e0d\u9650\u65f6\u7248\uff1ahttps://www.acwing.com/problem/content/4/</li> <li>\u9650\u65f6\u7248\uff1ahttps://www.acwing.com/problem/content/5/</li> </ul> <p>\u7279\u6027\uff1a\u6bcf\u4e2a\u7269\u54c1\u6700\u591a\u9009\u62e9s[i]\u4ef6</p>"},{"location":"algorithm/algorithm_basic/#_13","title":"\u6734\u7d20\u7248","text":"<p>\u6700\u57fa\u7840\u7684\u60f3\u6cd5\uff1a\u679a\u4e3e\u7269\u54c1\u9009\u62e9\u7684\u4ef6\u6570k</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 1010, V = 1010;\nint f[N][V];\nint v[N], w[N], s[N];\n\nint main(){\n    int n, m;\n    cin &gt;&gt; n &gt;&gt; m;\n    for(int i = 1; i &lt;= n; i++){\n        cin &gt;&gt; v[i] &gt;&gt; w[i] &gt;&gt; s[i];\n    }\n    for(int i = 1; i &lt;= n; i++){\n        for(int j = 0; j &lt;= m; j++){\n            for(int k = 0; k &lt;= s[i] &amp;&amp; k * v[i] &lt;= j; k++){\n                f[i][j] = max(f[i][j], f[i - 1][j - k * v[i]] + k * w[i]);\n            }\n        }\n    }\n\n    cout &lt;&lt; f[n][m] &lt;&lt; endl;\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(NVs)\\approx O(n^3)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(NV)\\approx O(n^2)\\)</p>"},{"location":"algorithm/algorithm_basic/#_14","title":"\u4f18\u5316\u7248","text":"<p>\u4e0e\u5b8c\u5168\u80cc\u5305\u95ee\u9898\u4e0d\u540c\uff0c\u591a\u91cd\u80cc\u5305\u591a\u4e86\u4e00\u9879\uff0c\u56e0\u6b64\u4e0d\u80fd\u91c7\u7528\u5b8c\u5168\u80cc\u5305\u95ee\u9898\u7684\u505a\u6cd5</p> <pre><code>f[i][j] \n= max(f[i - 1][j], f[i - 1][j - v[i]] + w[i], f[i - 1][j - 2 * v[i]] + 2 * w[i],f[i - 1][j - 3 * v[i]] + 2 * w[i]\uff0c ..., f[i - 1][j - k * v[i]] + k * w[i]     ,..., f[i - 1][j - s[i] * v[i]] + s[i] * w[i])\n\nf[i][j - v[i]] \n= max(             f[i - 1][j - v[i]]       , f[i - 1][j - 2 * v[i]] + w[i],     f[i - 1][j - 3 * v[i]] + 2 * w[i], ..., f[i - 1][j - (k + 1) * v[i]] + k * w[i],..., f[i - 1][j - s[i] * v[i]] + (s[i] - 1) * w[i], f[i - 1][j - (s[i] + 1) * v[i]] + s[i] * w[i])\n\n\u4e0e01\u80cc\u5305\u4e0d\u540c\uff0c\u4e0d\u80fd\u518d\u5199\u6210\uff1a\nf[i][j] \n= max(f[i - 1][j], f[i][j - v[i]] + w[i])\n\n\u56e0\u4e3af[i][j - v[i]]\u6bd4f[i][j]\u591a\u4e86\u4e00\u9879f[i - 1][j - (s[i] + 1) * v[i]] + s[i] * w[i]\uff0c\u591a\u51fa\u6765\u7684\u4e00\u9879\u8bb0\u4f5cd\n\u6240\u4ee5f[i][j - v[i]] = max(B, d)\uff0c B\u4e3ad\u524d\u9762\u82e5\u5e72\u9879\n\nf[i][j] = max(f[i - 1][j], f[i][j - v[i]] + w[i])\nf[i][j - v[i]] = max(B , d)\n-&gt; f[i][j] = max(f[i - 1][j], max(B , d) + w[i])\n\u65e0\u6cd5\u8ba1\u7b97B\uff0c\u56e0\u6b64\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u53ef\u53d6\n</code></pre> <p>\u56de\u987e\u591a\u91cd\u80cc\u5305\u6734\u7d20\u7248\u89e3\u6cd5\u5b58\u5728\u7684\u95ee\u9898\uff1a\u9700\u8981\u679a\u4e3e\u6bcf\u4e2a\u7269\u54c1\u7684\u4ef6\u6570\uff0c\u800c\u4e14\u8fd9\u4e00\u6b65\u4e0d\u80fd\u50cf\u5b8c\u5168\u80cc\u5305\u95ee\u9898\u90a3\u6837\u4f18\u5316\uff0c\u5bfc\u81f4\u65f6\u95f4\u590d\u6742\u5ea6\u8fc7\u9ad8</p> <p>\u800c01\u80cc\u5305\u4e0d\u9700\u8981\u679a\u4e3e\u6bcf\u4e2a\u7269\u54c1\u7684\u4ef6\u6570\uff0c\u56e0\u4e3a\u7269\u54c1\u6700\u591a\u53ea\u67091\u4ef6</p> <p>\u6211\u4eec\u80fd\u5426\u5c06\u591a\u91cd\u80cc\u5305\u95ee\u9898\u8f6c\u6362\u4e3a01\u80cc\u5305\u95ee\u9898\uff1f</p> <p>\u4f18\u5316\u7248\u91c7\u7528\u4e8c\u8fdb\u5236\u5206\u7ec4\u8868\u793a\u6cd5\uff0c\u5c06\u7269\u54c1\u7684\u4ef6\u6570k\u5206\u89e3\u4e3a\u82e5\u5e72\u4e2a\u4e8c\u8fdb\u5236\u7ec4\uff0c\u90a3\u4e48\u679a\u4e3ek\u53d8\u6210\u4e86\u679a\u4e3e\u6bcf\u4e2a\u7ec4\u662f\u5426\u9700\u8981</p> <p>\u56e0\u6b64\u591a\u91cd\u80cc\u5305\u95ee\u9898\u8f6c\u6362\u4e3a\u4e8601\u80cc\u5305\u95ee\u9898\u7684\u89e3\u6cd5</p> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u770b\u5982\u4f55\u5c06k\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u7ec4</p> <p>\u4f18\u5316\u89e3\u6cd5</p> <p>\u7406\u8bba\u524d\u63d0\uff1a</p> <ul> <li>\u4efb\u4f55\u6570\u90fd\u80fd\u7531\u4e8c\u8fdb\u52361\uff0c2\uff0c4\uff0c8\uff0c...\uff0c\u8868\u793a\uff0c\u4f8b\u5982\\(11=(1011)_2=8+0+2+1\\)</li> </ul> <p>\u6839\u636e\u8be5\u524d\u63d0\uff0c\u6211\u4eec\u5f97\u51fa\u7269\u54c1\u7684\u4ef6\u6570s\u4e5f\u80fd\u7531\u4e8c\u8fdb\u5236\u8868\u793a\uff0c\u679a\u4e3e\u7269\u54c1\u4ef6\u6570\u53d8\u6210\u4e86\u679a\u4e3e\u4e8c\u8fdb\u5236\u7ec4\u7684\u4e2a\u6570</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u7531\\(O(n^3)\\)\u7f29\u51cf\u4e3a\\(O(n^2log(s))\\)\uff0cs\u4e3a\u7269\u54c1\u7684\u4ef6\u6570\uff0c\\(log(s)\\)\u4e3a\u4e8c\u8fdb\u5236\u7ec4\u7684\u4e2a\u6570</p> <p><code>f[i][j]</code>\u72b6\u6001\u6570\\(i\\)\u7531\\(n\\)\u4e2a\u53d8\u6210\\(n*log_2(s)\\)</p> <p>log2\u53ef\u8fd9\u4e48\u6c42</p> <pre><code>#include &lt;cmath&gt;\nusing namespace std;\n\nint main(){\n    int n;\n        cin &gt;&gt; n;\n    cout &lt;&lt; log2(n) &lt;&lt; endl;\n}\n</code></pre> <p>\u5b9e\u9645\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u76f4\u63a5\u5c06\u6c42\u5f97log2\u7ed3\u679c\u4e0e\u7269\u54c1\u6570\u4e0a\u9650N\u76f8\u4e58\u5f97\u5230\u65b0\u7684N\uff0c\u8fd9\u4e2aN\u8868\u793a\u603b\u72b6\u6001\u6570\u4e0a\u9650</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 11010, V = 2010;\nint v[N], w[N];\nint f[V];\n\nint main(){\n    int n, m;\n    cin &gt;&gt; n &gt;&gt; m;\n    // cnt\u4e3a\u5206\u7ec4\u5e8f\u6570\n    // cnt\u4e00\u5b9a\u8981\u653e\u5728\u5faa\u73af\u5916\u9762\uff0c\u56e0\u4e3acnt\u662f\u6240\u6709\u5206\u7ec4\u7684\u5e8f\u53f7\n    int cnt = 0;\n    // \u5bf9\u6bcf\u4e2a\u7269\u54c1\u8fdb\u884c\u4e8c\u8fdb\u5236\u7ec4\u5206\u7ec4\n    for(int i = 1; i &lt;= n; i++){\n        int a, b, s;\n        // a\u4e3av[i], b\u4e3aw[i], s\u4e3as[i]\n        cin &gt;&gt; a &gt;&gt; b &gt;&gt; s;\n        // k\u4e3a\u5206\u7ec4\u5185\u6570\u91cf\n        int k = 1;\n        // \u5bf9s\u8fdb\u884c\u5206\u4e8c\u8fdb\u5236\u7ec4\n        while(k &lt;= s){\n            // \u7b2ccnt\u4e2a\u7ec4\u542b\u6709k\u4e2a\u4ef6\u6570\n            cnt++;\n            // \u8ba1\u7b97\u7b2ccnt\u4e2a\u7ec4\u7684\u4f53\u79ef\uff0c\u6bcf\u4ef6\u7269\u54c1\u4f53\u79ef\u76f8\u540c\uff0c\u90fd\u4e3aa\n            v[cnt] = a * k;\n            // \u8ba1\u7b97\u7b2ccnt\u4e2a\u7ec4\u7684\u4ef7\u503c\uff0c\u6bcf\u4ef6\u7269\u54c1\u4ef7\u503c\u76f8\u540c\uff0c\u90fd\u4e3ab\n            w[cnt] = b * k;\n            s -= k;\n            k *= 2;\n        }\n        // \u5269\u4f59\u7684s\u4e0d\u80fd\u7ee7\u7eed\u5206\u4e3a\u4e8c\u8fdb\u5236\u7ec4\n        if(s &gt; 0){\n            cnt++;\n            v[cnt] = a * s;\n            w[cnt] = b * s;\n        }\n    }\n\n    // \u72b6\u6001\u6570\u7531 n \u53d8\u6210\u4e86 n * log2(n)\n    n = cnt;\n    // 01\u80cc\u5305\u95ee\u9898\n    for(int i = 1; i &lt;= n; i++){\n        for(int j = m; j &gt;= v[i]; j--){\n            f[j] = max(f[j], f[j - v[i]] + w[i]);\n        }\n    }\n\n    cout &lt;&lt; f[m] &lt;&lt; endl;\n}\n</code></pre>"},{"location":"algorithm/algorithm_basic/#_15","title":"\u5206\u7ec4\u80cc\u5305\u95ee\u9898","text":"<p>\u6a21\u677f\u9898\uff1ahttps://www.acwing.com/problem/content/9/</p> <p>\u7279\u6027\uff1a\u6bcf\u7ec4\u7269\u54c1\u6709\u82e5\u5e72\u4e2a\uff0c\u540c\u4e00\u7ec4\u5185\u7684\u7269\u54c1\u6700\u591a\u53ea\u80fd\u9009\u4e00\u4e2a\u3002</p> <p>\u7531\u9009\u62e9\u67d0\u4e2a\u7269\u54c1\u53d8\u6210\u4e86\u4e24\u6b65\uff1a</p> <ol> <li>\u9996\u5148\u9009\u62e9\u5206\u7ec4</li> <li>\u9009\u62e9\u4e86\u5206\u7ec4\u4e4b\u540e\u8981\u5728\u7ec4\u5185\u9009\u62e9\u4e00\u4e2a\u7269\u54c1</li> </ol> <p>\u5373\u8fdb\u884c\u4e24\u6b2101\u80cc\u5305\u95ee\u9898\uff0c\u7b2c\u4e00\u6b2101\u80cc\u5305\u95ee\u9898\u5c06\u7269\u54c1\u5f53\u6210\u7ec4\uff0c\u7b2c\u4e8c\u6b21\u5728\u7ec4\u5185\u8fdb\u884c01\u80cc\u5305\u95ee\u9898</p>"},{"location":"algorithm/algorithm_basic/#_16","title":"\u6734\u7d20\u7248","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 110, V = 110, S = 110;\nint v[N][S], w[N][S], s[N];\nint f[N][V];\n\n// i\u8868\u793a\u7b2ci\u7ec4\uff0ck\u8868\u793a\u7b2ci\u7ec4\u5185\u7684\u7b2ck\u4ef6\u7269\u54c1\uff0cj\u8868\u793a\u80cc\u5305\u5bb9\u79ef\nint main(){\n    int n, m;\n    cin &gt;&gt; n &gt;&gt; m;\n    for(int i = 1; i &lt;= n; i++){\n        cin &gt;&gt; s[i];\n        for(int k = 1; k &lt;= s[i]; k++)\n            cin &gt;&gt; v[i][k] &gt;&gt; w[i][k];\n    }\n\n    for(int i = 1; i &lt;= n; i ++){\n        for(int j = 0; j &lt;= m; j++){\n            f[i][j] = f[i - 1][j];\n            // \u679a\u4e3e\u80cc\u5305\u5185\u7684\u6bcf\u4e2a\u7269\u54c1\n            for(int k = 1; k &lt;= s[i]; k++){\n                // \u6ce8\u610f\u8fd9\u91cc\u7684v[i][k]\u548cw[i][k]\uff0c\u800c\u4e0d\u662fv[i][j]\u548cw[i][j]\n                if(v[i][k] &lt;= j)\n                    f[i][j] = max(f[i][j], f[i - 1][j - v[i][k]] + w[i][k]);\n            }\n        }\n    }\n\n    cout &lt;&lt; f[n][m] &lt;&lt; endl;\n}\n</code></pre>"},{"location":"algorithm/algorithm_basic/#_17","title":"\u4f18\u5316\u7248","text":"<p>\u4e0e01\u80cc\u5305\u95ee\u9898\u4f18\u5316\u601d\u8def\u5b8c\u5168\u4e00\u81f4</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 110, V = 110, S = 110;\nint v[N][S], w[N][S], s[N];\nint f[V];\n\n// i\u8868\u793a\u7b2ci\u7ec4\uff0ck\u8868\u793a\u7b2ci\u7ec4\u5185\u7684\u7b2ck\u4ef6\u7269\u54c1\uff0cj\u8868\u793a\u80cc\u5305\u5bb9\u79ef\nint main(){\n    int n, m;\n    cin &gt;&gt; n &gt;&gt; m;\n    for(int i = 1; i &lt;= n; i++){\n        cin &gt;&gt; s[i];\n        for(int k = 1; k &lt;= s[i]; k++)\n            cin &gt;&gt; v[i][k] &gt;&gt; w[i][k];\n    }\n\n    for(int i = 1; i &lt;= n; i ++){\n        // \u679a\u4e3e\u80cc\u5305\u5185\u7684\u6bcf\u4e2a\u7269\u54c1\n        for(int j = m; j &gt;= 0; j--){\n            for(int k = 1; k &lt;= s[i]; k++){\n                if(v[i][k] &lt;= j)\n                    // \u6ce8\u610f\u8fd9\u91cc\u7684v[i][k]\u548cw[i][k]\uff0c\u800c\u4e0d\u662fv[i][j]\u548cw[i][j]\n                    f[j] = max(f[j], f[j - v[i][k]] + w[i][k]);\n            }\n        }\n\n    }\n\n    cout &lt;&lt; f[m] &lt;&lt; endl;\n}\n</code></pre>"},{"location":"algorithm/algorithm_basic/#dp","title":"\u7ebf\u6027DP","text":"<p>\u7ebf\u6027DP\u5373\u9012\u63a8\u65b9\u7a0b\u5177\u6709\u660e\u663e\u7684\u7ebf\u6027\u5173\u7cfb\uff0c\u6709\u4e00\u7ef4\u7ebf\u6027\u548c\u4e8c\u7ef4\u7ebf\u6027</p> <p>\u80cc\u5305\u95ee\u9898\u4e5f\u5c5e\u4e8e\u7ebf\u6027DP</p>"},{"location":"algorithm/algorithm_basic/#_18","title":"\u6570\u5b57\u4e09\u89d2\u5f62","text":"<p>https://www.acwing.com/problem/content/900/</p> <p><code>f[i][j]</code>\u8868\u793a\u8d70\u5230\u7b2ci\u884c\u7b2cj\u5217\u7684\u5143\u7d20\u7684\u8def\u5f84\u4e4b\u548c</p>"},{"location":"algorithm/algorithm_basic/#_19","title":"\u6734\u7d20\u7248","text":"<p>\u4ece\u4e0a\u5f80\u4e0b\u904d\u5386</p> <p>\u72b6\u6001\u65b9\u7a0b<code>f[i][j] += max(f[i - 1][j - 1], f[i - 1][j])</code></p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\n// \u4e09\u89d2\u5f62\u7684\u6574\u6570\u53ef\u4ee5\u4e3a\u8d1f\u6570\uff0c\u8981\u53d6max\uff0c\u56e0\u6b64\u8fb9\u754c\u503c\u4e3a\u8d1f\u65e0\u7a77\uff08-INF\uff09\nconst int N = 510, INF = 0x3f3f3f3f;\n// \u72b6\u6001\u8868\u8fbe\u5f0f\uff0c\u5230\u8fbe\u7b2ci\u884c\u7b2cj\u5217\u7684\u5143\u7d20\u65f6\u6240\u6709\u8def\u5f84\u7684\u96c6\u5408\uff0c\u5bf9\u5e94\u7684\u503c\u4e3a\u8def\u5f84\u6570\u5b57\u4e4b\u548c\u6700\u5927\u503c\nint f[N][N];\nint n;\n\nint main(){\n    cin &gt;&gt; n;\n    // \u5904\u7406\u8fb9\u754c\u6761\u4ef6\n    for(int i = 0; i &lt;= n; i++)\n        //\u6ce8\u610f\u662f i + 1\n        for(int j = 0; j &lt;= i + 1; j++)\n            f[i][j] = -INF;\n    // \u8f93\u5165\u4e09\u89d2\u5f62\n    for(int i = 1; i &lt;= n; i++)\n        for(int j = 1; j &lt;= i; j++)\n            cin &gt;&gt; f[i][j];\n    // \u4ece\u7b2c\u4e8c\u884c\u5f00\u59cb\u8ba1\u7b97\u72b6\u6001\u65b9\u7a0b\n    for(int i = 2; i &lt;= n; i++){\n        for(int j = 1; j &lt;= i; j++){\n            f[i][j] += max(f[i - 1][j - 1], f[i - 1][j]);\n        }\n    }\n\n    // \u8fd9\u91ccres\u4e00\u5b9a\u8981\u8bbe\u7f6e\u4e3a\u8d1f\u65e0\u7a77\uff0c\u56e0\u4e3a\u6570\u5b57\u4e4b\u548c\u53ef\u80fd\u4e3a\u8d1f\u6570\n    int res = -INF;\n    // \u904d\u5386\u4e09\u89d2\u5f62\u5e95\u5c42\u53d6\u5f97\u6700\u5927\u503c\n    for(int j = 1; j &lt;= n; j++)\n        res = max(res, f[n][j]);\n\n    cout &lt;&lt; res &lt;&lt; endl;\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)</p> <p>\u7f3a\u70b9\u662f\u9700\u8981\u5904\u7406\u8fb9\u754c\u6761\u4ef6</p>"},{"location":"algorithm/algorithm_basic/#_20","title":"\u4f18\u5316\u7248","text":"<p>\u4ece\u4e0b\u5f80\u4e0a\u904d\u5386</p> <p>\u4f18\u5316\u70b9\uff1a\u7531\u4e8e\u6700\u7ec8\u6c47\u805a\u4e8e\u4e00\u70b9\uff0c\u56e0\u6b64\u5c11\u4e86\u4e00\u6b21for\u5faa\u73af\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u5904\u7406\u8fb9\u754c\u6761\u4ef6</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 510;\nint f[N][N];\nint n;\n\nint main(){\n    cin &gt;&gt; n;\n    for(int i = 1; i &lt;= n; i++)\n        // \u8fd9\u91cc\u6ce8\u610f\u662fj &lt;= i \u800c\u4e0d\u662fj &lt;= n\n        for(int j = 1; j &lt;= i; j++)\n            cin &gt;&gt; f[i][j];\n    for(int i = n; i &gt;= 1; i--){\n        for(int j = n; j &gt;= 1; j--){\n            f[i][j] += max(f[i + 1][j], f[i + 1][j + 1]);\n        }\n    }\n\n    cout &lt;&lt; f[1][1] &lt;&lt; endl;\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)</p>"},{"location":"algorithm/algorithm_basic/#_21","title":"\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217","text":""},{"location":"algorithm/algorithm_basic/#_22","title":"\u6734\u7d20\u7248","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 1010;\n\n// \u72b6\u6001\u8868\u8fbe\u5f0f\uff0cf[i]\u8868\u793a\u7b2ci\u4e2a\u5143\u7d20\u7ed3\u5c3e\u7684\u6240\u6709\u5355\u8c03\u9012\u589e\u5b50\u5e8f\u5217\u7684\u96c6\u5408\n// f[i]\u7684\u503c\u8868\u793a\u8fd9\u4e9b\u96c6\u5408\u7684\u5e8f\u5217\u6700\u957f\u5ea6\nint f[N];\n// \u5b58\u50a8\u5e8f\u5217\nint a[N];\nint n;\n\nint main(){\n    cin &gt;&gt; n;\n    for(int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; a[i];\n    // res\u7528\u4e8e\u83b7\u53d6\u6bcf\u4e2a\u5143\u7d20\u7ed3\u5c3e\u7684\u6700\u5927\u5355\u8c03\u9012\u589e\u5b50\u5e8f\u5217\u957f\u5ea6\n    int res = 1;\n    for(int i = 1; i &lt;= n; i++){\n        f[i] = 1;\n        // \u904d\u5386\u524dj\u4e2a\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u7ed3\u5c3e\u7684\u6700\u5927\u5355\u8c03\u9012\u589e\u5b50\u5e8f\u5217\u957f\u5ea6\u4e3af[j]\n        for(int j = 1; j &lt; i; j++){\n            // \u5982\u679c\u7b2ci\u4e2a\u5143\u7d20\u6bd4\u7b2cj\u4e2a\u5143\u7d20\u5927\uff0c\u8bf4\u660e\u7b2ci\u4e2a\u5143\u7d20\u53ef\u4ee5\u52a0\u5165\u8be5\u9012\u589e\u5b50\u5e8f\u5217\uff0c\u5219\u957f\u5ea6\u52a01\n            if(a[i] &gt; a[j]) f[i] = max(f[i], f[j] + 1);\n        }\n        res = max(res, f[i]);\n    }\n\n    cout &lt;&lt; res &lt;&lt; endl;\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p>"},{"location":"algorithm/algorithm_basic/#_23","title":"\u4f18\u5316\u7248","text":"<p>\u52a8\u6001\u89c4\u5212 + \u4e8c\u5206\u67e5\u627e</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 1010;\n// tails[i]\u8bb0\u5f55\u5e8f\u5217\u5c3e\u90e8\u5143\u7d20, len\u8868\u793a\u5f53\u524d\u5e8f\u5217\u7684\u957f\u5ea6\nint tails[N], len;\nint a[N];\nint n;\n\nint main(){\n    cin &gt;&gt; n;\n    for(int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; a[i];\n    // \u521d\u59cb\u5316tails\n    tails[++len] = a[1];\n    // \u4ece\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5f00\u59cb\u904d\u5386\n    for(int i = 2; i &lt;= n; i++){\n        // \u5982\u679c\u5f53\u524d\u5143\u7d20\u6bd4\u5e8f\u5217\u5c3e\u90e8\u5143\u7d20\u5927\uff0c\u8bf4\u660e\u8be5\u5143\u7d20\u53ef\u76f4\u63a5\u7eb3\u5165\u8be5\u5e8f\u5217\uff0c\u5e8f\u5217\u957f\u5ea6\u52a0\u4e00\n        if(a[i] &gt; tails[len]) \n            tails[++len] = a[i];\n        // \u5982\u679c\u5f53\u524d\u5143\u7d20\u6bd4\u5e8f\u5217\u5c3e\u90e8\u5143\u7d20\u5c0f\uff0c\u6839\u636e\u5143\u7d20\u4e4b\u95f4\u5dee\u8ddd\u8d8a\u5c0f\u5e8f\u5217\u957f\u5ea6\u8d8a\u53ef\u80fd\u957f\u7684\u539f\u7406\n        // \u627e\u5230\u5e8f\u5217\u4e2d\u6bd4\u5f53\u524d\u5143\u7d20\u5927\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5c06\u5176\u53d6\u4ee3\u4e3a\u5f53\u524d\u5143\u7d20a[i]\n        // \u5e8f\u5217\u957f\u5ea6\u4e0d\u53d8\n        else{\n            int l = 1, r = len;\n            while(l &lt; r){\n                int mid = (l + r) &gt;&gt; 1;\n                if(tails[mid] &gt;= a[i]) \n                    r = mid;\n                else \n                    l = mid + 1;\n            }\n            tails[l] = a[i];\n        }\n    }\n    // \u6700\u540e\u8f93\u51falen\uff0clen\u4e3a\u6700\u957f\u5b50\u5e8f\u5217\u957f\u5ea6\n    cout &lt;&lt; len &lt;&lt; endl;\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(nlog(n))\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p>"},{"location":"algorithm/algorithm_basic/#_24","title":"\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217","text":""},{"location":"algorithm/algorithm_basic/#_25","title":"\u6734\u7d20\u7248","text":"<p>\u9898\u89e3\u8be6\u89c1\uff1ahttps://www.acwing.com/solution/content/8111/</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 1010, M = 1010;\nint f[N][M];\nint n, m;\nchar a[N], b[M];\n\nint main(){\n    cin &gt;&gt; n &gt;&gt; m &gt;&gt; a + 1 &gt;&gt; b + 1;\n    for(int i = 1; i &lt;= n; i++){\n        for(int j = 1; j &lt;= m; j++){\n            f[i][j] = max(f[i - 1][j], f[i][j - 1]);\n            if(a[i] == b[j]) f[i][j] = max(f[i][j], f[i - 1][j - 1] + 1);\n        }\n    }\n\n    cout &lt;&lt; f[n][m] &lt;&lt; endl;\n}\n</code></pre>"},{"location":"algorithm/algorithm_basic/#dp_1","title":"\u533a\u95f4DP","text":"<p>https://www.acwing.com/problem/content/284/</p>"},{"location":"algorithm/algorithm_basic/#_26","title":"\u5c0f\u6280\u5de7","text":""},{"location":"algorithm/algorithm_basic/#memset","title":"memset","text":"<p>\u8be6\u89c1https://blog.csdn.net/Supreme7/article/details/115431235</p> <pre><code>#include &lt;cstring&gt;\nvoid *memset(void *str, int c, size_t n)\n</code></pre> <p>\u7ed9\u524dn\u4e2a\u5b57\u8282\u8d4b\u503cc   </p> <p>\u5e38\u7528</p> <ul> <li>\u521d\u59cb\u5316\u4e3a0:\uff1amemset(a,-1,sizeof(a))</li> <li>\u521d\u59cb\u5316\u4e3a-1\uff1amemset(a,0,sizeof(a))</li> <li>\u521d\u59cb\u5316\u4e3a\u65e0\u7a77\u5927\uff1amemset(a,0x3f,sizeof(a))</li> </ul>"},{"location":"algorithm/algorithm_basic/#_27","title":"\u65e0\u7a77\u5927","text":"<p>\u8be6\u89c1 https://blog.csdn.net/qq_40816078/article/details/82459599#:~:text=\u51c6\u786e\u7684\u8bf4\uff1a%20inf</p> <p>\u4e00\u822c\u8bbe\u7f6e\u65e0\u7a77\u5927\u4e3aINF=0x3f3f3f3f</p> <p>\u521d\u59cb\u5316\u4e3a\u65e0\u7a77\u5927\uff1amemset(a,0x3f,sizeof(a))</p>"},{"location":"algorithm/algorithm_basic/#stl","title":"STL\u5bb9\u5668","text":""},{"location":"algorithm/algorithm_basic/#_28","title":"\u4f18\u5148\u7ea7\u961f\u5217","text":"<p>https://blog.csdn.net/weixin_36888577/article/details/79937886</p>"},{"location":"algorithm/leetcode/","title":"Leetcode","text":""},{"location":"algorithm/leetcode/#_1","title":"\u5237\u524d\u6307\u5f15","text":"<p>\u672c\u7b14\u8bb0\u8bb0\u5f55\u672c\u4eba\u5237\u9898\u601d\u8def</p>"},{"location":"algorithm/leetcode/#_2","title":"\u5237\u9898\u7f51\u7ad9\u63a8\u8350","text":"<p>\u4ee5\u4e0b\u7f51\u7ad9\u63d0\u4f9b\u4e86\u6bd4\u8f83\u7cfb\u7edf\u7684\u5237\u9898\u9898\u5355\u4ee5\u53ca\u5237\u9898\u601d\u8def\u8bb2\u89e3</p> <ul> <li>\u4ee3\u7801\u968f\u60f3\u5f55\uff08\u914d\u5408B\u7ad9\u89c6\u9891\u98df\u7528\uff09https://programmercarl.com/</li> <li>labuladong\u7684\u7b97\u6cd5\u7b14\u8bb0 https://labuladong.online/algo/home/</li> </ul>"},{"location":"algorithm/leetcode/#list","title":"\u534e\u4e3a\u63a8\u8350\u9898\u578bList","text":"<p>\u9012\u5f52\uff1aleetcode70\u3001112\u3001509 \u5206\u6cbb\uff1aleetcode23\u3001169\u3001240 \u5355\u8c03\u6808\uff1aleetcode84\u300185\u3001739\u3001503 \u5e76\u67e5\u96c6\uff1aleetcode547\u3001200\u3001684 \u6ed1\u52a8\u7a97\u53e3\uff1aleetcode209\u30013\u30011004\u30011208 \u524d\u7f00\u548c\uff1aleetcode724\u3001560\u3001437\u30011248 \u5dee\u5206\uff1aleetcode1094\u3001121\u3001122 \u62d3\u6251\u6392\u5e8f\uff1aleetcode210 \u5b57\u7b26\u4e32\uff1aleetcode5\u300120\u300143\u300193 \u4e8c\u5206\u67e5\u627e\uff1aleetcode33\u300134 BFS\uff1aleetcode127\u3001139\u3001130\u3001529\u3001815 DFS&amp;\u56de\u6eaf\uff1aleetcode934\u3001685\u30011102\u3001531\u3001533\u3001113\u3001332\u3001337 \u52a8\u6001\u89c4\u5212\uff1aleetcode213\u3001123\u300162\u300163\u3001361\u30011230 \u8d2a\u5fc3\uff1aleetcode55\u3001435\u3001621\u3001452 \u5b57\u5178\u6811\uff1aleetcode820\u3001208\u3001648</p>"},{"location":"algorithm/leetcode/#_3","title":"\u6570\u7ec4","text":""},{"location":"algorithm/leetcode/#704","title":"704 \u4e8c\u5206\u67e5\u627e","text":"<pre><code>class Solution {\npublic:\n    int search(vector&lt;int&gt;&amp; nums, int target) {\n        int n = nums.size();\n        // \u5b9a\u4e49\u641c\u7d22\u8303\u56f4\u4e3a\u5de6\u95ed\u53f3\u5f00\n        // \u521d\u59cb\u641c\u7d22\u8303\u56f4\u4e3a[o,n)\n        int l = 0, r = n;\n        // \u56e0\u4e3a\u662f\u5de6\u95ed\u53f3\u5f00\uff0c\u6240\u4ee5l == r\u65f6[l,r)\u6ca1\u6709\u610f\u4e49\n        // \u56e0\u6b64\u662fl &lt; r \u4e0d\u662fl &lt;= r\n        while(l &lt; r){\n            // \u4e8c\u5206\u641c\u7d22\u6838\uff1a\u53d6\u4e2d\u95f4\u7d22\u5f15\n            int mid = l + r &gt;&gt; 1;\n            // \u5982\u679ctarget &lt; nums[mid] \u8bf4\u660e\u53f3\u8fb9\u754cr\u9700\u8981\u66f4\u65b0\uff0c\u66f4\u65b0\u4e3amid\n            // \u4e0d\u662fr == mid - 1\uff0c\u56e0\u4e3a\u8fd9\u662f\u5de6\u95ed\u53f3\u5f00\u533a\u95f4\uff0ctarget\u4e00\u5b9a\u4e0d\u5728mid\u4e0a\n            if(target &lt; nums[mid]) r = mid;\n            // \u5982\u679ctarget &gt; nums[mid] \u8bf4\u660e\u5de6\u8fb9\u754cl\u9700\u8981\u66f4\u65b0\uff0c\u66f4\u65b0\u4e3amid + 1\n            // l == mid + 1\uff0c\u56e0\u4e3a\u5de6\u95ed\u53f3\u5f00\u533a\u95f4\uff0ctarget\u53ef\u80fd\u4e3a\u5728mid + 1\n            else if(target &gt; nums[mid]) l = mid + 1;\n            // \u5982\u679ctarget == nums[mid]\uff0cmid\u4e3a\u6211\u4eec\u9700\u8981\u7684\u7d22\u5f15\uff0c\u8fd4\u56de\n            else    return mid;\n        }\n        return -1;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(log n)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)</p>"},{"location":"algorithm/leetcode/#27","title":"27 \u79fb\u9664\u5143\u7d20","text":"<p>\u672c\u9898\u91cd\u70b9\uff1a\u6570\u7ec4\u5220\u9664\u7b2ci\u4e2a\u5143\u7d20\u7684\u65b9\u6cd5\uff1a\u5c06i\u4e4b\u540e\u7684\u5143\u7d20\u4f9d\u6b21\u5de6\u79fb1\u4f4d</p>"},{"location":"algorithm/leetcode/#_4","title":"\u66b4\u529b\u505a\u6cd5","text":"<pre><code>class Solution {\npublic:\n    int removeElement(vector&lt;int&gt;&amp; nums, int val) {\n        int size = nums.size();\n        for(int i = 0; i &lt; size; i++){\n            // \u627e\u5230\u6570\u503c\u7b49\u4e8eval\u7684\u5143\u7d20\n            if(val == nums[i]){\n                // \u6570\u7ec4\u5220\u9664\u7b2ci\u4e2a\u5143\u7d20\u7684\u65b9\u6cd5\uff1a\u5c06i\u4e4b\u540e\u7684\u5143\u7d20\u4f9d\u6b21\u5de6\u79fb1\u4f4d\n                for(int j = i + 1; j &lt; size; j++){\n                    nums[j - 1] = nums[j];\n                }\n                // \u5220\u9664\u7b2ci\u4e2a\u5143\u7d20\uff0c\u7b2ci\u4e2a\u5143\u7d20\u53d8\u6210\u65b0\u5143\u7d20\uff0c\u4e0b\u4e00\u6b21\u4f9d\u7136\u4ecei\u5f00\u59cb\u904d\u5386\n                i--;\n                // \u5220\u9664\u5143\u7d20\u540e\uff0c\u6570\u7ec4\u5927\u5c0f\u51cf1\n                size--;\n            }\n        }\n        // \u6570\u7ec4\u5269\u4f59\u7684\u90fd\u662f\u4e0d\u7b49\u4e8eval\u7684\u5143\u7d20\n        // \u56e0\u6b64\u8fd4\u56de\u6570\u7ec4\u5927\u5c0f\u5373\u53ef\n        return size;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</p>"},{"location":"algorithm/leetcode/#_5","title":"\u53cc\u6307\u9488\u6cd5","text":"<pre><code>class Solution {\npublic:\n    int removeElement(vector&lt;int&gt;&amp; nums, int val) {\n        // \u6162\u6307\u9488\u6307\u5411\u65b0\u6570\u7ec4\u672b\u5c3e\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff08\u63d2\u5165\u7684\u4f4d\u7f6e\uff09\n        // \u65b0\u6570\u7ec4\u5143\u7d20\uff1a\u6570\u503c\u4e0d\u7b49\u4e8eval\u7684\u5143\u7d20\n        int slowIndex = 0;\n        // \u5feb\u6307\u9488\u6307\u5411\u4ece\u5de6\u5230\u53f3\u6570\u503c\u4e0d\u7b49\u4e8eval\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\n        for(int fastIndex = 0; fastIndex &lt; nums.size(); fastIndex++){\n            if(val != nums[fastIndex]){\n                // \u5982\u679cfastIndex\u6307\u5411\u7684\u5143\u7d20\u4e0d\u7b49\u4e8eval\uff0c\u9700\u8981\u5c06\u5176\u52a0\u5165\u5230\u65b0\u6570\u7ec4\u4e2d\n                nums[slowIndex] = nums[fastIndex];\n                slowIndex++;\n            }\n        }\n        // \u6162\u6307\u9488\u6307\u5411\u65b0\u6570\u7ec4\u672b\u5c3e\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\n        // \u56e0\u4e3a\u5143\u7d20\u7d22\u5f15\u4ece0\u5f00\u59cb\uff0c\u6240\u4ee5slowIndex\u5c31\u662f\u5143\u7d20\u4e2a\u6570\n        return slowIndex;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <ul> <li>\u53ea\u904d\u5386\u4e86\u4e00\u6b21\u6570\u7ec4</li> </ul> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</p>"},{"location":"algorithm/leetcode/#977","title":"977 \u6709\u5e8f\u6570\u7ec4\u7684\u5e73\u65b9","text":""},{"location":"algorithm/leetcode/#_6","title":"\u66b4\u529b\u505a\u6cd5","text":"<p>\u6bcf\u4e2a\u6570\u5e73\u65b9\u4e4b\u540e\u518d\u4f7f\u7528<code>sort()</code>\u6392\u5e8f</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; sortedSquares(vector&lt;int&gt;&amp; nums) {\n        for(int i = 0; i &lt; nums.size(); i++){\n            nums[i] *= nums[i];\n        }\n        sort(nums.begin(),nums.end());\n        return nums;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a \\(O(n + nlogn)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a \\(O(n)\\)</p>"},{"location":"algorithm/leetcode/#_7","title":"\u53cc\u6307\u9488\u6cd5","text":"<p>\u89c2\u5bdf\u6570\u7ec4\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u4f4d\u4e8e\u6570\u7ec4\u4e24\u7aef\u7684\u6570\u7684\u7edd\u5bf9\u503c\u6bd4\u4e2d\u95f4\u5927\uff0c\u56e0\u6b64\u5b83\u4eec\u7684\u5e73\u65b9\u503c\u4e5f\u6bd4\u4e2d\u95f4\u5927</p> <p>\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4ece\u4e24\u7aef\u5411\u4e2d\u95f4\u904d\u5386\u6bd4\u8f83\uff0c\u5c06\u8f83\u5927\u503c\u653e\u5165\u65b0\u6570\u7ec4\u4e2d</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; sortedSquares(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        // \u65b0\u6570\u7ec4\u672b\u5c3e\u5143\u7d20\u7684\u4f4d\u7f6e\n        int k = n - 1;\n        // \u65b0\u5f00\u4e00\u4e2a\u6570\u7ec4\n        vector&lt;int&gt; res(n, 0);\n        // \u5de6\u95ed\u53f3\u95ed\u533a\u95f4[0,k]\n        int left = 0, right = k;\n        // \u5de6\u95ed\u53f3\u95ed\u533a\u95f4[left,right]\n        while(left &lt;= right){\n            int leftSquare = nums[left] * nums[left];\n            int rightSquare = nums[right] * nums[right];\n            if(leftSquare &gt; rightSquare){\n                // \u9898\u76ee\u8981\u6c42\u6570\u7ec4\u975e\u9012\u51cf\u987a\u5e8f\uff0c\u56e0\u6b64\u8f83\u5927\u503c\u653e\u5728\u6570\u7ec4\u672b\u5c3e\n                res[k--] = leftSquare;\n                left++;\n            }\n            else{\n                res[k--] = rightSquare;\n                right--;\n            }\n        }\n        return res;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a \\(O(n + nlogn)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a \\(O(n)\\)</p>"},{"location":"algorithm/leetcode/#209","title":"209 \u957f\u5ea6\u6700\u5c0f\u7684\u5b50\u6570\u7ec4","text":""},{"location":"algorithm/leetcode/#_8","title":"\u66b4\u529b\u505a\u6cd5\uff08\u4e0d\u80fd\u901a\u8fc7\uff09","text":"<pre><code>class Solution {\npublic:\n    int minSubArrayLen(int target, vector&lt;int&gt;&amp; nums) {\n        int len = INT_MAX;\n        for(int i = 0; i &lt; nums.size(); i++){\n            int sum = 0;\n            for(int j = i; j &lt; nums.size(); j++){\n                sum += nums[j];\n                if(sum &gt;= target)\n                    len = min(len, j - i + 1);\n            }\n        }\n        return len == INT_MAX ? 0 : len;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</p>"},{"location":"algorithm/leetcode/#_9","title":"\u53cc\u6307\u9488\u6cd5","text":"<pre><code>class Solution {\npublic:\n    const int INF = 0x3f3f3f3f;\n    int minSubArrayLen(int target, vector&lt;int&gt;&amp; nums) {\n        int leftIndex = 0;\n        int len = INF;\n        int sum = 0;\n        // \u79fb\u52a8\u6ed1\u52a8\u7a97\u53e3\u51fa\u53e3\n        for(int rightIndex = leftIndex; rightIndex &lt; nums.size(); rightIndex++){\n            sum += nums[rightIndex];\n            // \u79fb\u52a8\u6ed1\u52a8\u7a97\u53e3\u5165\u53e3\n            while(sum &gt;= target){\n                len = min(len, rightIndex - leftIndex + 1);\n                // \u5173\u952e\u6b65\u9aa4\uff0c\u4e0d\u8981\u5fd8\u8bb0\uff01\n                sum -= nums[leftIndex];\n                leftIndex++;\n            }\n        }\n        return len == INF ? 0 : len;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)</p> <ul> <li>rightIndex\u79fb\u52a8\u4e86n\u6b21\uff0cleftIndex\u79fb\u52a8\u4e86n\u6b21\uff0c\u5171\u79fb\u52a82n\u6b21</li> </ul> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)</p>"},{"location":"algorithm/leetcode/#54","title":"54 \u87ba\u65cb\u77e9\u9635","text":"<p>\u548c\u87ba\u65cb\u77e9\u9635II n\u884cn\u5217 \u4e0d\u540c\uff0c\u87ba\u65cb\u77e9\u9635\u8fd9\u9053\u9898\u662fm\u884cn\u5217\uff0c\u8fd9\u610f\u5473\u7740\uff1a</p> <ul> <li>\u6211\u4eec\u5982\u679c\u6309\u87ba\u65cb\u77e9\u9635\u5de6\u95ed\u53f3\u5f00\u533a\u95f4\u4e0d\u4e00\u5b9a\u80fd\u904d\u5386\u5b8c\u6240\u6709\u5143\u7d20\uff0c\u4f8b\u5982\u5bf9\u4e8e1\u884c2\u5217[1,2]\uff0c\u6309\u87ba\u65cb\u77e9\u9635II\u7684\u505a\u6cd5\u53ea\u80fd\u904d\u5386\u5143\u7d201 -&gt; \u91c7\u7528\u5de6\u95ed\u53f3\u95ed\u533a\u95f4</li> <li>\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u56db\u4e2a\u53d8\u91cf\uff1a\u8d77\u59cb\u884c\u548c\u7ec8\u6b62\u884c\uff0c\u8d77\u59cb\u5217\u548c\u7ec8\u6b62\u5217</li> <li>\u5e76\u4e14\u6211\u4eec\u65e0\u6cd5\u786e\u5b9a\u904d\u5386\u7684\u6b21\u6570\uff0c\u56e0\u4e3a\u884c\u5217\u957f\u5ea6\u4e0d\u540c -&gt; \u91c7\u7528while(true)</li> </ul> <p>\u672c\u9898\u601d\u8def\u5927\u81f4\u5982\u4e0b\u56fe\uff1a</p> <p></p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; spiralOrder(vector&lt;vector&lt;int&gt;&gt;&amp; matrix) {\n        if(matrix.size() == 0 || matrix[0].size() == 0)\n            return {};\n\n        vector&lt;int&gt; ans;\n        int startCol = 0, endCol = matrix[0].size() - 1; // \u8bb0\u5f55\u884c\u7684\u5f00\u5934\u4e0e\u7ed3\u5c3e\n        int startRow = 0, endRow = matrix.size() - 1; // \u8bb0\u5f55\u5217\u7684\u5f00\u5934\u4e0e\u7ed3\u5c3e\n\n        while(true)\n        {\n            // \u4ece\u5de6\u5f80\u53f3\n            for(int i = startCol; i &lt;= endCol; i++)\n                ans.push_back(matrix[startRow][i]);\n            if(++startRow &gt; endRow) break;\n\n            // \u4ece\u4e0a\u5f80\u4e0b\n            for(int i = startRow; i &lt;= endRow; i++)\n                ans.push_back(matrix[i][endCol]);\n            if(--endCol &lt; startCol) break;\n\n            // \u4ece\u53f3\u5f80\u5de6\n            for(int i = endCol; i &gt;= startCol; i--)\n                ans.push_back(matrix[endRow][i]);\n            if(--endRow &lt; startRow) break;\n\n            // \u4ece\u4e0b\u5f80\u4e0a\n            for(int i = endRow; i &gt;= startRow; i--)\n                ans.push_back(matrix[i][startCol]);\n            if(++startCol &gt; endCol) break;\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(mn)\uff0c\u5176\u4e2d m \u548c n \u5206\u522b\u662f\u8f93\u5165\u77e9\u9635\u7684\u884c\u6570\u548c\u5217\u6570\u3002\u77e9\u9635\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u8981\u88ab\u8bbf\u95ee\u4e00\u6b21\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\u3002\u9664\u4e86\u8f93\u51fa\u6570\u7ec4\u4ee5\u5916\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u662f\u5e38\u6570\u3002</p>"},{"location":"algorithm/leetcode/#59-ii","title":"59 \u87ba\u65cb\u77e9\u9635II","text":"<p>\u601d\u8def\u53c2\u8003\uff1ahttps://programmercarl.com/0059.%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5II.html#%E6%80%9D%E8%B7%AF</p> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; generateMatrix(int n) {\n       vector&lt;vector&lt;int&gt;&gt; res(n, vector&lt;int&gt;(n, 0));\n       // \u786e\u5b9a\u6bcf\u4e00\u5708\u7684\u8d77\u70b9(startx, starty)\n       int startx = 0, starty = 0; \n       // \u786e\u5b9a\u904d\u5386\u7684\u5708\u6570\n       // \u8ba1\u7b97\u65b9\u6cd5\uff1a\u4ee5\u7b2c\u4e00\u5708\u4e3a\u4f8b\uff0c\u8d70\u5b8c\u7b2c\u4e00\u5708\uff0c\u7b2c\u4e00\u884c\u548c\u6700\u540e\u4e00\u884c\u90fd\u88ab\u904d\u5386\u8fc7\uff0c\u5bf9\u79f0\u904d\u5386\n       // \u56e0\u6b64\u904d\u5386\u5b8c\u6574\u7684\u5708\u6570\u91cf\u4e3an/2\u6b21\n       // \u5982\u679cn\u662f\u5947\u6570\uff0c\u6700\u540e\u4f1a\u5269\u4e0b\u4e2d\u5fc3\u70b9mid\u672a\u904d\u5386\uff0c\u989d\u5916\u5904\u7406\n       int loop = n / 2;\n       // \u6211\u4eec\u89c4\u5b9a\u6bcf\u4e2a\u5708\u5206\u4e3a\u56db\u6b21\u904d\u5386\uff0c\u6bcf\u6b21\u904d\u5386\u5de6\u95ed\u53f3\u5f00\u533a\u95f4\uff08\u4e0d\u5305\u542b\u6bcf\u884c/\u6bcf\u5217\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff09\n       // offset\u8868\u793a\u53f3\u8fb9\u754c\u6536\u7f29\u4e2a\u6570\n       // \u7528\u4e8e\u8ba1\u7b97\u6bcf\u884c/\u6bcf\u5217\u904d\u5386\u957f\u5ea6 n - offset\n       int offset = 1;\n       // count\u4e3a\u5f85\u586b\u5145\u5143\u7d20\u503c\n       int count = 1;\n       while(loop--){\n            // \u63d0\u524d\u5b9a\u4e49\u5750\u6807\uff0c\u63a5\u4e0b\u6765\u904d\u5386\u7684\u65f6\u5019\uff0c\u6bcf\u6b21\u5750\u6807\u8ba1\u7b97\u90fd\u9700\u8981\u4f7f\u7528\u4e0a\u4e00\u6b21\u5750\u6807\u4f4d\u7f6e\n            int i = startx, j = starty;\n            // \u4e0a\u884c\u904d\u5386\u957f\u5ea6n - offset,\u904d\u5386\u533a\u95f4\u4e3a[starty, n - offset)\n            // \u8fd9\u91cc\u6761\u4ef6\u4e3aj &lt; n - offset \u56e0\u4e3a\u662f\u5de6\u95ed\u53f3\u5f00\u533a\u95f4\n            for(j; j &lt; n - offset; j++){\n                res[i][j] = count++;\n            }\n            // \u53f3\u5217\u904d\u5386\u957f\u5ea6n - offset,\u904d\u5386\u533a\u95f4\u4e3a[startx, n - offset)\n            // \u8fd9\u91cc\u6761\u4ef6\u4e3ai &lt; n - offset \u56e0\u4e3a\u662f\u5de6\u95ed\u53f3\u5f00\u533a\u95f4\n            for(i; i &lt; n - offset; i++){\n                res[i][j] = count++;\n            }\n            // \u4e0b\u884c\u904d\u5386\u957f\u5ea6n - offset,\u904d\u5386\u533a\u95f4\u4e3a[n - offset, starty)\n            // \u8fd9\u91cc\u6761\u4ef6\u4e3aj &gt; starty \u56e0\u4e3a\u662f\u5de6\u95ed\u53f3\u5f00\u533a\u95f4\n            for(j; j &gt; starty; j--){\n                res[i][j] = count++;\n            }\n            // \u5de6\u5217\u904d\u5386\u957f\u5ea6n - offset,\u904d\u5386\u533a\u95f4\u4e3a[n - offset, startx)\n            // \u8fd9\u91cc\u6761\u4ef6\u4e3ai &gt; startx \u56e0\u4e3a\u662f\u5de6\u95ed\u53f3\u5f00\u533a\u95f4\n            for(i; i &gt; startx; i--){\n                res[i][j] = count++;\n            }\n            // \u904d\u5386\u4e00\u5708\u5b8c\u6210\uff0c\u66f4\u65b0\u53c2\u6570\n            // \u66f4\u65b0\u4e0b\u4e00\u4e2a\u8d77\u70b9\uff08\u6cbf\u53f3\u4e0b\u5bf9\u89d2\u7ebf\uff09\n            startx++;\n            starty++;\n            // \u66f4\u65b0\u4e0b\u4e00\u6b21\u904d\u5386\u957f\u5ea6\uff08\u6bcf\u8d70\u4e00\u5708\uff0c\u904d\u5386\u957f\u5ea6\u51cf1\uff09\n            // \u4e3a\u4ec0\u4e48\u51cf1: \u56e0\u4e3a\u6bcf\u8d70\u4e00\u5708\u5f85\u904d\u5386\u533a\u95f4\u7684\u5de6\u8fb9\u754c\u548c\u53f3\u8fb9\u754c\u90fd\u4f1a\u6536\u7f29\n            // offset\u8868\u793a\u5f85\u904d\u5386\u533a\u95f4\u7684\u53f3\u8fb9\u754c\u6536\u7f29\u4e2a\u6570\n            // \u6211\u4eec\u7684\u5de6\u8fb9\u754c\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u904d\u5386\uff0c\u56e0\u4e3a\u6bcf\u6b21\u6211\u4eec\u90fd\u8bbe\u5b9a\u5de6\u8fb9\u754c\u4e3a\u65b0\u7684startx/starty\n            // \u56e0\u6b64\u53ea\u6709\u53f3\u8fb9\u754c\u5c31\u88ab\u904d\u5386\u8fc7\u4e86\uff0c\u9700\u8981\u51cf1\uff0c\u5bf9\u5e94offset + 1\n            offset++;\n       }\n       if(n % 2 != 0){\n            int mid = n / 2;\n            res[mid][mid] = count;\n       }\n       return res;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n^2)\\): \u6a21\u62df\u904d\u5386\u4e8c\u7ef4\u77e9\u9635\u7684\u65f6\u95f4</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(1)\\)</p>"},{"location":"algorithm/leetcode/#_10","title":"\u533a\u95f4\u548c","text":"<p>\u94fe\u63a5</p> <p>https://kamacoder.com/problempage.php?pid=1070</p> <p>\u672c\u9898\u5c31\u662f\u524d\u7f00\u548c\u6a21\u677f</p>"},{"location":"algorithm/leetcode/#53","title":"53 \u6700\u5927\u5b50\u6570\u7ec4\u548c","text":""},{"location":"algorithm/leetcode/#_11","title":"\u524d\u7f00\u548c","text":"<p>\u770b\u5230\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u548c\u4f1a\u60f3\u5230\u4f7f\u7528\u524d\u7f00\u548c</p> <p>\u4f46\u662f\u4e0d\u540c\u7684\u5730\u65b9\u5728\u4e8e\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u548c\u6700\u5927\uff0c\u4e5f\u5c31\u662f\u8bf4\u5047\u8bbe\u533a\u95f4<code>[j,i]</code>\u7684\u548c\u6700\u5927\uff0c<code>sum[i] - sum[j - 1]</code>\u6700\u5927</p> <p>\u5f53\u6211\u4eec\u904d\u5386\u5230<code>i</code>\u65f6\uff0c<code>sum[i]</code>\u53ef\u4ee5i\u901a\u8fc7<code>sum[i] = sum[i - 1] + num[i]</code>\u83b7\u5f97\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u770b\u4f5c\u662f\u5b9a\u503c</p> <p>\u90a3\u4e48\u60f3\u8981\u548c\u6700\u5927\uff0c\u5c31\u9700\u8981<code>sum[j - 1]</code>\u6700\u5c0f\uff0c\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u904d\u5386\u7684\u65f6\u5019\u7ef4\u62a4\u4e00\u4e2a\u6700\u5c0f\u503c\u524d\u7f00\u548c<code>preMin</code>\u5373\u53ef</p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8ba1\u7b97\u987a\u5e8f\u4e0d\u80fd\u4e71\uff0c\u5fc5\u987b\u662f\uff1a</p> <ol> <li>\u8ba1\u7b97\u524d\u7f00\u548cpre</li> <li>\u8ba1\u7b97\u8fde\u7eed\u5b50\u6570\u7ec4\u548cans</li> <li>\u66f4\u65b0\u6700\u5c0f\u524d\u7f00\u548c</li> </ol> <p>\u5982\u679cStep2 \u548c Step3\u987a\u5e8f\u4ea4\u6362\uff0c\u90a3\u4e48\u4f1a\u51fa\u73b0<code>sum[i] - sum[j]</code>\u7684\u60c5\u51b5\uff0c\u5bf9\u5e94\u7684\u533a\u95f4\u662f\u7a7a\u7684\uff0c\u800c\u672c\u9898\u8981\u6c42\u5b50\u6570\u7ec4\u81f3\u5c11\u542b\u6709\u4e00\u4e2a\u5143\u7d20</p> <pre><code>class Solution {\npublic:\n    int maxSubArray(vector&lt;int&gt;&amp; nums) {\n        int pre = 0;\n        // preMin\u521d\u59cb\u5316\u9700\u8981\u4e3a0\n        // \u4fdd\u8bc1\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684ans\u4e3apre\n        int preMin = 0;\n        // ans\u53ef\u80fd\u4e3a\u8d1f\u6570\uff0c\u56e0\u6b64\u9700\u8981\u5b9a\u4e49\u4e3a\u6700\u5c0f\u503c\n        int ans = INT_MIN;\n        for(int num : nums){\n            // \u66f4\u65b0\u524d\u7f00\u548c\n            pre += num;\n            ans = max(ans, pre - preMin);\n            preMin = min(preMin, pre);\n        }\n        return ans;\n    }\n};\n</code></pre> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u5176\u4e2d n \u4e3a nums \u7684\u957f\u5ea6\u3002</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\u3002\u4ec5\u7528\u5230\u82e5\u5e72\u989d\u5916\u53d8\u91cf</li> </ul>"},{"location":"algorithm/leetcode/#_12","title":"\u52a8\u6001\u89c4\u5212","text":"<p>\u601d\u8def\u4e5f\u5f88\u7b80\u5355\uff1a</p> <ul> <li>\u56e0\u4e3a\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u548c\u662f\u5426\u53d6\u5f53\u524d\u5143\u7d20\uff0c\u53d6\u51b3\u4e8e\u672c\u5143\u7d20\u524d\u7684\u5143\u7d20\u7684\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u548c\uff0c\u8fd9\u7b26\u5408\u52a8\u6001\u89c4\u5212</li> <li><code>dp[i]</code>\u8868\u793a<code>nums[i]</code>\u7ed3\u5c3e\u7684\u5b50\u6570\u7ec4\u7684\u548c\u7684\u6700\u5927\u503c</li> <li>\u9012\u63a8\u516c\u5f0f<code>dp[i] = max(dp[i - 1], 0) + nums[i]</code></li> <li>\u5982\u679c\u524d\u4e00\u4e2a\u5143\u7d20\u4e3a\u8d1f\u6570\uff0c\u90a3\u4e48\u52a0\u4e0a\u8fd9\u4e2a\u5143\u7d20\u4e4b\u540e\uff0c\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u548c\u53ea\u4f1a\u66f4\u5c0f</li> <li>\u53ea\u6709\u524d\u4e00\u4e2a\u5143\u7d20\u4e3a\u975e\u8d1f\u6570\uff0c\u52a0\u4e0a\u8fd9\u4e2a\u5143\u7d20\u4e4b\u540e\uff0c\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u548c\u624d\u4f1a\u66f4\u5927</li> <li>\u521d\u59cb\u5316\uff1a<code>dp[0]</code>\u8868\u793a<code>nums[0]</code>\u7ed3\u5c3e\u7684\u5b50\u6570\u7ec4\u7684\u548c\u7684\u6700\u5927\u503c\uff0c\u4e5f\u5c31\u662f<code>nums[0]</code></li> <li>\u904d\u5386\u987a\u5e8f\uff1a\u4ece\u5de6\u5230\u53f3</li> </ul> <pre><code>class Solution {\npublic:\n    int maxSubArray(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        vector&lt;int&gt; dp(n);\n        dp[0] = nums[0];\n        int ans = dp[0];\n        for(int i = 1; i &lt; n; i++){\n            dp[i] = max(dp[i - 1], 0) + nums[i];\n            ans = max(ans,dp[i]);\n        }\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#56","title":"56 \u5408\u5e76\u533a\u95f4","text":"<p>\u4ee5\u4e0b\u4e24\u79cd\u505a\u6cd5\u601d\u8def\u662f\u4e00\u6837\u7684\uff0c\u7b2c\u4e00\u79cd\u662f\u6211\u81ea\u5df1\u5199\u7684\uff0c\u7b2c\u4e8c\u79cd\u662f\u522b\u4eba\u7684\u9898\u89e3</p> <p>\u6211\u89c9\u5f97\u7b2c\u4e8c\u79cd\u66f4\u4e0d\u5bb9\u6613\u5199\u9519\uff0c\u5efa\u8bae\u7b2c\u4e8c\u79cd</p>"},{"location":"algorithm/leetcode/#_13","title":"\u505a\u6cd5\u4e00","text":"<p>\u8fd9\u79cd\u505a\u6cd5\u7684\u601d\u8def\u662f\uff1a</p> <ol> <li>\u5bf9\u533a\u95f4\u5de6\u7aef\u70b9\u8fdb\u884c\u6392\u5e8f</li> <li>\u901a\u8fc7\u53d6\u524d\u4e00\u4e2a\u533a\u95f4\u7684start\u548cend\uff0c\u4e0e\u5f53\u524d\u533a\u95f4\u7684start\u548cend\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u5f53\u524d\u533a\u95f4\u7684start\u6bd4\u524d\u4e00\u4e2a\u533a\u95f4\u7684end\u5c0f\uff0c\u5408\u5e76\u5f53\u524d\u533a\u95f4\u548c\u524d\u4e00\u4e2a\u533a\u95f4</li> <li>\u5982\u679c\u5f53\u524d\u533a\u95f4\u7684start\u6bd4\u524d\u4e00\u4e2a\u533a\u95f4\u7684end\u5927\uff0c\u5c06\u524d\u4e00\u4e2a\u533a\u95f4\u653e\u5165\u7b54\u6848</li> </ol> <p>\u6211\u4eec\u6765\u601d\u8003\u6700\u540e\u4e24\u4e2a\u533a\u95f4</p> <p>\u5f53\u904d\u5386\u7ed3\u675f\u5230\u6700\u540e\u4e00\u4e2a\u533a\u95f4\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\u524d\u4e00\u4e2a\u533a\u95f4\u7684\u7ec8\u70b9\u6bd4\u5f53\u524d\u533a\u95f4\u7684\u8d77\u70b9\u5927\uff0c\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\uff0c<code>end = max(end,intervals[i][1])</code>; -&gt; \u6b64\u65f6\u5408\u5e76\u540e\u7684\u533a\u95f4\u6ca1\u6709\u653e\u5165\u7b54\u6848</li> <li>\u524d\u4e00\u4e2a\u533a\u95f4\u7684\u7ec8\u70b9\u6bd4\u5f53\u524d\u533a\u95f4\u7684\u8d77\u70b9\u5c0f\uff0c\u5c06\u524d\u4e00\u4e2a\u533a\u95f4\u653e\u5165\u7b54\u6848\uff0c\u66f4\u65b0<code>start = intervals[n - 1][0]</code>\u548c<code>end = intervals[n - 1][1]</code>; -&gt; \u6b64\u65f6\u6700\u540e\u4e00\u4e2a\u533a\u95f4\u6ca1\u6709\u653e\u5165\u7b54\u6848</li> </ul> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u591a\u52a0\u4e00\u6b65\uff0c\u5c06\u6700\u540e\u7684\u533a\u95f4\u653e\u5165\u7b54\u6848<code>ans.push_back({start, end});</code></p> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; merge(vector&lt;vector&lt;int&gt;&gt;&amp; intervals) {\n        int n = intervals.size();\n        // \u5bf9\u533a\u95f4\u5de6\u7aef\u70b9\u8fdb\u884c\u6392\u5e8f\n        sort(intervals.begin(), intervals.end());\n        // \u524d\u4e00\u4e2a\u533a\u95f4[start, end]\u7684\u521d\u59cb\u5316\n        int start = intervals[0][0];\n        int end = intervals[0][1];\n        vector&lt;vector&lt;int&gt;&gt; ans;\n        for (int i = 1; i &lt; n; i++) {\n            // \u5982\u679c\u524d\u4e00\u4e2a\u533a\u95f4\u7684\u7ec8\u70b9\u6bd4\u5f53\u524d\u533a\u95f4\u7684\u8d77\u70b9\u5927\uff0c\u8bf4\u660e\u8981\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\n            if (intervals[i][0] &lt;= end)\n                end = max(end,intervals[i][1]);\n            // \u5426\u5219\uff0c\u5c06\u524d\u4e00\u4e2a\u533a\u95f4\u7eb3\u5165\u7b54\u6848\uff0c\u66f4\u65b0\u524d\u4e00\u4e2a\u533a\u95f4[start, end]\n            else {\n                ans.push_back({start, end});\n                start = intervals[i][0];\n                end = intervals[i][1];\n            }\n        }\n        // \u4ee5\u4e0a\u5904\u7406\u4e86\u524dn - 1\u4e2a\u533a\u95f4\uff0c\u8fd8\u6709\u6700\u540e\u4e00\u4e2a\u533a\u95f4\u6ca1\u6709\u653e\u5165\u7b54\u6848\n        ans.push_back({start, end});\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_14","title":"\u505a\u6cd5\u4e8c","text":"<p>\u505a\u6cd5\u4e8c\u805a\u7126\u4e8e\u5f53\u524d\u7684\u533a\u95f4\uff0c\u524d\u4e00\u4e2a\u533a\u95f4\u653e\u5728ans\u7684\u672b\u7aef\uff08\u628aans\u89c6\u4f5c\u6808\uff0c<code>ans.back()</code>\u5c31\u662f\u6808\u9876\uff0c\u901a\u8fc7\u66f4\u65b0<code>ans.back()</code>\u5b8c\u6210\u5408\u5e76\u533a\u95f4\uff09</p> <p>\u653e\u5165\u7b54\u6848\u7684\u65b9\u5f0f\u662f\u5c06\u5f53\u524d\u533a\u95f4\u653e\u5165ans\uff08\u505a\u6cd5\u4e00\u662f\u5c06\u524d\u4e00\u4e2a\u533a\u95f4\u653e\u5165ans\uff09</p> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; merge(vector&lt;vector&lt;int&gt;&gt;&amp; intervals) {\n        sort(intervals.begin(), intervals.end());\n        vector&lt;vector&lt;int&gt;&gt; ans;\n        for(auto interval : intervals){\n            if(!ans.empty() &amp;&amp; ans.back()[1] &gt;= interval[0])\n                ans.back()[1] = max(ans.back()[1], interval[1]);\n            else\n                ans.push_back(interval);\n        }\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#189","title":"189 \u8f6e\u8f6c\u6570\u7ec4","text":"<p>k\u6ca1\u6709\u8bf4\u4e00\u5b9a\u6bd4\u6570\u7ec4\u957f\u5ea6\u5c0f\uff0c\u6240\u4ee5\u9700\u8981\u505a\u53d6\u4f59\u5904\u7406<code>k = k % nums.size();</code></p>"},{"location":"algorithm/leetcode/#_15","title":"\u505a\u6cd5\u4e00","text":"<pre><code>class Solution {\npublic:\n    void rotate(vector&lt;int&gt;&amp; nums, int k) {\n        int n = nums.size();\n        vector&lt;int&gt; newArr(n);\n        for(int i = 0; i &lt; n; i++){\n            int idx = (i + k) % n;\n            newArr[idx] = nums[i];\n        }\n        nums.assign(newArr.begin(), newArr.end());\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p>"},{"location":"algorithm/leetcode/#_16","title":"\u505a\u6cd5\u4e8c","text":"<p>\u6211\u4e5f\u60f3\u4e0d\u51fa\u600e\u4e48\u89e3\u91ca\u8fd9\u4e2a\u601d\u8def\u7684\u6765\u6e90\uff0c\u53ea\u80fd\u6b7b\u8bb0\u4e86</p> <p>\u601d\u8def\u89c1https://leetcode.cn/problems/rotate-array/solutions/2784427/tu-jie-yuan-di-zuo-fa-yi-tu-miao-dong-py-ryfv/?envType=study-plan-v2&amp;envId=top-100-liked</p> <pre><code>class Solution {\npublic:\n    void rotate(vector&lt;int&gt;&amp; nums, int k) {\n        k = k % nums.size();\n        reverse(nums.begin(), nums.end());\n        reverse(nums.begin(), nums.begin() + k);\n        reverse(nums.begin() + k, nums.end());\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</p>"},{"location":"algorithm/leetcode/#238","title":"238 \u9664\u81ea\u8eab\u4ee5\u5916\u6570\u7ec4\u7684\u4e58\u79ef","text":""},{"location":"algorithm/leetcode/#_17","title":"\u66b4\u529b\u89e3\u6cd5\uff08\u8d85\u65f6\uff09","text":"<pre><code>class Solution {\npublic:\n    vector&lt;int&gt; productExceptSelf(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        vector&lt;int&gt; ans;\n        for(int i = 0; i &lt; n; i++){\n            int res = 1;\n            for(int j = 0; j &lt; i; j++){\n                res *= nums[j];\n            }\n            for(int j = i + 1; j &lt; n; j++){\n                res *= nums[j];\n            }\n            ans.push_back(res);\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p>"},{"location":"algorithm/leetcode/#_18","title":"\u52a8\u6001\u89c4\u5212","text":"<p>\u7c7b\u4f3c\u4e8e\u524d\u7f00\u548c\u7684\u601d\u8def\uff0c\u6211\u4eec\u8ba1\u7b97\u524d\u7f00\u4e58\u79ef\u548c\u540e\u7f00\u4e58\u79ef</p> <p>\u90a3\u4e48<code>nums[i]</code>\u9664\u81ea\u8eab\u4ee5\u5916\u7684\u4e58\u79ef\u4e3a<code>pre[i] * suf[i]</code></p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; productExceptSelf(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        vector&lt;int&gt; pre(n + 1, 1);\n        vector&lt;int&gt; suf(n + 1, 1);\n        vector&lt;int&gt; ans;\n        for(int i = 1; i &lt; n; i++)\n            pre[i] = pre[i - 1] * nums[i - 1];\n        for(int i = n - 2; i &gt;= 0; i--)\n            suf[i] = suf[i + 1] * nums[i + 1];\n        for(int i = 0; i &lt; n; i++){\n            int res = pre[i] * suf[i];\n            ans.push_back(res);\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p>"},{"location":"algorithm/leetcode/#_19","title":"\u53cc\u6307\u9488","text":"<p>\u601d\u8def\uff1a</p> <p>\u5728\u52a8\u6001\u89c4\u5212\u505a\u6cd5\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u524d\u7f00\u4e58\u79ef\u548c\u540e\u7f00\u4e58\u79ef\uff0c\u6211\u4eec\u77e5\u9053\u524d\u7f00\u548c\u53ef\u4ee5\u4f18\u5316\u4e3a\u4e00\u4e2a\u53d8\u91cf\uff0c\u524d\u7f00\u4e58\u79ef\u548c\u540e\u7f00\u4e58\u79ef\u540c\u7406</p> <ul> <li>\u524d\u7f00\u4e58\u79ef\uff1ai\u4ece\u5de6\u5230\u53f3\u904d\u5386\uff0cpre *= nums[i]</li> <li>\u540e\u7f00\u4e58\u79ef\uff1aj\u4ece\u53f3\u5230\u5de6\u904d\u5386\uff0csuf *= nums[j]</li> <li>\u5728\\(O(n)\\)\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5b8c\u6210\uff0c\u610f\u5473\u7740i\u548cj\u5728\u4e00\u4e2a\u5faa\u73af\u5185\u79fb\u52a8\uff0c\u4e5f\u5c31\u662f\u5f02\u4fa7\u53cc\u6307\u9488</li> <li>\u6211\u4eec\u5c06\u95ee\u9898\u5206\u89e3\uff1a</li> <li>\u5143\u7d20nums[i]\u53f3\u8fb9\u5143\u7d20\u7684\u4e58\u79ef\uff0c\u4e5f\u5c31\u662fans[i] *= suf</li> <li>\u5143\u7d20nums[i]\u5de6\u8fb9\u5143\u7d20\u7684\u4e58\u79ef\uff0c\u4e5f\u5c31\u662fans[i] *= pre</li> <li>\u5728\u4e00\u4e2a\u5faa\u73af\u5185\u5b8c\u6210\uff0c\u56e0\u6b64\u6709ans[left] = pre\uff0cans[right] = suf \uff08left\u4ece0\u5230n - 1\uff0cright\u4ecen - 1\u52300\uff09\uff0c\u4e5f\u5c31\u662fleft\u548cright\u5206\u522b\u904d\u5386\u4e00\u904d\u6570\u7ec4\u5c31\u80fd\u5b8c\u6210\u8ba1\u7b97</li> </ul> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; productExceptSelf(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        vector&lt;int&gt; ans(n,1);\n        int pre = 1, suf = 1;\n        // left &lt; n &amp;&amp; right &gt;= 0\u53ef\u7b80\u5316\u4e3aleft &lt; n \u6216 right &gt;= 0\n        for(int left = 0, right = n - 1; left &lt; n &amp;&amp; right &gt;= 0; left++, right--){\n            ans[left] *= pre;\n            ans[right] *= suf;\n            pre *= nums[left];\n            suf *= nums[right];\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</p>"},{"location":"algorithm/leetcode/#41","title":"41 \u7f3a\u5931\u7684\u7b2c\u4e00\u4e2a\u6b63\u6570","text":"<p>\u9898\u76ee\u8981\u6c42\\(O(n)\\)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\\(O(1)\\)\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u8fd9\u610f\u5473\u7740\uff1a</p> <ul> <li>\\(O(1)\\)\u7684\u7a7a\u95f4\u590d\u6742\u5ea6 -&gt; \u53ea\u80fd\u5728\u6570\u7ec4\u672c\u8eab\u64cd\u4f5c\uff0c\u4e0d\u80fd\u4f7f\u7528 \u201c\u628a\u6240\u6709\u5143\u7d20\u653e\u5165\u54c8\u5e0c\u8868\uff0c\u518d\u904d\u5386\u67e5\u8be2\u201d\u7684\u65b9\u6cd5</li> <li>\\(O(n)\\)\u7684\u65f6\u95f4\u590d\u6742\u5ea6 -&gt; \u4e0d\u80fd\u4f7f\u7528\u201c\u5148\u6392\u5e8f\u518d\u4e8c\u5206\u67e5\u627e\u201c\u7684\u65b9\u6cd5</li> </ul> <p>\u4ee5\u4e0b\u65b9\u6cd5\u540d\u4e3a\u201d\u539f\u5730\u54c8\u5e0c\u201c\uff0c\u5c06\u503c\u4e3a1\u7684\u5143\u7d20\u653e\u5230\u7d22\u5f150\uff0c\u503c\u4e3a2\u7684\u5143\u7d20\u653e\u5230\u7d22\u5f151\uff0c\u503c\u4e3ai\u7684\u5143\u7d20\u653e\u5230\u7d22\u5f15i - 1...\u56e0\u6b64\u6709nums[i] = i + 1</p> <p>\u5177\u4f53\u505a\u6cd5\uff1a</p> <ol> <li>\u8ba1\u7b97\u5f53\u524d\u5143\u7d20\u503c\u5bf9\u5e94\u7684\u7d22\u5f15idx\uff0cidx = nums[i] - 1</li> <li>\u627e\u5230\u7d22\u5f15\u5bf9\u5e94\u7684\u5143\u7d20nums[idx]</li> <li>\u4ea4\u6362nums[i]\u548cnums[idx]</li> <li>\u4ea4\u6362\u540e\uff0cnums[i]\u4e3a\u65b0\u503c\uff0c\u9700\u8981\u7ee7\u7eed\u91cd\u590d\u4ee5\u4e0a\u505a\u6cd5\uff0c\u76f4\u5230\u6ee1\u8db3nums[i] == i + 1</li> </ol> <p>\u5f53\u7136\uff0c\u8981\u6ce8\u610f\u4ee5\u4e0b\u6761\u4ef6\uff1a</p> <ul> <li>\u672c\u9898\u6c42\u7684\u662f\u6b63\u6574\u6570\uff0c\u56e0\u6b64\u503c\u4e3a\u8d1f\u6570\u7684\u5143\u7d20\u53ef\u5ffd\u7565</li> <li>n\u4e3a\u6570\u7ec4\u957f\u5ea6\uff0c\u8fd9\u610f\u5473\u7740\uff1an + 1\u662f\u4e00\u5b9a\u7f3a\u5931\u7684\uff08\u5982\u679c\u67d0\u4e2a\u5143\u7d20\u5927\u4e8e\u7b49\u4e8en + 1\uff0c\u6211\u4eec\u6700\u540e\u4e5f\u4f1a\u8fd4\u56den + 1\uff09</li> <li>\u5982\u679c\u627e\u4e0d\u5230\u524dn\u4e2a\u7f3a\u5931\u7684\u6b63\u6574\u6570\uff0c\u90a3\u4e48\u7f3a\u5931\u7684\u5c31\u662fn + 1\uff08n\u4e3a\u6570\u7ec4\u957f\u5ea6\uff09</li> <li>\u5982\u679c\u67d0\u4e2a\u5143\u7d20\u503c\u5927\u4e8e\u7b49\u4e8en + 1\uff0c\u90a3\u4e48\u4e5f\u53ef\u4ee5\u5ffd\u7565\uff0c\u4e0d\u7528\u54c8\u5e0c</li> </ul> <pre><code>class Solution {\npublic:\n    int firstMissingPositive(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        for(int i = 0; i &lt; n; i++){\n            while(nums[i] != i + 1){\n                // \u5982\u679c\u5f53\u524d\u6570\u662f\u8d1f\u6570\uff0c\u4e0d\u9700\u8981\u54c8\u5e0c\n                // \u5982\u679c\u5f53\u524d\u6570\u4e3a n + 1\uff0c \u4e0d\u9700\u8981\u54c8\u5e0c\uff0c\u56e0\u4e3a\u5728\u524d\u9762\u7684 n \u4e2a\u5143\u7d20\u90fd\u627e\u4e0d\u5230\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u624d\u8fd4\u56de n + 1\n                // \u5982\u679c\u5f53\u524d\u6570\u548c\u60f3\u8981\u4ea4\u6362\u7684\u6570\u76f8\u540c\uff0c\u9700\u8981\u8df3\u51fa\u5faa\u73af\uff0c\u5426\u5219\u4f1a\u6b7b\u5faa\u73af\n                if(nums[i] &lt;= 0 || nums[i] &gt; n || nums[i] == nums[nums[i] - 1])\n                    break;\n                // \u4ea4\u6362\u4e24\u4e2a\u6570\n                int idx = nums[i] - 1;\n                nums[i] = nums[idx];\n                nums[idx] = idx + 1;\n                // \u7b49\u4ef7\u4e8e\n                // int idx = nums[i] - 1;\n                // swap(nums[idx], nums[i]);\n            }\n        }\n        // \u904d\u5386\u4e00\u904d\u6570\u7ec4\u627e\u5230\u4e0d\u7b26\u5408\u7684\u6b63\u6574\u6570\n        for(int i = 0;i &lt; n;i++){\n            if(nums[i] != i + 1)\n                return i + 1;\n        }\n        // \u5982\u679c\u6ca1\u6709\uff0c\u5219\u8fd4\u56den + 1\n        return n + 1;\n    }\n};\n</code></pre> <p>\\(O(n)\\)\u7684\u65f6\u95f4\u590d\u6742\u5ea6 </p> <p>\\(O(1)\\)\u7684\u7a7a\u95f4\u590d\u6742\u5ea6 </p>"},{"location":"algorithm/leetcode/#_20","title":"\u603b\u7ed3","text":"<p>\u6570\u7ec4\u603b\u7ed3\u8865\u5145\u53c2\u8003</p> <p>https://programmercarl.com/%E6%95%B0%E7%BB%84%E6%80%BB%E7%BB%93%E7%AF%87.html#%E6%80%BB%E7%BB%93</p>"},{"location":"algorithm/leetcode/#_21","title":"\u6570\u7ec4\u7684\u53cc\u6307\u9488\u6cd5","text":""},{"location":"algorithm/leetcode/#_22","title":"\u540c\u4fa7\u53cc\u6307\u9488","text":"<p>\u5bf9\u5e94\u9898\u76ee</p> <ul> <li>27</li> <li>209</li> </ul> <p>\u540c\u4fa7\u53cc\u6307\u9488\uff1a\u6307\u6307\u9488slowIndex\u548cfastIndex\u90fd\u4ece\u5de6\u5230\u53f3\u904d\u5386</p> <p>\u8fd9\u7c7b\u65b9\u6cd5\u901a\u5e38\u5e94\u7528\u4e8e\u4ee5\u4e0bfor\u5faa\u73af\u7684\u4f18\u5316</p> <pre><code>for(int i = 0; i &lt; nums.size(); i++){\n        for(int j = i; j &lt; nums.size(); j++){\n            //\u7b97\u6cd5\u6b65\u9aa4\n    }\n}\n</code></pre> <p>\u5728\u4ee5\u4e0afor\u5faa\u73af\u4e2d\uff0c\u5148\u79fb\u52a8j\u6ee1\u8db3\u9898\u610f\u540e\uff0c\u518d\u79fb\u52a8i</p> <p>\u79fb\u52a8i\u7684\u8fc7\u7a0b\u91cd\u590d\u4e86\u79fb\u52a8j\u7684\u8fc7\u7a0b</p> <p>\u4f8b\u5982\uff1a</p> <ul> <li>\u7b2c\u4e00\u6b21i=0\uff0c\u5047\u8bbej\u5230\u8fbe5\u6ee1\u8db3\u9898\u610f\u505c\u6b62</li> <li>\u7b2c\u4e8c\u6b21i=1\uff0cj\u8981\u91cd\u65b0\u4ece0\u51fa\u53d1\uff0c\u91cd\u65b0\u7ecf\u5386[0,5]\u7684\u8fc7\u7a0b\u624d\u80fd\u5230\u8fbe\u65b0\u5143\u7d20nums[6]</li> </ul> <p>\u91cd\u65b0\u7ecf\u5386[0,5]\u8fd9\u4e00\u8fc7\u7a0b\u662f\u591a\u4f59\u7684\uff0c\u53ef\u4ee5\u88ab\u4f18\u5316\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5f15\u5165\u53cc\u6307\u9488</p> <p>\u5728\u53cc\u6307\u9488\u4e2d</p> <ul> <li>\u7b2c\u4e00\u6b21slowIndex = 0\uff08\u5bf9\u5e94i = 0\uff09\uff0cfastIndex = 0\uff08\u5bf9\u5e94j = 0\uff09, fastIndex\u5230\u8fbe5\u6ee1\u8db3\u9898\u610f\u505c\u6b62</li> <li>\u63a5\u4e0b\u6765\u4e0d\u9700\u8981\u91cd\u65b0\u7ecf\u5386[0,5]\u7684\u8fc7\u7a0b\uff0c\u53ea\u9700\u8981\u5c06slowIndex\u52a0\u4e00\uff08\u5bf9\u5e94i=1\uff09</li> </ul> <p>\u6a21\u677f</p> <pre><code>for(int fastIndex = 0; i &lt; nums.size(); i++){\n        while(//\u9898\u610f){\n                slowIndex++;\n        }\n}\n</code></pre>"},{"location":"algorithm/leetcode/#_23","title":"\u5f02\u4fa7\u53cc\u6307\u9488","text":"<p>\u9898\u76ee\uff1a</p> <ul> <li>977</li> </ul> <p>\u4ece\u6570\u7ec4\u4e24\u8fb9\u5f80\u4e2d\u95f4\u904d\u5386\uff0c\u7528\u4e8e\u5bf9\u6570\u7ec4\u4e24\u4fa7\u5143\u7d20\u4f9d\u6b21\u6267\u884c\u7b97\u6cd5\u64cd\u4f5c</p> <pre><code>int leftIndex = 0, rightIndex = nums.size() - 1;\nwhile(leftIndex &lt;= rightIndex){\n        if(nums[leftIndex]\u6ee1\u8db3...){\n                /...\n                leftIndex++;\n        }\n        if(nums[rightIndex]\u6ee1\u8db3...){\n                /...\n                rightIndex--;\n        }\n}\n</code></pre>"},{"location":"algorithm/leetcode/#_24","title":"\u94fe\u8868","text":""},{"location":"algorithm/leetcode/#203","title":"203 \u79fb\u9664\u94fe\u8868\u5143\u7d20","text":"<p>\u79fb\u9664\u94fe\u8868\u5143\u7d20\u672c\u8d28\u4e0a\u6b65\u9aa4\u4e3a\uff1a</p> <ol> <li>\u627e\u5230\u5f85\u79fb\u9664\u5143\u7d20curNode\u7684\u524d\u9a71\u8282\u70b9prevNode\u548c\u540e\u7ee7\u8282\u70b9nextNode(curNode-&gt;next)</li> <li>prevNode-&gt;next = curNode-&gt;next </li> <li>\u91ca\u653e\u5185\u5b58delete curNode</li> </ol> <p>\u6709\u4e24\u79cd\u505a\u6cd5\uff1a\u539f\u94fe\u8868\u64cd\u4f5c\u548c\u5f15\u5165\u54d1\u8282\u70b9</p> <ul> <li> <p>\u539f\u94fe\u8868\u64cd\u4f5c\u610f\u5473\u7740\u9700\u8981\u5206\u4e24\u6b65\u64cd\u4f5c</p> </li> <li> <p>\u56e0\u4e3a\u5934\u90e8\u8282\u70b9\u6ca1\u6709\u524d\u9a71\u8282\u70b9\uff0c\u56e0\u6b64\u9700\u8981\u989d\u5916\u5904\u7406\u3002\u5904\u7406\u65b9\u6cd5\u5f88\u7b80\u5355\uff1a</p> <pre><code>ListNode* tmp = head;\nhead = head-&gt;next\ndelete tmp;\n</code></pre> </li> <li> <p>\u5176\u4ed6\u8282\u70b9\u6b63\u5e38\u5904\u7406</p> </li> <li> <p>\u5f15\u5165\u54d1\u8282\u70b9</p> </li> <li> <p>\u5f15\u5165\u54d1\u8282\u70b9\u6709\u4e2a\u597d\u5904\u662f\uff0c\u6240\u6709\u8282\u70b9\uff08\u5305\u62ec\u5934\u8282\u70b9\uff09\u80fd\u591f\u91c7\u7528\u7edf\u4e00\u7684\u64cd\u4f5c\uff0c\u56e0\u4e3a\u5b83\u8ba9\u5934\u8282\u70b9\u4e5f\u62e5\u6709\u4e86\u524d\u9a71\u8282\u70b9</p> </li> </ul>"},{"location":"algorithm/leetcode/#_25","title":"\u539f\u94fe\u8868\u64cd\u4f5c","text":"<pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* removeElements(ListNode* head, int val) {\n        if(!head)\n            return head;\n        while(head &amp;&amp; head-&gt;val == val){\n            ListNode* tmp = head;\n            head = head-&gt;next;\n            delete tmp;\n        }\n\n        //\u5230\u8fd9\u4e00\u6b65\uff0chead\u6709\u4e24\u79cd\u53ef\u80fd\uff0cnullptr \u6216\u8005 head-&gt;val != val\n        ListNode* cur = head;\n        // cur\u53ef\u80fd\u4e3anullptr\uff0c\u56e0\u6b64\u9700\u8981\u5224\u65adcur\u662f\u5426\u4e3anullptr\u518d\u53d6cur-&gt;next\n        // cur-&gt;next\u53ef\u80fd\u4e3a\u7a7a\uff0c\u6240\u4ee5\u9700\u8981\u5224\u65adcur-&gt;next\u662f\u5426\u4e3anullptr\u518d\u53d6cur-&gt;next-&gt;val\n        while(cur &amp;&amp; cur-&gt;next){\n            if(cur-&gt;next-&gt;val == val){\n                ListNode* tmp = cur-&gt;next;\n                cur-&gt;next = cur-&gt;next-&gt;next;\n                delete tmp;\n            }\n            else\n                cur = cur-&gt;next;\n        }\n\n        return head;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_26","title":"\u5f15\u5165\u54d1\u8282\u70b9","text":"<pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* removeElements(ListNode* head, int val) {\n        // \u4e3a\u4e86\u4fdd\u8bc1\u64cd\u4f5c\u7684\u7edf\u4e00\u6027\uff0c\u5f15\u5165\u54d1\u8282\u70b9\n        ListNode* dummyNode = new ListNode(-1,head);\n        ListNode* cur = dummyNode;\n        // \u8fb9\u754c\u6761\u4ef6\uff1a\u5224\u65ad\u8981\u5220\u9664\u7684\u8282\u70b9\u662f\u5426\u4e3a\u7a7a\n        while(cur-&gt;next != nullptr){\n            if(cur-&gt;next-&gt;val == val){\n                ListNode* tmp = cur-&gt;next;\n                cur-&gt;next = tmp-&gt;next;\n                delete tmp;\n            }\n            // \u8fd9\u91cc\u8981\u6ce8\u610f\uff1a\u4e00\u5b9a\u8981\u7528else\n            // \u56e0\u4e3a\u5220\u4e86\u8282\u70b9\u4e4b\u540e\uff0ccur-&gt;next\u6539\u53d8\u4e86\uff0c\u9700\u8981\u5148\u5224\u65adcur-&gt;next\u662f\u5426\u4e3a\u7a7a\u518d\u53d6cur-&gt;next-&gt;val\n            else\n                cur = cur-&gt;next;\n        }\n        head = dummyNode-&gt;next;\n        delete dummyNode;\n        return head;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#707","title":"707 \u8bbe\u8ba1\u94fe\u8868","text":"<p>dummyNode\u5bf9\u5e94\u7d22\u5f15\u4e3a-1\uff0c\u4e4b\u540e\u7684\u8282\u70b9\u624d\u662f\u771f\u8282\u70b9\uff0c\u7d22\u5f15\u4ece0\u5f00\u59cb</p> <p>for\u5faa\u73af\u904d\u5386\u65b9\u6cd5</p> <p><code>i</code>\u5bf9\u5e94\u771f\u8282\u70b9\u7684\u7d22\u5f15</p> <p>\u56e0\u6b64<code>i == 0</code>\u65f6\uff0c<code>cur = cur-&gt;next</code>\u6267\u884c\u4e00\u6b21\u5230\u8fbe\u7d22\u5f150\u7684\u5143\u7d20</p> <ul> <li>\u904d\u5386\u5230\u6307\u5b9aindex\u7684\u5143\u7d20\uff1a<code>for(int i = 0; i &lt;= index; i++)</code></li> <li>\u904d\u5386\u5230\u6307\u5b9aindex\u5143\u7d20\u7684\u524d\u4e00\u4e2a\u5143\u7d20\uff1a<code>for(int i = 0; i &lt; index; i++)</code></li> </ul> <pre><code>class MyLinkedList {\nprivate:\n    ListNode *dummyNode;\n    int size;\npublic:\n    MyLinkedList() {\n        dummyNode = new ListNode();\n        size = 0;\n    }\n\n    int get(int index) {\n        if(index &lt; 0 || index &gt;= size)\n            return -1;\n        ListNode* cur = dummyNode;\n        for(int i = 0; i &lt;= index; i++){\n            cur = cur-&gt;next;\n        }\n        return cur-&gt;val;\n    }\n\n    void addAtHead(int val) {\n        ListNode* newHead = new ListNode(val);\n        newHead-&gt;next = dummyNode-&gt;next;\n        dummyNode-&gt;next = newHead;\n        size++;\n    }\n\n    void addAtTail(int val) {\n        ListNode* newNode = new ListNode(val);\n        ListNode* cur = dummyNode;\n        while(cur-&gt;next){\n            cur = cur-&gt;next;\n        }\n        cur-&gt;next = newNode;\n        size++;\n    }\n\n    void addAtIndex(int index, int val) {\n        if(index &lt; 0 || index &gt; size)  \n            return;        \n        ListNode* cur = dummyNode;\n        for(int i = 0; i &lt; index; i++){\n            cur = cur-&gt;next;\n        }\n        ListNode* newNode = new ListNode(val,cur-&gt;next);\n        cur-&gt;next = newNode;\n        size++;\n    }\n\n    void deleteAtIndex(int index) {\n        if(index &lt; 0 || index &gt;= size)\n            return;\n        ListNode* cur = dummyNode;\n        for(int i = 0; i &lt; index; i++){\n            cur = cur-&gt;next;\n        }\n        ListNode* tmp = cur-&gt;next;\n        cur-&gt;next = cur-&gt;next-&gt;next;\n        delete tmp;\n        size--;\n    }\n};\n\n/**\n * Your MyLinkedList object will be instantiated and called as such:\n * MyLinkedList* obj = new MyLinkedList();\n * int param_1 = obj-&gt;get(index);\n * obj-&gt;addAtHead(val);\n * obj-&gt;addAtTail(val);\n * obj-&gt;addAtIndex(index,val);\n * obj-&gt;deleteAtIndex(index);\n */\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6: \u6d89\u53ca <code>index</code> \u7684\u76f8\u5173\u64cd\u4f5c\u4e3a O(index), \u5176\u4f59\u4e3a O(1)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6: O(n)</p>"},{"location":"algorithm/leetcode/#206","title":"206 \u53cd\u8f6c\u94fe\u8868","text":""},{"location":"algorithm/leetcode/#_27","title":"\u8fed\u4ee3\u7248","text":"<pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        ListNode* prev = nullptr;\n        ListNode* cur = head;\n        while(cur){\n            ListNode* next = cur-&gt;next;\n            cur-&gt;next = prev;\n            prev = cur;\n            cur = next;\n        }\n        // cur\u6307\u5411nullptr, prev\u6307\u5411\u539f\u94fe\u8868\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff08\u65b0\u94fe\u8868\u5934\u8282\u70b9\uff09\n        return prev;\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u5176\u4e2d n \u662f\u94fe\u8868\u7684\u957f\u5ea6\u3002\u9700\u8981\u904d\u5386\u94fe\u8868\u4e00\u6b21\u3002</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\u3002</li> </ul>"},{"location":"algorithm/leetcode/#_28","title":"\u9012\u5f52\u7248","text":"<p>\u548c\u8fed\u4ee3\u6cd5\u540c\u4e00\u601d\u8def\u7684\u9012\u5f52\u7248</p> <p>\u6838\u5fc3\u601d\u8def\uff1a</p> <ul> <li>\u901a\u8fc7\u9012\u5f52\u51fd\u6570\u4f9d\u6b21\u5c06\u94fe\u8868\u8282\u70b9\u538b\u6808\uff0c\u4f7f\u7b97\u6cd5\u5230\u8fbe\u94fe\u8868\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u518d\u8fdb\u884c\u53cd\u8f6c\u64cd\u4f5c</li> <li>\u6bcf\u6b21\u9012\u5f52\u51fd\u6570\u6267\u884c\u540c\u4e00\u53cd\u8f6c\u64cd\u4f5c\uff0c\u4f46\u662f\u8fd4\u56de\u7684\u662f\u53cd\u8f6c\u540e\u7684\u51fd\u6570\u5934</li> <li>\u53cd\u8f6c\u64cd\u4f5ccur-&gt;next = prev\uff08\u4e0e\u8fed\u4ee3\u6cd5\u76f8\u540c\uff09</li> </ul> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\nprivate:\n    ListNode* reverse(ListNode* prev, ListNode* cur){\n        // \u5f53cur\u4e3a\u7a7a\uff0c\u8bf4\u660e\u5df2\u7ecf\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u94fe\u8868\u8282\u70b9\n        // \u6b64\u65f6\u6700\u540e\u4e00\u4e2a\u94fe\u8868\u8282\u70b9\u4e3aprev\uff0c\u5b83\u5c31\u662f\u53cd\u8f6c\u540e\u7684\u5934\u8282\u70b9\n        if(!cur)\n            return prev;\n        ListNode* newHead = reverse(cur, cur-&gt;next);\n        cur-&gt;next = prev;\n        return newHead;\n    }\npublic:\n    ListNode* reverseList(ListNode* head) {\n        return reverse(nullptr,head);\n    }\n};\n</code></pre> <p>\u8fd9\u662f\u53e6\u4e00\u79cd\u9012\u5f52\u7248</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        if(!head || !head-&gt;next)\n            return head;\n        ListNode* newHead = reverseList(head-&gt;next);\n        head-&gt;next-&gt;next = head;\n        head-&gt;next = nullptr;\n        return newHead;\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u5176\u4e2d n \u662f\u94fe\u8868\u7684\u957f\u5ea6\u3002\u9700\u8981\u5bf9\u94fe\u8868\u7684\u6bcf\u4e2a\u8282\u70b9\u8fdb\u884c\u53cd\u8f6c\u64cd\u4f5c\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u5176\u4e2d n \u662f\u94fe\u8868\u7684\u957f\u5ea6\u3002\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3b\u8981\u53d6\u51b3\u4e8e\u9012\u5f52\u8c03\u7528\u7684\u6808\u7a7a\u95f4\uff0c\u6700\u591a\u4e3a n \u5c42\u3002</p>"},{"location":"algorithm/leetcode/#24","title":"24 \u4e24\u4e24\u4ea4\u6362\u94fe\u8868\u4e2d\u7684\u8282\u70b9","text":"<p>\u8fd9\u9053\u9898\u770b\u8fd9\u4e2a\u89e3\u6790\u5427</p> <p>https://programmercarl.com/0024.%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9.html#%E6%80%9D%E8%B7%AF</p> <p>\u89e3\u7b54\u51e0\u4e2a\u95ee\u9898</p> <ul> <li>\u4e3a\u4ec0\u4e48cur\u53d6 \u5f85\u4ea4\u6362\u5143\u7d20\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e</li> <li>\u56e0\u4e3a\u4ea4\u6362\u4e4b\u540e\uff0c\u8fd8\u8981\u4fdd\u6301\u94fe\u8868\u76f8\u8fde\uff0ccur\u53d6\u4e0a\u4e00\u6b21\u4ea4\u6362\u540e\u7684\u672b\u5c3e\u4f4d\u7f6e\uff0c\u80fd\u591f\u4fdd\u8bc1\u94fe\u8868\u76f8\u8fde</li> </ul> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* swapPairs(ListNode* head) {\n        ListNode* dummyNode = new ListNode(-1, head);\n        ListNode* cur = dummyNode;\n        while (cur-&gt;next &amp;&amp; cur-&gt;next-&gt;next) {\n            // \u4fdd\u5b58\u539f\u6709\u7684\u51e0\u4e2a\u5143\u7d20\n            ListNode* tmp1 = cur-&gt;next;\n            ListNode* tmp2 = cur-&gt;next-&gt;next;\n            ListNode* tmp3 = cur-&gt;next-&gt;next-&gt;next;\n            // \u8c03\u6574\u5143\u7d20\u4f4d\u7f6e\n            cur-&gt;next = tmp2;\n            cur-&gt;next-&gt;next = tmp1;\n            cur-&gt;next-&gt;next-&gt;next = tmp3;\n            // \u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\n            cur = cur-&gt;next-&gt;next;\n        }\n        ListNode* newHead = dummyNode-&gt;next;\n        delete dummyNode;\n        return newHead;\n    }\n};\n</code></pre> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)</li> </ul>"},{"location":"algorithm/leetcode/#19-n","title":"19 \u5220\u9664\u94fe\u8868\u7684\u7b2cN\u4e2a\u8282\u70b9","text":"<p>\u53ef\u53c2\u8003 https://programmercarl.com/0019.%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%ACN%E4%B8%AA%E8%8A%82%E7%82%B9.html#%E6%80%9D%E8%B7%AF</p> <p>\u4e3a\u4ec0\u4e48\u9700\u8981\u79fb\u52a8n + 1\u6b65</p> <ul> <li>\u9898\u76ee\u8981\u6c42\u7684\u662f\u5012\u6570\u7b2cn\u4e2a\u8282\u70b9</li> <li>\u6211\u4eec\u5047\u8bbefast\u521a\u597d\u4f4d\u4e8e\u672b\u5c3e\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u503c\u4e3anullptr</li> <li>\u4e3a\u4e86\u65b9\u4fbf\u5220\u9664\u5012\u6570\u7b2cn\u4e2a\u8282\u70b9\uff0cslow\u9700\u8981\u4f4d\u4e8e\u5012\u6570\u7b2cn + 1\u4f4d\u7f6e</li> <li>\u56e0\u6b64slow\u4e0efast\u4f4d\u7f6e\u5206\u522b\u4e3a\u7b2cn + 1\u4e2a\u5143\u7d20\u548c\u7b2c0\u4e2a\u5143\u7d20\uff08\u4ece\u53f3\u5f80\u5de6\u6570\uff09\uff0cfast\u9700\u8981\u79fb\u52a8n + 1\u6b21</li> </ul> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* removeNthFromEnd(ListNode* head, int n) {\n        ListNode* dummyNode = new ListNode(-1, head);\n        ListNode *fast = dummyNode, *slow = dummyNode;\n        // fast\u9700\u8981\u79fb\u52a8n + 1\u6b65\uff0c\u4ee5\u4fdd\u8bc1slow\u521a\u597d\u5728\u5012\u6570\u7b2cn\u4e2a\u8282\u70b9\u7684\u524d\u4e00\u4e2a\u8282\u70b9\n        for (int i = 1; i &lt;= n + 1 &amp;&amp; fast; i++) {\n            fast = fast-&gt;next;\n        }\n        while (fast) {\n            fast = fast-&gt;next;\n            slow = slow-&gt;next;\n        }\n\n        ListNode* tmp = slow-&gt;next;\n        slow-&gt;next = slow-&gt;next-&gt;next;\n        delete tmp;\n\n        ListNode* newHead = dummyNode-&gt;next;\n        delete dummyNode;\n        return newHead;\n    }\n};\n</code></pre> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6: O(n)</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6: O(1)</li> </ul>"},{"location":"algorithm/leetcode/#160","title":"160 \u76f8\u4ea4\u94fe\u8868","text":"<p>https://leetcode.cn/problems/intersection-of-two-linked-lists/?envType=study-plan-v2&amp;envId=top-100-liked</p>"},{"location":"algorithm/leetcode/#_29","title":"\u5bb9\u6613\u7406\u89e3\u7684\u65b9\u6cd5","text":"<ol> <li>\u8ba1\u7b97\u4e24\u4e2a\u94fe\u8868\u7684\u957f\u5ea6</li> <li>\u8ba1\u7b97\u957f\u5ea6\u5deegap</li> <li>\u957f\u7684\u4e00\u4fa7\u5148\u8d70gap\u4e2a\u957f\u5ea6\uff0c\u8d70\u5b8c\u540e\uff0c\u4e24\u4e2a\u94fe\u8868\u5904\u4e8e\u540c\u4e00\u957f\u5ea6</li> <li>\u4e24\u4e2a\u94fe\u8868\u540c\u65f6\u904d\u5386\uff0c\u5982\u679cp1 == p2\uff0c\u5219\u76f8\u9047\uff1b\u5982\u679cp1(p2) == nullptr\uff0c\u8bf4\u660e\u65e0\u6cd5\u76f8\u9047</li> </ol> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* getIntersectionNode(ListNode* headA, ListNode* headB) {\n        ListNode *p1 = headA, *p2 = headB;\n        int lenA = 0, lenB = 0;\n        while (p1) {\n            lenA++;\n            p1 = p1-&gt;next;\n        }\n        while (p2) {\n            lenB++;\n            p2 = p2-&gt;next;\n        }\n        p1 = headA;\n        p2 = headB;\n        if (lenB &gt; lenA) {\n            swap(lenB, lenA);\n            swap(p1,p2);\n        }\n        int gap = lenA - lenB;\n        while (gap--) {\n            p1 = p1-&gt;next;\n        }\n        while (p1) {\n            if(p1 == p2)\n                return p1;\n            p1 = p1-&gt;next;\n            p2 = p2-&gt;next;\n        }\n        return nullptr;\n    }\n};\n</code></pre> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n + m)</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)</li> </ul>"},{"location":"algorithm/leetcode/#_30","title":"\u96be\u4ee5\u7406\u89e3\u7684\u65b9\u6cd5","text":"<p>\u62fc\u63a5\u94fe\u8868A\u548c\u94fe\u8868B\uff0c\u62fc\u63a5\u540e\uff0c\u4e24\u4e2a\u94fe\u8868\u540c\u65f6\u5f00\u59cb\u5f80\u5c3e\u90e8\u904d\u5386\uff0c</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\n        ListNode* a = headA, *b = headB;\n        while(a != b){\n            a = a != nullptr ? a-&gt;next : headB;\n            b = b != nullptr ? b-&gt;next : headA;\n        }\n        return a;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#141","title":"141 \u73af\u5f62\u94fe\u8868","text":"<p>\u6839\u636e\u9898\u610f\uff1a\u4e00\u4e2a\u8282\u70b9\u6ca1\u6709\u73af</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        if(head == nullptr || head-&gt;next == nullptr)\n            return false;\n        ListNode* fast = head, *slow = head;\n        while(true){\n            if(fast == nullptr || fast-&gt;next == nullptr)\n                return false;\n            fast = fast-&gt;next-&gt;next;\n            slow = slow-&gt;next;\n            if(fast == slow) \n                break;\n        }\n        return true;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#142-ii","title":"142 \u73af\u5f62\u94fe\u8868II","text":"<p>\u601d\u8def</p> <ul> <li>\u8bbe\u5b9a\u5feb\u6162\u6307\u9488\uff0c\u5982\u679c\u6709\u73af\uff0c\u5feb\u6307\u9488\u4e00\u5b9a\u80fd\u548c\u6162\u6307\u9488\u76f8\u9047\uff08\u53cd\u63a8\u4e5f\u6210\u7acb\uff1a\u80fd\u76f8\u9047\u8bf4\u660e\u6709\u73af\uff09\uff1b\u5982\u679c\u6ca1\u73af\uff0c\u5feb\u6307\u9488\u4f1a\u5230\u8fbe\u94fe\u8868\u672b\u5c3e\u53d8\u4e3anullptr</li> <li>\u672c\u9898\u8fd8\u9700\u8981\u627e\u73af\u7684\u5165\u53e3\uff0c\u901a\u8fc7\u63a8\u7406\u6211\u4eec\u5f97\u5230\uff1a\u76f8\u9047\u540e\uff0c\u8bbe\u5b9a\u4e00\u4e2a\u6307\u9488\u5728head\u8d77\u59cb\u4f4d\u7f6e\uff0c\u53e6\u4e00\u4e2a\u5728\u76f8\u9047\u4f4d\u7f6e\uff0c\u4e24\u4e2a\u6307\u9488\u540c\u65f6\u8d70\u76f8\u540c\u6b65\u6570\u4e00\u5b9a\u80fd\u5728\u73af\u5165\u53e3\u76f8\u9047</li> </ul> <p>\u5177\u4f53\u63a8\u5bfc\u8bc1\u660e\u8fc7\u7a0b\u89c1https://programmercarl.com/0142.%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8II.html#%E6%80%9D%E8%B7%AF</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n        ListNode* fast = head, *slow = head;\n        // \u6ce8\u610f\u8fb9\u754c\u6761\u4ef6\n        while(fast &amp;&amp; fast-&gt;next){\n            fast = fast-&gt;next-&gt;next;\n            slow = slow-&gt;next;\n            // fast == slow\u8bf4\u660e\u5b58\u5728\u73af\uff0c\u4f46\u662f\u4ecd\u7136\u4e0d\u77e5\u9053\u73af\u7684\u5165\u53e3\u5728\u54ea\u91cc\n            // \u4e3a\u4e86\u5bfb\u627e\u73af\u7684\u5165\u53e3\u8fdb\u884c\u989d\u5916\u7684\u64cd\u4f5c\n            if(fast == slow){\n                // \u901a\u8fc7\u63a8\u5bfc\uff0c\u8bbe\u5b9a\u4e00\u4e2a\u6307\u9488\u5728head\u8d77\u59cb\u4f4d\u7f6e\uff0c\u53e6\u4e00\u4e2a\u5728\u76f8\u9047\u4f4d\u7f6e\n                // \u4e24\u4e2a\u6307\u9488\u540c\u65f6\u8d70\u76f8\u540c\u6b65\u6570\u4e00\u5b9a\u80fd\u5728\u73af\u5165\u53e3\u76f8\u9047\n                ListNode* p1 = fast;\n                ListNode* p2 = head;\n                while(p1 != p2){\n                    p1 = p1-&gt;next;\n                    p2 = p2-&gt;next;\n                }\n                return p1;\n            }\n        }\n        // fast != slow\u8bf4\u660e\u4e0d\u5b58\u5728\u73af\uff0c\u5f53fast\u4e3a\u7a7a\u6216fast-&gt;next\u4e3a\u7a7a\u505c\u6b62\u5faa\u73af\n        return nullptr;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_31","title":"\u77e9\u9635","text":""},{"location":"algorithm/leetcode/#73","title":"73 \u77e9\u9635\u7f6e\u96f6","text":""},{"location":"algorithm/leetcode/#_32","title":"\u66b4\u529b\u89e3\u6cd5","text":"<p>\u5b9a\u4e49\u884c\u6570\u7ec4<code>row</code>\u548c\u5217\u6570\u7ec4<code>col</code>\u8868\u793a\u884c/\u5217\u6709\u5143\u7d200</p> <p>\u904d\u5386\u4e00\u904d\u77e9\u9635\uff0c\u627e\u5230\u5143\u7d200\u65f6\uff0c\u66f4\u65b0\u884c\u6570\u7ec4<code>row</code>\u548c\u5217\u6570\u7ec4<code>col</code>\u4e3atrue</p> <p>\u5224\u65ad<code>row[i] || col[j]</code>\u65f6\uff0c\u4ee4\u77e9\u9635\u4e3a0</p> <pre><code>class Solution {\npublic:\n    void setZeroes(vector&lt;vector&lt;int&gt;&gt;&amp; matrix) {\n        int n = matrix.size();\n        int m = matrix[0].size();\n        vector&lt;bool&gt; row(n, false), col(m, false);\n        for(int i = 0; i &lt; n; i++){\n            for(int j = 0; j &lt; m; j++){\n                if(!matrix[i][j]){\n                    row[i] = true;\n                    col[j] = true;\n                }\n            }\n        }\n        for(int i = 0; i &lt; n; i++){\n            for(int j = 0; j &lt; m; j++){\n                if(row[i] || col[j])\n                    matrix[i][j] = 0;\n            }\n        }\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#1","title":"\u4f18\u53161","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u77e9\u9635\u7684\u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u5217\u4ee3\u66ff\u884c\u6570\u7ec4<code>row</code>\u548c\u5217\u6570\u7ec4<code>col</code></p> <p>\u4f46\u662f\u8fd9\u79cd\u4ee3\u66ff\u65b9\u6cd5\u4f1a\u5bfc\u81f4\u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u5217\u539f\u6709\u7684\u503c\u4e22\u5931\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4fdd\u5b58\u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u5217\u539f\u6709\u7684\u503c</p> <pre><code>class Solution {\npublic:\n    void setZeroes(vector&lt;vector&lt;int&gt;&gt;&amp; matrix) {\n        int n = matrix.size();\n        int m = matrix[0].size();\n        // \u4fdd\u5b58\u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u5217\u662f\u5426\u542b\u6709\u5143\u7d200\u7684\u72b6\u6001\n        bool firstRow = false, firstCol = false;\n        for(int i = 0; i &lt; n; i++){\n            if(!matrix[i][0])\n                firstCol = true;\n        }\n        for(int j = 0; j &lt; m; j++){\n            if(!matrix[0][j])\n                firstRow = true;\n        }\n        // \u68c0\u6d4b\u9664\u4e86\u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u5217\u5916\u5176\u4ed6\u90e8\u5206\u662f\u5426\u51fa\u73b0\u5143\u7d200\n        // matrix[i][0]\u4fdd\u5b58\u7b2ci\u884c\u662f\u5426\u8981\u7f6e\u4e3a0\n        // matrix[0][j]\u4fdd\u5b58\u7b2cj\u5217\u662f\u5426\u8981\u7f6e\u4e3a0\n        for(int i = 1; i &lt; n; i++){\n            for(int j = 1; j &lt; m; j++){\n                if(!matrix[i][j]){\n                    matrix[i][0] = 0;\n                    matrix[0][j] = 0;\n                }\n            }\n        }\n        // \u5c06\u77e9\u9635\u5bf9\u5e94\u884c/\u5217\u7f6e\u4e3a0\uff08\u4e0d\u5305\u62ec\u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u5217\uff09\n        for(int i = 1; i &lt; n; i++){\n            for(int j = 1; j &lt; m; j++){\n                if(!matrix[i][0] || !matrix[0][j])\n                    matrix[i][j] = 0;\n            }\n        }\n        // \u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u5217\u989d\u5916\u5904\u7406\n        if(firstRow){\n            for(int j = 0; j &lt; m; j++)\n                matrix[0][j] = 0;\n        }\n        if(firstCol){\n            for(int i = 0; i &lt; n; i++)\n                matrix[i][0] = 0;\n        }\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#2","title":"\u4f18\u53162","text":"<p>\u4f18\u53161\u4f7f\u7528\u4e86\u4e24\u4e2a\u6807\u8bb0\u53d8\u91cf<code>firstRow</code>\u548c<code>firstCol</code>\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f18\u5316\u4e3a\u4e00\u4e2a\u6807\u8bb0\u53d8\u91cf</p> <p>\u4f46\u662f\u6211\u89c9\u5f97\u4e0d\u662f\u7279\u522b\u5fc5\u8981\u8fd9\u6837\u4f18\u5316</p> <p>\u601d\u8def\u89c1</p> <p>https://leetcode.cn/problems/set-matrix-zeroes/solutions/669901/ju-zhen-zhi-ling-by-leetcode-solution-9ll7/?envType=study-plan-v2&amp;envId=top-100-liked</p>"},{"location":"algorithm/leetcode/#48","title":"48 \u65cb\u8f6c\u56fe\u50cf","text":"<p>\u5b98\u65b9\u9898\u89e3\u5df2\u7ecf\u8bf4\u7684\u975e\u5e38\u8be6\u7ec6</p> <p>https://leetcode.cn/problems/rotate-image/?envType=study-plan-v2&amp;envId=top-100-liked </p>"},{"location":"algorithm/leetcode/#_33","title":"\u666e\u901a\u505a\u6cd5","text":"<pre><code>class Solution {\npublic:\n    void rotate(vector&lt;vector&lt;int&gt;&gt;&amp; matrix) {\n        int n = matrix.size();\n        vector&lt;vector&lt;int&gt;&gt; newMatrix(n, vector&lt;int&gt;(n, 0));\n        for(int i = 0; i &lt; n; i++){\n            for(int j = 0; j &lt; n; j++){\n                newMatrix[j][n - 1 - i] = matrix[i][j];\n            }\n        }\n        matrix.assign(newMatrix.begin(),newMatrix.end());\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_34","title":"\u539f\u5730\u65cb\u8f6c","text":""},{"location":"algorithm/leetcode/#_35","title":"\u65b9\u6cd5\u4e00","text":"<pre><code>class Solution {\npublic:\n    void rotate(vector&lt;vector&lt;int&gt;&gt;&amp; matrix) {\n        int n = matrix.size();\n        for (int row = 0; row &lt; n / 2; row++) {\n            for (int col = 0; col &lt; (n + 1) / 2; col++) {\n                int temp = matrix[row][col];\n                matrix[row][col] = matrix[n - 1 - col][row];\n                matrix[n - 1 - col][row] = matrix[n - 1 - row][n - 1 - col];\n                matrix[n - 1 - row][n - 1 - col] = matrix[col][n - 1 - row];\n                matrix[col][n - 1 - row] = temp;\n            }\n        }\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N^2)\\)\uff0c\u5176\u4e2d N \u662f matrix \u7684\u8fb9\u957f\u3002\u6211\u4eec\u9700\u8981\u679a\u4e3e\u7684\u5b50\u77e9\u9635\u5927\u5c0f\u4e3a \\(O(\u230an/2\u230b\u00d7\u230a(n+1)/2\u230b)=O(N^2 )\\)\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)\u3002\u4e3a\u539f\u5730\u65cb\u8f6c\u3002</p>"},{"location":"algorithm/leetcode/#_36","title":"\u65b9\u6cd5\u4e8c","text":"<pre><code>class Solution {\npublic:\n    void rotate(vector&lt;vector&lt;int&gt;&gt;&amp; matrix) {\n        int n = matrix.size();\n        //  \u5148\u77e9\u9635\u8f6c\u7f6e\n        // \u6ce8\u610f\u77e9\u9635\u8f6c\u7f6e\u65f6\uff0c\u56e0\u4e3a\u5bf9\u79f0\u6027\uff0c\u6211\u4eec\u53ea\u9700\u8981\u904d\u5386\u4e0a\u4e09\u89d2\n        for (int i = 0; i &lt; n; i++) {\n            for (int j = i + 1; j &lt; n; j++) {\n                swap(matrix[i][j], matrix[j][i]);\n            }\n        }\n        // \u518d\u5de6\u53f3\u5bf9\u79f0\u7684\u4e24\u5217\u4e92\u6362\n        for (int j = 0; j &lt; n / 2; j++) {\n            for (int i = 0; i &lt; n; i++) {\n                swap(matrix[i][j], matrix[i][n - 1 - j]);\n            }\n        }\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N^2)\\)\uff0c\u5176\u4e2d N \u662f matrix \u7684\u8fb9\u957f\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u7ffb\u8f6c\u64cd\u4f5c\uff0c\u6211\u4eec\u90fd\u9700\u8981\u679a\u4e3e\u77e9\u9635\u4e2d\u4e00\u534a\u7684\u5143\u7d20\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)\u3002\u4e3a\u539f\u5730\u7ffb\u8f6c\u5f97\u5230\u7684\u539f\u5730\u65cb\u8f6c\u3002</p>"},{"location":"algorithm/leetcode/#240-ii","title":"240 \u641c\u7d22\u4e8c\u7ef4\u77e9\u9635II","text":"<p>https://leetcode.cn/problems/search-a-2d-matrix-ii/description/</p>"},{"location":"algorithm/leetcode/#_37","title":"\u89e3\u6cd5\u4e00\uff1a\u66b4\u529b\u679a\u4e3e","text":"<p>\u65e0\u8111\u89e3\u6cd5\uff0c\u6ca1\u6709\u5229\u7528\u9898\u610f\u201c\u5347\u5e8f\u201d</p> <pre><code>class Solution {\npublic:\n    bool searchMatrix(vector&lt;vector&lt;int&gt;&gt;&amp; matrix, int target) {\n        for(int i = 0; i &lt; matrix.size(); i++){\n            for(int j = 0; j &lt; matrix[i].size(); j++){\n                if(matrix[i][j] == target)\n                    return true;\n            }\n        }\n        return false;\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(mn)\u3002</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\u3002</li> </ul>"},{"location":"algorithm/leetcode/#_38","title":"\u89e3\u6cd5\u4e8c\uff1a\u4e8c\u5206\u67e5\u627e","text":"<p>\u5229\u7528\u9898\u610f\u201c\u5347\u5e8f\u201d\u53ef\u76f4\u63a5\u4e8c\u5206\u67e5\u627e</p> <pre><code>class Solution {\npublic:\n    bool searchMatrix(vector&lt;vector&lt;int&gt;&gt;&amp; matrix, int target) {\n        // \u8fd9\u91cc\u8981\u7528\u5f15\u7528\uff0c\u4e0d\u7136\u4f1a\u62a5\u5185\u5b58\u8d85\u51fa\n        for(const auto &amp;row : matrix){\n            auto it = lower_bound(row.begin(), row.end(), target);\n            if(it != row.end() &amp;&amp; *it == target)   return true;\n        }\n        return false;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_39","title":"\u89e3\u6cd5\u4e09\uff1a\u4e8c\u53c9\u641c\u7d22\u6811","text":"<p>https://leetcode.cn/problems/search-a-2d-matrix-ii/solutions/2361487/240-sou-suo-er-wei-ju-zhen-iitan-xin-qin-7mtf</p> <p>\u5c06\u77e9\u9635\u9006\u65f6\u9488\u65cb\u8f6c45\u5ea6\uff0c\u5c06\u5176\u53d8\u6210\u4e8c\u53c9\u641c\u7d22\u6811</p> <p>\u4ee5\u53f3\u4e0a\u89d2\u4e3a\u6839\u8282\u70b9</p> <p>\u5982\u679c\u8d85\u51fa\u8fb9\u754c\uff0c\u8bf4\u660e\u65e0\u89e3</p> <pre><code>class Solution {\npublic:\n    bool searchMatrix(vector&lt;vector&lt;int&gt;&gt;&amp; matrix, int target) {\n        int i = 0, j = matrix[0].size() - 1;\n        while(i &lt;= matrix.size() - 1 &amp;&amp; j &gt;= 0 ){\n            if(matrix[i][j] == target) return true;\n            if(matrix[i][j] &lt; target) i++;\n            else j--;\n        }\n        return false;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_40","title":"leetcode\u5237\u9898\u7b14\u8bb0","text":""},{"location":"algorithm/leetcode/#_41","title":"\u52a8\u6001\u89c4\u5212","text":""},{"location":"algorithm/leetcode/#_42","title":"\u57fa\u7840\u9898","text":""},{"location":"algorithm/leetcode/#509","title":"509 \u6590\u6ce2\u90a3\u5951\u6570","text":"<p>https://leetcode.cn/problems/fibonacci-number/description/</p>"},{"location":"algorithm/leetcode/#_43","title":"\u9012\u5f52","text":"<pre><code>class Solution {\npublic:\n    int fib(int n) {\n        if(n == 0)\n            return 0;\n        if(n == 1)\n            return 1;\n        return fib(n - 1) + fib(n - 2); \n    }\n};\n</code></pre> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(2^n)\\)</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u7b97\u4e0a\u4e86\u7f16\u7a0b\u8bed\u8a00\u4e2d\u5b9e\u73b0\u9012\u5f52\u7684\u7cfb\u7edf\u6808\u6240\u5360\u7a7a\u95f4</li> </ul>"},{"location":"algorithm/leetcode/#_44","title":"\u52a8\u6001\u89c4\u5212","text":"<pre><code>class Solution {\npublic:\n    int fib(int n) {\n        if(n &lt;= 1)\n            return n;\n       vector&lt;int&gt; num(n + 1);\n       num[0] = 0;\n       num[1] = 1;\n       for(int i = 2; i &lt;= n; i++){\n            num[i] = num[i - 1] + num[i - 2];\n       } \n       return num[n];\n    }\n};\n</code></pre> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</li> </ul>"},{"location":"algorithm/leetcode/#_45","title":"\u52a8\u6001\u89c4\u5212\u4f18\u5316","text":"<pre><code>class Solution {\npublic:\n    int fib(int n) {\n        if(n &lt;= 1)\n            return n;\n        int a = 0;\n        int b = 1;\n        int c;\n        for(int i = 2; i &lt;= n; i++){\n            c = a + b;\n            a = b;\n            b = c;\n        }\n        return c;\n    }\n};\n</code></pre> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</li> </ul>"},{"location":"algorithm/leetcode/#70","title":"70 \u722c\u697c\u68af","text":"<p>https://leetcode.cn/problems/climbing-stairs/description/</p> <p>\u722c\u697c\u68af\u548c\u6590\u6ce2\u90a3\u5951\u6570\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff1a\u521d\u59cb\u503c\u4e0d\u540c</p> <ul> <li>\u722c\u697c\u68afn == 1, dp[1] = 1; n == 2, dp[2] = 2</li> <li>\u6590\u6ce2\u90a3\u5951\u6570n == 0, dp[0] = 0; n == 1, dp[1] = 1; n == 2, dp[2] = 1;</li> </ul>"},{"location":"algorithm/leetcode/#_46","title":"\u89e3\u6cd5\u4e00\uff1a\u9012\u5f52","text":"<pre><code>class Solution {\npublic:\n    int climbStairs(int n) {\n        if(n &lt;= 1)\n            return 1;\n        return climbStairs(n - 1) + climbStairs(n - 2);\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(2^n)\\)</p> <p>\u53ef\u89c6\u4e3a\u4e8c\u53c9\u6811\uff0c\u6811\u9ad8\u4e3an\uff0c\u8282\u70b9\u6570\u4e3a\\(2^n\\)\uff0c\u904d\u5386\u641c\u7d22\u6811\u9700\u8981\\(2^n\\)\u6b21</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <p>n\u4e2a\u6808\u7a7a\u95f4</p>"},{"location":"algorithm/leetcode/#_47","title":"\u89e3\u6cd5\u4e8c\uff1a\u8bb0\u5fc6\u5316\u641c\u7d22","text":"<pre><code>class Solution {\nprivate:\n    vector&lt;int&gt; m;\n    int dfs(int n){\n        if(n &lt;= 1)\n            return 1;\n        int &amp;res = m[n];\n        if(res)\n            return res;\n        return dfs(n - 1) + dfs(n - 2);\n    }\npublic:\n    int climbStairs(int n) {\n        m.resize(n + 1);\n        return dfs(n);\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <p>\u6bcf\u4e2a\u72b6\u6001\u53ea\u4f1a\u8ba1\u7b97\u4e00\u6b21\uff0c\u5171n\u4e2a\u72b6\u6001</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <p>n\u4e2a\u6808\u7a7a\u95f4</p>"},{"location":"algorithm/leetcode/#_48","title":"\u89e3\u6cd5\u4e09\uff1a\u52a8\u6001\u89c4\u5212","text":"<pre><code>class Solution {\npublic:\n    vector&lt;int&gt; dp;\n    int climbStairs(int n) {\n        dp.resize(n + 1);\n        dp[0] = 1;\n        dp[1] = 1;\n        for(int i = 2; i &lt;= n; i++)\n            dp[i] = dp[i - 1] + dp[i - 2];\n        return dp[n];\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <p>\u72b6\u6001\u6570n * \u72b6\u6001\u8ba1\u7b971\u6b21</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <p>n\u4e2a\u72b6\u6001</p>"},{"location":"algorithm/leetcode/#_49","title":"\u89e3\u6cd5\u56db\uff1a\u7a7a\u95f4\u4f18\u5316","text":"<pre><code>class Solution {\npublic:\n    int climbStairs(int n) {\n        int a = 0, b = 1, c;\n        for(int i = 1; i &lt;= n; i++){\n            c = a + b;\n            a = b;\n            b = c;\n        }\n        return c;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <p>\u72b6\u6001\u6570n * \u72b6\u6001\u8ba1\u7b971\u6b21</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</p> <p>\u53ea\u97003\u4e2a\u53d8\u91cf</p>"},{"location":"algorithm/leetcode/#746","title":"746 \u4f7f\u7528\u6700\u5c0f\u82b1\u8d39\u722c\u697c\u68af","text":"<p>\u552f\u4e00\u9700\u8981\u6ce8\u610f\u7684\u662f\u521d\u59cb\u5316\uff1a</p> <p>\u53ef\u4ee5\u4ece\u7b2c0\u9636\u6216\u7b2c1\u9636\u697c\u68af\u51fa\u53d1\uff0c\u8bf4\u660e\u5230\u8fbe\u8fd9\u4e24\u9636\u697c\u68af\u4e0d\u9700\u8981\u82b1\u8d39</p> <p>\u56e0\u6b64dp[0]\u548cdp[1]\u90fd\u4e3a0\uff0c\u800c\u4e0d\u662fcost[0]\u548ccost[1]</p>"},{"location":"algorithm/leetcode/#_50","title":"\u6b63\u5e38\u7248","text":"<pre><code>class Solution {\npublic:\n    int minCostClimbingStairs(vector&lt;int&gt;&amp; cost) {\n        int n = cost.size();\n        vector&lt;int&gt; dp(n + 1);\n        dp[0] = 0;\n        dp[1] = 0;\n        // dp[i] \u8868\u793a\u5230\u8fbe\u7b2ci\u4e2a\u53f0\u9636\u7684\u6700\u4f4e\u82b1\u8d39\n        for(int i = 2; i &lt;= n; i++){\n            dp[i] = min(dp[i - 1] + cost[i - 1], dp[i - 2] + cost[i - 2]);\n        }\n        return dp[n];\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p>"},{"location":"algorithm/leetcode/#_51","title":"\u4f18\u5316\u7248","text":"<pre><code>class Solution {\npublic:\n    int minCostClimbingStairs(vector&lt;int&gt;&amp; cost) {\n        int n = cost.size();\n        vector&lt;int&gt; dp(2);\n        dp[0] = 0;\n        dp[1] = 0;\n        int res;\n        // dp[i] \u8868\u793a\u5230\u8fbe\u7b2ci\u4e2a\u53f0\u9636\u7684\u6700\u4f4e\u82b1\u8d39\n        for(int i = 2; i &lt;= n; i++){\n            res = min(dp[1] + cost[i - 1], dp[0] + cost[i - 2]);\n            dp[0] = dp[1];\n            dp[1] = res;\n        }\n        return res;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</p>"},{"location":"algorithm/leetcode/#62","title":"62 \u4e0d\u540c\u8def\u5f84","text":""},{"location":"algorithm/leetcode/#_52","title":"\u6df1\u641c\uff08\u8d85\u65f6\uff09","text":"<p>\u4ece\u5de6\u4e0a(1,1)\u5f00\u59cb\u5f80\u4e0b\u904d\u5386\uff0c\u51fd\u6570\u8c03\u7528\u56fe\u548c\u4e8c\u53c9\u6811\u975e\u5e38\u76f8\u4f3c</p> <p>\u91cd\u590d\u5927\u91cf\u65e0\u7528\u8282\u70b9</p> <p>\u8fd9\u68f5\u6811\u7684\u6df1\u5ea6\u5176\u5b9e\u5c31\u662fm+n-1\uff08\u6df1\u5ea6\u6309\u4ece1\u5f00\u59cb\u8ba1\u7b97\uff09\u3002</p> <p>\u90a3\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570\u5c31\u662f$ 2^(m + n - 1) - 1$\u3002\u53ef\u4ee5\u7406\u89e3\u6df1\u641c\u7684\u7b97\u6cd5\u5c31\u662f\u904d\u5386\u4e86\u6574\u4e2a\u6ee1\u4e8c\u53c9\u6811\uff08\u5176\u5b9e\u6ca1\u6709\u904d\u5386\u6574\u4e2a\u6ee1\u4e8c\u53c9\u6811\uff0c\u53ea\u662f\u8fd1\u4f3c\u800c\u5df2\uff09</p> <p>\u6240\u4ee5\u4e0a\u9762\u6df1\u641c\u4ee3\u7801\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(2^{m + n - 1} - 1)\\)\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u662f\u6307\u6570\u7ea7\u522b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u662f\u975e\u5e38\u5927\u7684\u3002</p> <pre><code>class Solution {\nprivate:\n    int dfs(int i, int j, int m, int n){\n        if(i &gt; m || j &gt; n)  return 0;\n        if(i == m &amp;&amp; j == n)    return 1;\n        return dfs(i + 1, j, m, n) + dfs(i, j + 1, m, n);\n    }\npublic:\n    int uniquePaths(int m, int n) {\n        return dfs(1, 1, m, n);\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_53","title":"\u52a8\u6001\u89c4\u5212","text":""},{"location":"algorithm/leetcode/#_54","title":"\u4e24\u7ef4\u505a\u6cd5","text":"<p>\u521d\u59cb\u5316<code>dp[i][0] = 1</code>\u548c<code>dp[0][j] = 1</code></p> <pre><code>class Solution {\npublic:\n    int uniquePaths(int m, int n) {\n        vector&lt;vector&lt;int&gt;&gt; dp(m, vector&lt;int&gt;(n, 0));\n        // \u7531\u4e8e\u673a\u5668\u4eba\u6bcf\u6b21\u53ea\u80fd\u5f80\u4e0b\u6216\u5f80\u53f3\n        // \u6240\u4ee5dp[i][0]\u548cdp[0][j]\u53ea\u6709\u4e00\u6761\u8def\n        for(int i = 0; i &lt; m; i++) dp[i][0] = 1;\n        for(int j = 0; j &lt; n; j++) dp[0][j] = 1;\n        // \u4ecedp[i][j]\u5f00\u59cb\uff0c\u8def\u5f84\u6765\u6e90\u53ef\u4ee5\u662fdp[i - 1][j]\u548cdp[i][j - 1]\n        for(int i = 1; i &lt; m; i++){\n            for(int j = 1; j &lt; n; j++){\n                dp[i][j] = dp[i - 1][j] + dp[i][j - 1];\n            }\n        }\n        return dp[m - 1][n - 1];\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(m \u00d7 n)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(m \u00d7 n)</p>"},{"location":"algorithm/leetcode/#_55","title":"\u4e00\u7ef4\u4f18\u5316","text":"<p><code>dp[i][j] = dp[i - 1][j] + dp[i][j - 1];</code>\u5206\u6790\u8fd9\u4e00\u9012\u63a8\u516c\u5f0f\uff0c\u6211\u4eec\u80fd\u591f\u53d1\u73b0\uff1a\u5728\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3\u7684\u9012\u5f52\u987a\u5e8f\u4e0b\uff1a</p> <p><code>dp[i][j] = dp[i - 1][j] + dp[i][j - 1];</code>\u7684\u6548\u679c\u548c<code>dp[j] = dp[j] + dp[j - 1];</code>\u76f8\u540c\uff0c\u56e0\u4e3adp[j]\u4fdd\u5b58\u7684\u5c31\u662f<code>dp[i - 1][j]</code>\u7684\u503c\uff0cdp[j - 1]\u4fdd\u5b58\u7684\u5c31\u662f<code>dp[i][j - 1]</code>\u7684\u503c\uff0c\u66f4\u65b0<code>dp[j]</code>\u4e4b\u540e<code>dp[j]</code>\u5c31\u53d8\u6210\u4e86<code>dp[i][j]</code></p> <pre><code>class Solution {\npublic:\n    int uniquePaths(int m, int n) {\n        vector&lt;int&gt; dp(n, 0);\n        // \u7531\u4e8e\u673a\u5668\u4eba\u6bcf\u6b21\u53ea\u80fd\u5f80\u4e0b\u6216\u5f80\u53f3\n        // \u6240\u4ee5dp[i][0]\u548cdp[0][j]\u53ea\u6709\u4e00\u6761\u8def\n        for(int j = 0; j &lt; n; j++) dp[j] = 1;\n        // \u4ecedp[i][j]\u5f00\u59cb\uff0c\u8def\u5f84\u6765\u6e90\u53ef\u4ee5\u662fdp[i - 1][j]\u548cdp[i][j - 1]\n        for(int i = 1; i &lt; m; i++){\n            // \u8fd9\u91cc\u4ecej = 0\u5f00\u59cb\u6216\u8005j = 1\u5f00\u59cb\u90fd\u53ef\u4ee5\uff0c\u56e0\u4e3a\u6ca1\u6709\u6761\u4ef6\u80fd\u591f\u66f4\u6539dp[i][0]\u7684\u72b6\u6001\n            for(int j = 1; j &lt; n; j++){\n                    dp[j] = dp[j] + dp[j - 1];\n            }\n        }\n        return dp[n - 1];\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(m \u00d7 n)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)</p>"},{"location":"algorithm/leetcode/#_56","title":"\u6570\u8bba\u505a\u6cd5","text":"<p>\u4e00\u5171\\(m - 1 + n -1 = n + m -2\\)\u6b65\uff0c\u9009\u62e9\u5176\u4e2dm - 1\u6b65\u5f80\u4e0b\uff0c\u5f97\u5230\u7ec4\u5408\u6570\u5c31\u662f\u9898\u89e3\uff1a\\(C_{n + m - 2}^{m - 1}\\)</p> <p>\u89c1https://programmercarl.com/0062.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84.html#%E6%80%9D%E8%B7%AF</p>"},{"location":"algorithm/leetcode/#63-ii","title":"63 \u4e0d\u540c\u8def\u5f84II","text":""},{"location":"algorithm/leetcode/#_57","title":"\u6df1\u641c\uff08\u8d85\u65f6\uff09","text":"<pre><code>class Solution {\nprivate:\n    int dfs(vector&lt;vector&lt;int&gt;&gt;&amp; obstacleGrid, int i, int j){\n        int m = obstacleGrid.size();\n        int n = obstacleGrid[0].size();\n        // obstacleGrid[i][j] == 1\u76f4\u63a5\u8fd4\u56de0\n        if(i &gt;= m || j &gt;= n || obstacleGrid[i][j] == 1)  return 0;\n        if(i == m - 1 &amp;&amp; j == n - 1 &amp;&amp; obstacleGrid[i][j] == 0)    return 1;\n        return dfs(obstacleGrid, i + 1, j) + dfs(obstacleGrid, i, j + 1);\n    }\npublic:\n    int uniquePathsWithObstacles(vector&lt;vector&lt;int&gt;&gt;&amp; obstacleGrid) {\n        return dfs(obstacleGrid,0, 0);\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_58","title":"\u52a8\u6001\u89c4\u5212","text":"<p>\u521d\u59cb\u5316\u7684\u65f6\u5019\u6ce8\u610f</p> <p><code>obstacleGrid[i][0] == 0</code>\u8bf4\u660e<code>dp[i + 1][0] == 0</code>\u53ca\u4e4b\u540e\u7684<code>dp[i][0]</code>\u90fd\u4e3a0</p>"},{"location":"algorithm/leetcode/#_59","title":"\u4e8c\u7ef4\u505a\u6cd5","text":"<pre><code>class Solution {\npublic:\n    int uniquePathsWithObstacles(vector&lt;vector&lt;int&gt;&gt;&amp; obstacleGrid) {\n        int m = obstacleGrid.size();\n        int n = obstacleGrid[0].size();\n        vector&lt;vector&lt;int&gt;&gt; dp(m, vector&lt;int&gt;(n, 0));\n        for(int i = 0; i &lt; m &amp;&amp; obstacleGrid[i][0] == 0; i++) {\n            dp[i][0] = 1;\n        }\n        for(int j = 0; j &lt; n &amp;&amp; obstacleGrid[0][j] == 0; j++) {\n            dp[0][j] = 1;\n        }\n        for(int i = 1; i &lt; m; i++){\n            for(int j = 1; j &lt; n; j++){\n                if(obstacleGrid[i][j] == 0)\n                    dp[i][j] = dp[i - 1][j] + dp[i][j - 1];\n                else\n                    dp[i][j] = 0;\n            }\n        }\n        return dp[m - 1][n - 1];\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_60","title":"\u4e00\u7ef4\u4f18\u5316","text":"<pre><code>class Solution {\npublic:\n    int uniquePathsWithObstacles(vector&lt;vector&lt;int&gt;&gt;&amp; obstacleGrid) {\n        int m = obstacleGrid.size();\n        int n = obstacleGrid[0].size();\n        vector&lt;int&gt; dp(n, 0);\n        // \u8fd9\u91cc\u4e0d\u4ec5\u628adp[0][j]\u90fd\u521d\u59cb\u5316\u4e3a1\n        // \u800c\u4e14\u628adp[i][0](i == 0)\u521d\u59cb\u5316\u4e3a1\n        // \u5728\u4e4b\u540e\u7684\u5faa\u73af\u4e2d\uff0c\u5982\u679cobstacleGrid[i][0] == 0\u90a3\u4e48dp[i][0]\u5c06\u4e00\u76f4\u4fdd\u6301\u4e3a1\n        for(int j = 0; j &lt; n &amp;&amp; obstacleGrid[0][j] == 0; j++) dp[j] = 1;\n        for(int i = 1; i &lt; m; i++){\n            // \u8fd9\u91cc\u5fc5\u987b\u4ecej == 0\u5f00\u59cb\n            // \u56e0\u4e3a\u5982\u679cobstacleGrid[i][0] == 1\uff0c\u9700\u8981\u5c06dp[i][0]\u66f4\u6539\u72b6\u6001\u4e3a0\n            // \u4e00\u65e6\u66f4\u6539\u72b6\u6001\u4e3a0\u540e\uff0c\u4e4b\u540e\u5c06\u4e00\u76f4\u4fdd\u6301\u72b6\u6001\u4e3a0\n            for(int j = 0; j &lt; n; j++){\n                if(obstacleGrid[i][j] == 1)\n                    dp[j] = 0;\n                else if(j != 0)\n                    dp[j] = dp[j] + dp[j - 1];\n            }\n        }\n        return dp[n - 1];\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#343","title":"343 \u6574\u6570\u5212\u5206","text":"<p><code>dp[i]</code> \u8868\u793a\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 <code>n</code> \uff0c\u5c06\u5176\u62c6\u5206\u4e3a <code>k</code> \u4e2a \u6b63\u6574\u6570 \u7684\u548c\uff08 <code>k &gt;= 2</code> \uff09\u6240\u80fd\u5f97\u5230\u7684\u6700\u5927\u4e58\u79ef</p> <p>\u9012\u63a8\u516c\u5f0f</p> <p>\\(dp[i] = max(dp[i], max((i - j) * j, dp[i - j] * j))\\);</p> <ul> <li>\\((i - j) * j\\)\u8868\u793a\u53ea\u62c6\u5206\u4e24\u4e2a\u6b63\u6574\u6570 (k == 2)</li> <li>\\(dp[i - j] * j\\)\u8868\u793a\u62c6\u5206\u591a\u4e2a\u6b63\u6574\u6570 (k &gt; 2)</li> </ul> <p>\u904d\u5386\u987a\u5e8f</p> <p><code>dp[i]</code>\u9700\u8981\u4f7f\u7528<code>dp[i -j]</code>\uff0c\u6240\u4ee5\u904d\u5386\u987a\u5e8f\u4e3a\u4ece\u5de6\u5230\u53f3</p> <p>\u521d\u59cb\u5316</p> <p>\u9898\u610f\u7ed9\u51fan &gt;= 2\uff0cj\u4ece1\u5f00\u59cb\u904d\u5386</p> <p>\u56e0\u6b64\u9700\u8981\u521d\u59cb\u5316dp[2 - 1] </p> <p>n == 1\uff0c\u65e0\u6cd5\u5206\u89e3\u4e3ak &gt;= 2\u4e2a\u6b63\u6574\u6570\u7684\u548c\uff0c\u56e0\u6b64dp[1] = 0</p> <pre><code>class Solution {\npublic:\n    int integerBreak(int n) {\n        vector&lt;int&gt; dp(n + 1, 0);\n        // n &gt;= 2\uff0c\u6839\u636e\u9012\u63a8\u516c\u5f0f\uff0c\u521d\u59cb\u5316dp[2]\n        dp[1] = 0;\n        for (int i = 2; i &lt;= n; i++) {\n            for (int j = 1; j &lt;= i / 2; j++) {\n                // (i - j) * j\u8868\u793a\u53ea\u62c6\u5206\u4e00\u6b21 (k == 2)\n                // dp[i - j] * j\u8868\u793a\u62c6\u5206\u591a\u6b21\n                dp[i] = max(dp[i], max((i - j) * j, dp[i - j] * j));\n            }\n        }\n        return dp[n];\n    }\n};\n</code></pre> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2)</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)</li> </ul>"},{"location":"algorithm/leetcode/#96","title":"96 \u4e0d\u540c\u7684\u641c\u7d22\u6811","text":"<p>\u8fd9\u9053\u9898\u6b63\u5e38\u4eba\u5e94\u8be5\u5f88\u96be\u60f3\u5230\u3002\u3002\u3002</p> <p>dp[i]\u8868\u793a\u8282\u70b91\u5230\u8282\u70b9i\u7684\u641c\u7d22\u6811\u4e2a\u6570</p> <p>\u9012\u63a8\u516c\u5f0f</p> <p>\\(dp[i] = \\sum_{1}^{i}j\u4e3a\u5934\u8282\u70b9\u7684\u641c\u7d22\u6811\u4e2a\u6570\\)</p> <p>j\u4e3a\u5934\u8282\u70b9\u641c\u7d22\u6811\u4e2a\u6570\u8ba1\u7b97\u65b9\u6cd5\uff1adp[j - 1] * dp[i - j]</p> <pre><code>class Solution {\npublic:\n    int numTrees(int n) {\n        // dp[i]\u8868\u793a\u8282\u70b91\u5230\u8282\u70b9i\u7684\u641c\u7d22\u6811\u4e2a\u6570\n        vector&lt;int&gt; dp(n + 1, 0);\n        dp[0] = 1;\n        for(int i = 1;i &lt;= n; i++){\n            // \u679a\u4e3e\u5934\u8282\u70b9, j\u4e3a\u5934\u8282\u70b9\u7684\u503c\n            // \u6839\u636e\u641c\u7d22\u6811\u7279\u6027\uff0cj - 1\u4e3a\u5de6\u5b50\u6811\u7684\u4e2a\u6570\uff0c i - j\u4e3a\u53f3\u5b50\u6811\u7684\u4e2a\u6570\n            for(int j = 1; j &lt;= i; j++){\n                // \u9012\u63a8\u516c\u5f0f\n                dp[i] += dp[j - 1] * dp[i - j];\n            }\n        }\n        return dp[n];\n    }\n};\n</code></pre> <p>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</p>"},{"location":"algorithm/leetcode/#_61","title":"\u5b50\u5e8f\u5217\u7cfb\u5217","text":""},{"location":"algorithm/leetcode/#300","title":"300 \u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217","text":""},{"location":"algorithm/leetcode/#_62","title":"\u52a8\u6001\u89c4\u5212","text":"<p>\u601d\u8def\uff1a</p> <ul> <li> <p>\u9898\u76ee\u6c42\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u627e\u4e86k\u4e2a\u5143\u7d20\u5f62\u6210\u4e86\u5b50\u5e8f\u5217a\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u60f3\u8981\u7ee7\u7eed\u589e\u52a0\u65b0\u5143\u7d20\uff0c\u9700\u8981\u5173\u6ce8\u5b50\u5e8f\u5217a\u6700\u540e\u4e00\u4e2a\u5143\u7d20<code>nums[i]</code>\uff0c\u6bd4\u8f83<code>nums[j]</code>\u4e0e<code>nums[i]</code>\u7684\u5173\u7cfb\uff08j &gt; i\uff09\u3002\u8fd9\u4e00\u6b65\u9aa4\u672c\u8d28\u4e0a\u5173\u6ce8\u7684\u662f\u5b50\u5e8f\u5217\u7684\u672b\u5c3e\u5143\u7d20\uff0c\u5bf9\u4e8e\u5b50\u5e8f\u5217\u5176\u4ed6\u5143\u7d20\u4e0d\u5173\u5fc3\u3002\u56e0\u6b64\u6211\u4eec\u56f4\u7ed5\u672b\u5c3e\u5143\u7d20\u5efa\u6a21\u3002</p> </li> <li> <p>\u6211\u4eec\u5c06<code>dp[i]</code>\u8bbe\u7f6e\u4e3a\u7b2ci\u4e2a\u5143\u7d20\u7ed3\u5c3e\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u957f\u5ea6\uff0c\u786e\u8ba4dp[i]\u542b\u4e49\u540e\u5f88\u5bb9\u6613\u5f97\u5230\u9012\u63a8\u516c\u5f0f</p> </li> <li> <p>\u9012\u63a8\u516c\u5f0f\uff1a</p> </li> </ul> <p>\u904d\u5386<code>nums[i]</code>\u4e4b\u524d\u7684\u5143\u7d20<code>nums[j]</code>\uff0c\u6bd4\u8f83\u4e24\u8005\u5173\u7cfb\uff0c\u5982\u679c<code>nums[i] &gt; nums[j]</code>\uff0c<code>dp[i]  = dp[j] + 1</code></p> <pre><code>// \u4f2a\u4ee3\u7801\nif(nums[i] &gt; nums[j]) {\n  dp[i] = max(dp[j] + 1)\uff0cj\u4ece0\u904d\u5386\u5230i - 1\n}\nres = max(dp[i])\uff0ci\u4ece0\u904d\u5386\u5230i - 1\n</code></pre> <ul> <li>\u904d\u5386\u987a\u5e8f\uff1a\u4ece\u5de6\u5230\u53f3\u6216\u4ece\u53f3\u5230\u5de6\u90fd\u53ef\u4ee5\uff0c\u53ea\u9700\u8981\u5c06\u7d22\u5f15[0, i - 1]\u7684\u5143\u7d20\u904d\u5386\u4e00\u904d\uff0c\u9ed8\u8ba4\u4ece\u5de6\u5230\u53f3</li> <li>\u521d\u59cb\u5316\uff1a\u6bcf\u4e2a\u5143\u7d20\u7ed3\u5c3e\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u957f\u5ea6\u81f3\u5c11\u4e3a1\uff0c\u5373\u8be5\u5143\u7d20\u672c\u8eab\uff0c\u6240\u4ee5\\(dp[i] = 1, i \\in [0, n - 1]\\)</li> <li>\u7ed3\u679c\uff1a\u53d6\\(res = max(dp[i]), i \\in [0, n - 1]\\)</li> </ul> <pre><code>class Solution {\npublic:\n    int lengthOfLIS(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        // dp[i]\u8868\u793a\u4ee5nums[i]\u7ed3\u5c3e\u7684\u6700\u957f\u4e25\u683c\u9012\u589e\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\n        // \u9ed8\u8ba4\u4e3a1\uff0c\u4ec5\u5305\u542bnums[i]\n        vector&lt;int&gt; dp(n, 1);\n        // \u53d6dp[i]\u6700\u5927\u503c\u4e3a\u7ed3\u679c\n        int res = 1;\n        for(int i = 0; i &lt; n; i++){\n            // \u904d\u5386j\u4ece0\u5230i - 1\n            for(int j = 0; j &lt; i; j++){\n                if(nums[i] &gt; nums[j])\n                    dp[i] = max(dp[i], dp[j] + 1);\n            }\n            res = max(res, dp[i]);\n        }\n        return res;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2 )\\)\uff0c\u5176\u4e2d n \u4e3a\u6570\u7ec4 nums \u7684\u957f\u5ea6\u3002\u52a8\u6001\u89c4\u5212\u7684\u72b6\u6001\u6570\u4e3a n\uff0c\u8ba1\u7b97\u72b6\u6001 dp[i] \u65f6\uff0c\u9700\u8981 O(n) \u7684\u65f6\u95f4\u904d\u5386 dp[0\u2026i\u22121] \u7684\u6240\u6709\u72b6\u6001\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n^2)\\)\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u9700\u8981\u989d\u5916\u4f7f\u7528\u957f\u5ea6\u4e3a n \u7684 dp \u6570\u7ec4</p>"},{"location":"algorithm/leetcode/#_63","title":"\u8d2a\u5fc3 + \u4e8c\u5206\u67e5\u627e","text":"<p>\u8fd9\u4e2a\u4f18\u5316\u65b9\u6cd5\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u6211\u4eec\u60f3\u8981\u5f97\u5230\u5c3d\u53ef\u80fd\u957f\u7684\u9012\u589e\u5e8f\u5217\uff0c\u5c31\u9700\u8981\u9009\u62e9\u548c\u5f53\u524d\u672b\u5c3e\u5143\u7d20nums[i]\u5c3d\u53ef\u80fd\u5927\u5c0f\u76f8\u8fd1\u7684\u5143\u7d20\uff0c\u4ece\u800c\u51cf\u5c0f\u5e8f\u5217\u4e0a\u5347\u901f\u5ea6</p> <p>\u9009\u62e9\u548c\u5f53\u524d\u672b\u5c3e\u5143\u7d20nums[i]\u5c3d\u53ef\u80fd\u5927\u5c0f\u76f8\u8fd1\u7684\u5143\u7d20</p> <ul> <li>\u8fd9\u5c31\u662f\u8d2a\u5fc3\u7684\u601d\u8def\uff0c\u6211\u4eec\u5bfb\u627e\u6bd4nums[i]\u5927\u7684\u5143\u7d20\u96c6\u5408\uff0c\u518d\u4ece\u4e2d\u627e\u5230\u6700\u5c0f\u7684\u5143\u7d20\u5373\u53ef</li> </ul> <p>d[i] \u8868\u793a\u957f\u5ea6\u4e3ai\u7684\u9012\u589e\u5e8f\u5217\u672b\u5c3e\u5143\u7d20\u7684\u6700\u5c0f\u503c</p> <pre><code>class Solution {\npublic:\n    int lengthOfLIS(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        if(n == 0)\n            return 0;\n        vector&lt;int&gt; d(n + 1, 0);\n        int len = 1;\n        d[len] = nums[0];\n        for(int i = 1; i &lt; n; i++){\n            if(nums[i] &gt; d[len]){\n                d[++len] = nums[i];\n            }\n            else{\n                // \u901a\u8fc7\u4e8c\u5206\u67e5\u627e \u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8enums[i]\u7684\u5143\u7d20\n                // \u6ce8\u610f\u8fd9\u91cc\u662f\u4e8c\u5206\u67e5\u627e\u7684\u533a\u95f4\u4e3a[d.begin() + 1, d.begin() + len + 1]\n                auto it = lower_bound(d.begin() + 1, d.begin() + len + 1, nums[i]);\n                // pos\u4e3a\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8enums[i]\u7684\u5143\u7d20\u7684\u7d22\u5f15\n                int pos = distance(d.begin(),it);\n                // \u66f4\u65b0d[pos]\u4e3anums[i]\n                d[pos] = nums[i];\n            }\n        }\n        return len;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#674","title":"674 \u6700\u957f\u8fde\u7eed\u5b50\u5e8f\u5217","text":""},{"location":"algorithm/leetcode/#_64","title":"\u52a8\u6001\u89c4\u5212","text":"<p>dp[i]\u8868\u793a\u4ee5\u7b2ci\u4e2a\u5143\u7d20\u7ed3\u5c3e\u7684\u6700\u957f\u8fde\u7eed\u5b50\u5e8f\u5217\u957f\u5ea6</p> <p>\u4e0e\u201c300 \u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u201d\u4e0d\u540c\u5728\u4e8e\uff1a\u672c\u9898\u4e0d\u9700\u8981\u904d\u5386[0, i -1]\u627e\u6bd4nums[i]\u5c0f\u7684\u5143\u7d20\uff0c\u53ea\u9700\u8981\u4e0enums[i - 1]\u6bd4\u8f83\u5373\u53ef</p> <pre><code>class Solution {\npublic:\n    int findLengthOfLCIS(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        vector&lt;int&gt; dp(n, 1);\n        int res = 1;\n        for(int i = 1; i &lt; n; i++){\n            if(nums[i] &gt; nums[i - 1])\n                dp[i] = dp[i - 1] + 1;\n            res = max(res, dp[i]);\n        }\n        return res;\n    }\n};\n</code></pre> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)</li> </ul>"},{"location":"algorithm/leetcode/#_65","title":"\u8d2a\u5fc3","text":"<p>\u4f7f\u7528\u4e00\u4e2a\u8ba1\u6570\u5668\uff0cnums[i]\u6bd4nums[i - 1]\u5927\u5c31\u52a0\u4e00</p> <p>\u5426\u5219\uff0c\u51cf\u4e00\uff0c\u91cd\u65b0\u8ba1\u6570</p> <p>\u6700\u540e\u7edf\u8ba1\u8ba1\u6570\u5668\u6700\u5927\u503c</p> <pre><code>class Solution {\npublic:\n    int findLengthOfLCIS(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        int count = 1;\n        int res = 1;\n        for (int i = 1; i &lt; n; i++) {\n            if (nums[i] &gt; nums[i - 1])\n                count++;\n            else \n                count = 1;\n            res = max(res, count);\n        }\n        return res;\n    }\n};\n</code></pre> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)</li> </ul>"},{"location":"algorithm/leetcode/#718","title":"718 \u6700\u957f\u91cd\u590d\u5b50\u6570\u7ec4","text":""},{"location":"algorithm/leetcode/#_66","title":"\u52a8\u6001\u89c4\u5212","text":""},{"location":"algorithm/leetcode/#_67","title":"\u4e8c\u7ef4\u505a\u6cd5","text":"<p>\u6709\u4e24\u79cd<code>dp[i][j]</code> \u7684\u65b9\u6cd5</p> <p>\u65b9\u6cd5\u4e00\uff1a</p> <p><code>dp[i][j]</code> \u7684\u542b\u4e49</p> <p><code>dp[i][j]</code> \u8868\u793a\u6570\u7ec4a\u7b2ci\u4e2a\u5143\u7d20\u548c\u6570\u7ec4\u7b2cj\u4e2a\u5143\u7d20\u7684\u516c\u5171\u5b50\u6570\u7ec4\u957f\u5ea6</p> <p>\u9012\u63a8\u516c\u5f0f\uff1a</p> <p>\u5982\u679c<code>A[i] == B[j]</code>\uff0c<code>dp[i][j] = dp[i - 1][j - 1] + 1</code></p> <p>\u5426\u5219<code>dp[i][j] = 0</code></p> <p>\u904d\u5386\u987a\u5e8f\uff1a</p> <p>\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3</p> <p>\u521d\u59cb\u5316\uff1a</p> <p>\u9700\u8981\u5206\u7c7b\u8ba8\u8bba</p> <p>\u5982\u679c<code>A[0] == B[0]</code>\uff0c<code>dp[0][0] = 1</code></p> <p>\u5982\u679c<code>A[0] != B[0]</code>\uff0c<code>dp[0][0] = 0</code></p> <p>\u5982\u679c<code>A[i] == B[0]</code>\uff0c<code>dp[i][0] = 1</code></p> <p>\u5982\u679c<code>B[j] == A[0]</code>\uff0c<code>dp[0][j] = 1</code></p> <pre><code>class Solution {\npublic:\n    int findLength(vector&lt;int&gt;&amp; nums1, vector&lt;int&gt;&amp; nums2) {\n        int n = nums1.size();\n        int m = nums2.size();\n        vector&lt;vector&lt;int&gt;&gt; dp(n, vector&lt;int&gt;(m, 0));\n\n        // \u521d\u59cb\u5316\n        for(int i = 0; i &lt; n; i++){\n            if(nums1[i] == nums2[0])\n                dp[i][0] = 1;\n        }\n        for(int j = 0; j &lt; m; j++){\n            if(nums1[0] == nums2[j])\n                dp[0][j] = 1;\n        }\n\n        // \u8bbe\u5b9ares\u6c42dp[i][j]\u7684\u6700\u5927\u503c\n        int res = 0;\n        // \u672c\u8d28\u4e0adp[i][j] = dp[i - 1][j - 1] + 1\u9002\u7528\u4e8ei &gt;= 1 &amp;&amp; j &gt;= 1\n        // \u56e0\u4e3adp[i][0]\u548cdp[0][j]\u5df2\u7ecf\u88ab\u66f4\u65b0\n        // \u4f46\u662fres\u9700\u8981\u6c42dp[i][j]\u7684\u6700\u5927\u503c\uff0c\u5305\u62ecdp[i][0]\u548cdp[0][j]\u7684\u6700\u5927\u503c\n        // \u6240\u4ee5\u8fd9\u91cc\u4ecei == 0 \u548cj == 0\u5f00\u59cb\n        for(int i = 0; i &lt; n; i++){\n            for(int j = 0; j &lt; m; j++){\n                // \u8fd9\u91cc\u9700\u8981i &gt; 0 &amp;&amp; j &gt; 0 \n                if(i &gt; 0 &amp;&amp; j &gt; 0 &amp;&amp; nums1[i] == nums2[j])\n                    dp[i][j] = dp[i - 1][j - 1] + 1;\n                res = max(res, dp[i][j]);\n            }          \n        }\n\n        return res;\n    }\n};\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1a</p> <p><code>dp[i][j]</code> \u7684\u542b\u4e49</p> <p><code>dp[i][j]</code> \u8868\u793a\u6570\u7ec4a\u7b2ci - 1\u4e2a\u5143\u7d20\u548c\u6570\u7ec4\u7b2cj - 1\u4e2a\u5143\u7d20\u7684\u516c\u5171\u5b50\u6570\u7ec4\u957f\u5ea6</p> <p>\u9012\u63a8\u516c\u5f0f\uff1a</p> <p>\u5982\u679c<code>A[i] == B[j]</code>\uff0c<code>dp[i][j] = dp[i - 1][j - 1] + 1</code></p> <p>\u5426\u5219<code>dp[i][j] = 0</code></p> <p>\u904d\u5386\u987a\u5e8f\uff1a</p> <p>\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3</p> <p>\u521d\u59cb\u5316\uff1a</p> <p><code>dp[i][j]</code> \u8868\u793a\u6570\u7ec4a\u7b2ci - 1\u4e2a\u5143\u7d20\u548c\u6570\u7ec4\u7b2cj - 1\u4e2a\u5143\u7d20\u7684\u516c\u5171\u5b50\u6570\u7ec4\u957f\u5ea6</p> <p>\u6240\u4ee5i\u548cj\u4ece1\u5f00\u59cb</p> <p>\u6240\u4ee5<code>i == 0|| j ==0</code>\u6ca1\u6709\u542b\u4e49\uff0c<code>dp[i][0]\u548cdp[0][j]</code>\u90fd\u4e3a0</p> <pre><code>class Solution {\npublic:\n    int findLength(vector&lt;int&gt;&amp; nums1, vector&lt;int&gt;&amp; nums2) {\n        int n = nums1.size();\n        int m = nums2.size();\n        // \u56e0\u4e3adp[i][j]\u8868\u793a\u6570\u7ec4a\u7b2ci - 1\u4e2a\u5143\u7d20\u548c\u6570\u7ec4\u7b2cj - 1\u4e2a\u5143\u7d20\u7684\u516c\u5171\u5b50\u6570\u7ec4\u957f\u5ea6\n        // \u6570\u7ec4a\u6709n\u4e2a\u5143\u7d20\uff0c\u6570\u7ec4b\u6709m\u4e2a\u5143\u7d20\n        // \u6240\u4ee5i\u6700\u5927\u503c\u4e3an\u800c\u4e0d\u662fn - 1\uff0cj\u6700\u5927\u503c\u4e3am\u800c\u4e0d\u662fm - 1\n        // \u8fd9\u91cc\u521d\u59cb\u5316\u8981\u6ce8\u610fdp(n + 1, vector&lt;int&gt;(m + 1, 0))\n        // \u800c\u4e0d\u662fdp(n, vector&lt;int&gt;(m, 0));\n        vector&lt;vector&lt;int&gt;&gt; dp(n + 1, vector&lt;int&gt;(m + 1, 0));\n\n        int res = 0;\n        // \u4ecei == 1\u548cj == 1\u5f00\u59cb\u904d\u5386, i &lt;= n, j &lt;= m\n        for(int i = 1; i &lt;= n; i++){\n            for(int j = 1; j &lt;= m; j++){\n                if(nums1[i - 1] == nums2[j - 1])\n                    dp[i][j] = dp[i - 1][j - 1] + 1;\n                res = max(res, dp[i][j]);\n            }          \n        }\n\n        return res;\n    }\n};\n</code></pre> <p>\u603b\u7ed3</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u65b9\u6cd5\u4e8c\u521d\u59cb\u5316\u6bd4\u65b9\u6cd5\u4e00\u8981\u7b80\u5355\u5f88\u591a</p> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n \u00d7 m)\uff0cn \u4e3aA\u957f\u5ea6\uff0cm\u4e3aB\u957f\u5ea6</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n \u00d7 m)</li> </ul>"},{"location":"algorithm/leetcode/#_68","title":"\u4e00\u7ef4\u4f18\u5316","text":"<pre><code>class Solution {\npublic:\n    int findLength(vector&lt;int&gt;&amp; nums1, vector&lt;int&gt;&amp; nums2) {\n        int n = nums1.size();\n        int m = nums2.size();\n        vector&lt;int&gt; dp(m + 1, 0);\n\n        int res = 0;\n        for(int i = 1; i &lt;= n; i++){\n            // \u56e0\u4e3adp[i][j] = dp[i - 1][j - 1] + 1\n            // \u5982\u679c\u76f4\u63a5\u53d8\u6210dp[j] = dp[j - 1] + 1\uff0c\u8fd9\u91cc\u7684dp[j - 1]\u662fdp[i][j]\n            // \u56e0\u6b64\u9700\u8981\u6539\u53d8j\u7684\u904d\u5386\u987a\u5e8f\n            for(int j = m; j &gt;= 1; j--){\n                if(nums1[i - 1] == nums2[j - 1])\n                    dp[j] = dp[j - 1] + 1;\n                // \u4e0d\u76f8\u7b49\u7684\u65f6\u5019\u9700\u8981\u5c06dp[j]\u7f6e\u4e3a0\uff0c\u8868\u793a\u516c\u5171\u957f\u5ea6\u4e3a0\n                // \u4e8c\u7ef4\u505a\u6cd5\u4e2d\u5176\u5b9e\u4e5f\u9700\u8981\u7f6e\u4e3a0\uff0c\u4f46\u662f\u521d\u59cb\u5316\u7684\u65f6\u5019\u5df2\u7ecf\u7f6e\u4e3a\u4e860\n                // \u5728\u4e00\u7ef4\u505a\u6cd5\u4e2d\uff0c\u7531\u4e8e\u6eda\u52a8\u6570\u7ec4\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u4f1a\u5728\u6bcf\u4e2ai\u5faa\u73af\u4e2d\u4f7f\u7528\uff0c\u56e0\u6b64\u9700\u8981\u66f4\u65b0dp[j] = 0\n                else\n                    dp[j] = 0;\n                res = max(res, dp[j]);\n            }          \n        }\n\n        return res;\n    }\n};\n</code></pre> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n \u00d7 m)\\)\uff0cn \u4e3aA\u957f\u5ea6\uff0cm\u4e3aB\u957f\u5ea6</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(m)\\)</li> </ul>"},{"location":"algorithm/leetcode/#1143","title":"1143 \u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217","text":""},{"location":"algorithm/leetcode/#_69","title":"\u52a8\u6001\u89c4\u5212","text":"<p>\u4e0e\u4e0a\u4e00\u9898\u4e00\u6837\uff1a</p> <p><code>text1[i - 1] == text2[j - 1]</code>\u4ecd\u7136\u662f<code>dp[i][j] = dp[i - 1][j - 1] + 1;</code></p> <p>\u548c\u4e0a\u4e00\u9898\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff1a</p> <p>\u7531\u4e8e\u4e0a\u4e00\u9898\u662f\u516c\u5171\u5b50\u6570\u7ec4\uff0c\u5b50\u6570\u7ec4\u7279\u6027\u5728\u4e8e\u8fde\u7eed\uff0c\u56e0\u6b64<code>text1[i - 1] != text2[j - 1]</code>\u8bf4\u660e<code>dp[i][j] == 0</code></p> <p>\u800c\u672c\u9898\u662f\u516c\u5171\u5b50\u5e8f\u5217\uff0c\u53ef\u4ee5\u4e0d\u8fde\u7eed\uff0c<code>text1[i - 1] != text2[j - 1]</code>\u65f6<code>dp[i][j] != 0</code>\uff0c\u9700\u8981\u6211\u4eec\u989d\u5916\u8ba1\u7b97</p> <p><code>dp[i][j]</code>\u7684\u957f\u5ea6\u662f<code>dp[i - 1][j]</code>\u548c<code>dp[i][j - 1]</code>\u4e2d\u7684\u6700\u5927\u503c</p>"},{"location":"algorithm/leetcode/#_70","title":"\u4e8c\u7ef4\u505a\u6cd5","text":"<pre><code>class Solution {\npublic:\n    int longestCommonSubsequence(string text1, string text2) {\n        int n = text1.size();\n        int m = text2.size();\n        vector&lt;vector&lt;int&gt;&gt; dp(n + 1, vector&lt;int&gt;(m + 1, 0))\n;       for(int i = 1; i &lt;= n; i++){\n            for(int j = 1; j &lt;= m; j++){\n                if(text1[i - 1] == text2[j - 1])\n                    dp[i][j] = dp[i - 1][j - 1] + 1;\n                else\n                    dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);\n            }\n        }\n        return dp[n][m];\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_71","title":"\u4e00\u7ef4\u4f18\u5316","text":"<pre><code>class Solution {\npublic:\n    int longestCommonSubsequence(string text1, string text2) {\n        int n = text1.size();\n        int m = text2.size();\n        vector&lt;int&gt; dp(m + 1, 0)\n;       for(int i = 1; i &lt;= n; i++){\n            int pre = dp[0];\n            for(int j = 1; j &lt;= m; j++){\n                // \u8fd9\u91cc\u7684dp[j]\u4e3adp[i - 1][j]\n                int cur = dp[j];\n                if(text1[i - 1] == text2[j - 1])\n                    dp[j] = pre + 1;\n                else\n                    // dp[j]\u4e3adp[i - 1][j]\n                    // dp[j - 1]\u4e3adp[i][j - 1]\n                    dp[j] = max(dp[j], dp[j - 1]);\n                // \u8fd9\u91cc\u7684pre\u4e3adp[i - 1][j]\n                // j++\u540e\uff0cpre\u4e3adp[i - 1][j - 1]\n                pre = cur;\n            }\n        }\n        return dp[m];\n    }\n};\n</code></pre> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n \u00d7 m)\\)\uff0cn \u4e3aA\u957f\u5ea6\uff0cm\u4e3aB\u957f\u5ea6</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(m)\\)</li> </ul>"},{"location":"algorithm/leetcode/#_72","title":"\u54c8\u5e0c\u8868","text":""},{"location":"algorithm/leetcode/#1_1","title":"1 \u4e24\u6570\u4e4b\u548c","text":""},{"location":"algorithm/leetcode/#_73","title":"\u66b4\u529b\u7248","text":"<p>\u904d\u5386\u6bcf\u4e2a\u5143\u7d20\uff0c\u679a\u4e3e\u6570\u7ec4\u8be5\u5143\u7d20\u540e\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u5224\u65ad<code>nums[i]</code> + <code>nums[j]</code> \u662f\u5426\u7b49\u4e8e<code>target</code></p> <ul> <li>\u5982\u679c\u662f\uff0c\u8fd4\u56de<code>{i, j}</code></li> <li>\u5982\u679c\u904d\u5386\u6574\u4e2a\u6570\u7ec4\u90fd\u6ca1\u6709\u627e\u5230<code>{i,j}</code>\uff0c\u8fd4\u56de\u7a7a\u6570\u7ec4</li> </ul> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; twoSum(vector&lt;int&gt;&amp; nums, int target) {\n        int n = nums.size();\n        for (int i = 0; i &lt; n; ++i) {\n            for (int j = i + 1; j &lt; n; ++j) {\n                if (nums[i] + nums[j] == target) {\n                    return {i, j};\n                }\n            }\n        }\n        return {};\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</p>"},{"location":"algorithm/leetcode/#_74","title":"\u4f18\u5316\u7248","text":"<p>\u5728\u66b4\u529b\u7248\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\uff1a\u5b9a\u4f4d\u5143\u7d20<code>nums[i]</code>\u540e\uff0c\u5bfb\u627e\u5143\u7d20<code>nums[j]</code>\u82b1\u8d39\u4e86\\(O(n)\\)\u7684\u65f6\u95f4\u590d\u6742\u5ea6</p> <p>\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u54c8\u5e0c\u8868\u8fdb\u884c\u4f18\u5316\uff0c\u54c8\u5e0c\u8868\u67e5\u627e\u5143\u7d20\u6548\u7387\u4e3a\\(O(1)\\)</p> <p>\u4f7f\u7528\u54c8\u5e0c\u8868\u4f18\u5316\u601d\u8def\uff1a</p> <ul> <li>\u6211\u4eec\u5224\u65ad\u67d0\u4e2a\u5143\u7d20\u7684\u503c\u662f\u5426\u5b58\u5728\uff0c\u56e0\u6b64\u8be5\u5143\u7d20\u7684\u503c\u4f5c\u4e3a\u54c8\u5e0c\u8868\u7684key\u503c</li> <li>\u9898\u76ee\u8981\u6c42\u8fd4\u56de\u5143\u7d20\u7684\u4e0b\u6807\uff0c\u56e0\u6b64\u8be5\u5143\u7d20\u7684\u4e0b\u6807\u4f5c\u4e3a\u54c8\u5e0c\u8868\u7684value\u503c</li> </ul> <p>\u6700\u7b80\u5355\u7684\u60f3\u6cd5</p> <p>\u904d\u5386\u4e00\u904d\u6570\u7ec4\uff0c\u5c06\u6bcf\u4e2a\u5143\u7d20\u52a0\u5165\u5230\u54c8\u5e0c\u8868\u4e2d</p> <p>\u7136\u540e\u518d\u904d\u5386\u4e00\u904d\u6570\u7ec4\uff0c\u5b9a\u4f4d\u5143\u7d20<code>nums[i]</code>\u65f6\uff0c\u901a\u8fc7\u54c8\u5e0c\u8868\u67e5\u8be2\u662f\u5426\u5b58\u5728<code>target - nums[i]</code>\uff0c\u5982\u679c\u5b58\u5728\u8fd4\u56de\u4e0b\u6807</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u9898\u76ee\u8981\u6c42\u4e0d\u80fd\u4f7f\u7528\u540c\u4e00\u5143\u7d20\u591a\u6b21\uff0c\u4e5f\u5c31\u662f\u8bf4<code>nums[i] != hashMap[target - nums[i]]</code></p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; twoSum(vector&lt;int&gt;&amp; nums, int target) {\n        unordered_map&lt;int,int&gt; hashMap;\n        int n = nums.size();\n        for(int i = 0; i &lt; n; i++){\n            hashMap.insert({nums[i],i});\n        }\n        for(int i = 0; i &lt; n; i++){\n            int num = target - nums[i];\n            if(hashMap.count(num) &amp;&amp; hashMap[num] != i){\n                int j = hashMap[num];\n                return {i, j};\n            }\n        }\n        return {};\n    }\n};\n</code></pre> <p>\u4ee5\u4e0a\u505a\u6cd5\u4f7f\u7528\u4e86\u4e24\u6b21<code>for(int i = 0; i &lt; n; i++)</code>\uff0c\u6211\u4eec\u80fd\u591f\u5728\u4e00\u6b21\u5faa\u73af\u4e2d\u5b8c\u6210\u6574\u4e2a\u7b97\u6cd5</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; twoSum(vector&lt;int&gt;&amp; nums, int target) {\n        unordered_map&lt;int,int&gt; hashMap;\n        int n = nums.size();\n        for(int i = 0; i &lt; n; i++){           \n            int num = target - nums[i];\n            if(hashMap.count(num)){\n                int j = hashMap[num];\n                return {i, j};\n            }\n            // \u4e3a\u4e86\u4e0d\u4f7f\u7528\u5f53\u524d\u5143\u7d20\uff0c\u5224\u65ad\u5b8c\u4e4b\u540e\u518d\u63d2\u5165\n            hashMap.insert({nums[i],i});\n        }\n        return {};\n    }\n};\n</code></pre> <p>\u6ce8\u610f\uff1a\u4e0d\u9700\u8981\u521d\u59cb\u5316\u5f80hashMap\u6dfb0\uff0c\u56e0\u4e3a\u9898\u76ee\u9650\u5b9a\u4e86\u4e24\u4e2a\u6574\u6570\u7684\u548c</p>"},{"location":"algorithm/leetcode/#49","title":"49 \u5b57\u6bcd\u5f02\u4f4d\u8bcd\u5206\u7ec4","text":"<p>\u672c\u9898\u672c\u8d28\u4e0a\u662f\u5bf9\u54c8\u5e0c\u51fd\u6570\u7684\u8003\u5bdf</p> <p>\u5982\u4f55\u8bbe\u8ba1\u54c8\u5e0c\u51fd\u6570\uff0c\u8ba9\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u6307\u5411\u540c\u4e00\u4e2akey\u503c\uff0c\u901a\u8fc7value\u503c\u5c06\u8fd9\u4e9b\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u6536\u96c6\u8d77\u6765</p> <p>\u7531\u4ee5\u4e0a\u5206\u6790\uff0c\u6211\u4eec\u5224\u65ad\u4f7f\u7528<code>unordered_map</code></p>"},{"location":"algorithm/leetcode/#_75","title":"\u505a\u6cd5\u4e00","text":"<p>\u7b2c\u4e00\u79cd\u505a\u6cd5\uff1a\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u6392\u5e8f\uff0c\u540c\u4e00\u7ec4\u5f02\u4f4d\u8bcd\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u4e00\u5b9a\u76f8\u540c</p> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;string&gt;&gt; groupAnagrams(vector&lt;string&gt;&amp; strs) {\n        // \u6bcf\u4e2a\u6392\u5e8f\u540e\u7684key\u5bf9\u5e94\u7684\u4e71\u5e8f\u7684str\n        unordered_map&lt;string, vector&lt;string&gt;&gt; hashMap;\n        for (string&amp; str : strs) {\n            string key = str;\n            sort(key.begin(), key.end());\n            hashMap[key].push_back(str);\n        }\n        vector&lt;vector&lt;string&gt;&gt; ans;\n        for (auto it = hashMap.begin(); it != hashMap.end(); it++) {\n            ans.push_back(it-&gt;second);\n        }\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_76","title":"\u505a\u6cd5\u4e8c","text":"<p>\u7b2c\u4e8c\u79cd\u505a\u6cd5\uff1a\u540c\u4e00\u7ec4\u5f02\u4f4d\u8bcd\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\u4e00\u5b9a\u76f8\u540c</p> <p>\u4f8b\u5982\"abca\"</p> <p>key\u7684\u8bbe\u7f6e\u4e3aa2b1c1</p> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;string&gt;&gt; groupAnagrams(vector&lt;string&gt;&amp; strs) {\n        unordered_map&lt;string, vector&lt;string&gt;&gt; map;\n        for (string str : strs) {\n            // \u5982\u679c\u5199\u6210int counts[26];\u8fc7\u4e0d\u4e86\n            // \u53ef\u80fd\u662f\u56e0\u4e3a\u7f16\u8bd1\u4f18\u5316\n            int counts[26] = {0};\n            for (char c : str) {\n                counts[c - 'a']++;\n            }\n            string key = \"\";\n            for (int i = 0; i &lt; 26; ++i) {\n                if (counts[i]) {\n                    key.push_back(i + 'a');\n                    // \u8fd9\u4e00\u6b65\u4e0d\u80fd\u6f0f\n                    key.push_back(counts[i]);\n                }\n            }\n            map[key].push_back(str);\n        }\n        vector&lt;vector&lt;string&gt;&gt; res;\n        for (auto it = map.begin(); it != map.end(); it++) {\n            res.push_back(it-&gt;second);\n        }\n        return res;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_77","title":"leetcode\u5237\u9898\u7b14\u8bb0","text":""},{"location":"algorithm/leetcode/#_78","title":"\u53cc\u6307\u9488","text":""},{"location":"algorithm/leetcode/#283","title":"283 \u79fb\u52a8\u96f6","text":""},{"location":"algorithm/leetcode/#_79","title":"\u66b4\u529b\u89e3\u6cd5","text":"<p>\u9898\u76ee\u8981\u6c42\uff1a</p> <ol> <li>\u5c06\u6240\u6709\u7684\u96f6\u79fb\u52a8\u5230\u6570\u7ec4\u7684\u672b\u5c3e\uff0c\u4e14\u4e0d\u6539\u53d8\u975e\u96f6\u5143\u7d20\u7684\u987a\u5e8f</li> <li>\u5728\u539f\u5730\u5bf9\u6570\u7ec4\u8fdb\u884c\u64cd\u4f5c</li> </ol> <p>\u601d\u8def\uff1a</p> <ul> <li>\u9898\u76ee\u8981\u6c42\u5728\u539f\u5730\u5bf9\u6570\u7ec4\u8fdb\u884c\u64cd\u4f5c\uff0c\u90a3\u6211\u4eec\u5c31\u5047\u8bbe[0, k - 1]\u90fd\u662f\u975e\u96f6\u5143\u7d20\uff0c[k, n - 1]\u90fd\u662f\u96f6</li> <li>\u904d\u5386\u6570\u7ec4\uff0c\u901a\u8fc7<code>nums[i] == 0</code>\u627e\u5230\u7b2c\u4e00\u4e2a\u96f6\u5143\u7d20</li> <li>\u79fb\u52a8\u5230\u6570\u7ec4\u7684\u672b\u5c3e\uff1a<code>for (int j = i + 1; j &lt; n; j++)</code>\u6211\u4eec\u53ef\u4ee5\u5f80\u540e\u627e\u5230\u975e\u96f6\u5143\u7d20\uff0c\u5c06\u5176\u4e0e\u96f6\u5143\u7d20\u4ea4\u6362\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6570\u7ec4\u524d\u9762\u90fd\u662f\u96f6\u5143\u7d20</li> </ul> <pre><code>class Solution {\npublic:\n    void moveZeroes(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        for (int i = 0; i &lt; n; i++) {\n            if (nums[i] == 0) {\n                for (int j = i + 1; j &lt; n; j++) {\n                    if (nums[j] != 0) {\n                        swap(nums[i], nums[j]);\n                        // \u4fdd\u8bc1\u975e\u96f6\u5143\u7d20\u7684\u987a\u5e8f\uff0c\u9700\u8981break\n                        break;\n                    }\n                }\n            }\n        }\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_80","title":"\u53cc\u6307\u9488\u4f18\u5316","text":"<p>\u6211\u4eec\u53d1\u73b0\u66b4\u529b\u89e3\u6cd5\u4e2d\uff0ci\u6307\u5411\u7b2c\u4e00\u4e2a\u96f6\u5143\u7d20\u7684\u4f4d\u7f6e\uff0cj\u6307\u5411\u7b2c\u4e00\u4e2a\u975e\u96f6\u5143\u7d20\u7684\u4f4d\u7f6e</p> <p>j\u7684\u904d\u5386\u91cd\u590d\u7ecf\u8fc7\u4e86[i, j]\u4e4b\u95f4\u7684\u591a\u4e2a\u96f6\u5143\u7d20</p> <p>\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\u4f18\u5316</p> <pre><code>class Solution {\npublic:\n    void moveZeroes(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        // l \u6307\u5411\u7b2c\u4e00\u4e2a\u96f6\u5143\u7d20\n        int l = 0;\n        // r\u6307\u5411\u7b2c\u4e00\u4e2a\u975e\u96f6\u5143\u7d20\n        for(int r = 0; r &lt; n; r++){\n            if(nums[r] != 0){\n                swap(nums[l],nums[r]);\n                l++;\n            }\n        }\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#128","title":"128 \u6700\u957f\u8fde\u7eed\u5e8f\u5217","text":""},{"location":"algorithm/leetcode/#_81","title":"\u66b4\u529b\u505a\u6cd5","text":"<p>\u6839\u636e\u9898\u610f\u9996\u5148\u8981\u5bf9\u6570\u7ec4\u8fdb\u884c\u53bb\u91cd\uff0c\u53bb\u91cd\u53ef\u91c7\u7528set/unordered_set/map/unordered_map\u7b49\u5bb9\u5668</p> <p>\u6700\u7b80\u5355\u7684\u601d\u8def\uff1a</p> <ul> <li>\u904d\u5386\u6bcf\u4e2a\u5143\u7d20x\uff0c\u4e0d\u65ad\u5728\u6570\u7ec4\u4e2d\u627e\u51fa\u503c\u4e3ax, x + 1, x +2, ... , x + y\u7684\u5143\u7d20\uff0c\u8ba1\u7b97\u957f\u5ea6 y + 1</li> <li>\u65e2\u80fd\u6ee1\u8db3\u53bb\u91cd\u53c8\u80fd\u5feb\u901f\u627e\u51fa\u503c\u7684\u6570\u636e\u7ed3\u6784\u4e14\u4e0d\u8981\u6c42\u503c\u6709\u5e8f\uff0c\u4f7f\u7528unordered_set\u5373\u53ef</li> </ul> <pre><code>class Solution {\npublic:\n    int longestConsecutive(vector&lt;int&gt;&amp; nums) {\n        // \u53bb\u91cd\n        unordered_set&lt;int&gt; nums_set;\n        for(auto num : nums){\n            nums_set.insert(num);\n        }\n        int n = nums_set.size();\n        int maxLen = 0;\n        for (auto num : nums_set) {\n            int curNum = num;\n            int curLen = 0;\n            while(nums_set.count(curNum)){\n                curNum++;\n                curLen++;\n            }\n            maxLen = max(maxLen,curLen);\n        }\n        return maxLen;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)</p> <ul> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u5143\u7d20\u90fd\u904d\u5386\u4e86curLen\u6b21</li> </ul> <p>\u7a7a\u95f4\u590d\u6742\u5ea6:\\(O(n)\\)</p>"},{"location":"algorithm/leetcode/#_82","title":"\u4f18\u5316\u7248","text":"<p>\u66b4\u529b\u89e3\u6cd5\u7684\u7f3a\u70b9\u5728\u4e8e\u4f1a\u91cd\u590d\u5bfb\u627e\u6570\u5b57\u8fde\u7eed\u7684\u6700\u957f\u5e8f\u5217\uff1a</p> <p>\u6bd4\u5982\u8bf4</p> <ul> <li>\u5f53\u524d\u5143\u7d20\u662fx\uff0c\u6309\u66b4\u529b\u89e3\u6cd5\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u4f1a\u904d\u5386x, x + 1, x +2, ... , x + y\u7684\u5143\u7d20\uff0c\u8ba1\u7b97\u957f\u5ea6 y + 1</li> <li>\u5982\u679c\u5f53\u524d\u5143\u7d20\u662fx + 1\uff0c\u6309\u66b4\u529b\u89e3\u6cd5\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u4f1a\u904d\u5386x + 1, x +2, ... , x + y\u7684\u5143\u7d20\uff0c\u8ba1\u7b97\u957f\u5ea6 y</li> <li>...</li> <li>\u5982\u679c\u5f53\u524d\u5143\u7d20\u662fx + y - 1\uff0c\u6309\u66b4\u529b\u89e3\u6cd5\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u4f1a\u904d\u5386x + y - 1, x + y\u7684\u5143\u7d20\uff0c\u8ba1\u7b97\u957f\u5ea6 2</li> <li>\u5982\u679c\u5f53\u524d\u5143\u7d20\u662fx + y\uff0c\u6309\u66b4\u529b\u89e3\u6cd5\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u4f1a\u904d\u5386x + y\u7684\u5143\u7d20\uff0c\u8ba1\u7b97\u957f\u5ea6 1</li> </ul> <p>\u5982\u4f55\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u5462</p> <p>\u6211\u4eec\u53d1\u73b0\uff1a\u5982\u679c\u5f53\u524d\u5143\u7d20\u662fx + 1\uff0c\u90a3\u4e48x + 1\u904d\u5386\u7684\u5143\u7d20, x\u5df2\u7ecf\u904d\u5386\u8fc7\u4e86\uff1b\u63a8\u5e7f\u5230x + k, x + k\u904d\u5386\u7684\u5143\u7d20, x + k - 1\u4e5f\u904d\u5386\u8fc7\u4e86</p> <p>\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5bfb\u627e\u5f53\u524d\u5143\u7d20\u7684\u524d\u7f6e\u5143\u7d20\u662f\u5426\u5b58\u5728\uff0c\u5c31\u53ef\u4ee5\u5224\u65ad\u8be5\u5e8f\u5217\u662f\u5426\u5df2\u7ecf\u904d\u5386\u8fc7\u4e86</p> <pre><code>class Solution {\npublic:\n    int longestConsecutive(vector&lt;int&gt;&amp; nums) {\n        // \u53bb\u91cd\n        unordered_set&lt;int&gt; nums_set;\n        for(auto num : nums){\n            nums_set.insert(num);\n        }\n        int n = nums_set.size();\n        int maxLen = 0;\n        for (auto num : nums_set) {\n            int curNum = num;\n            int curLen = 0;\n            // \u4e0e\u66b4\u529b\u89e3\u6cd5\u76f8\u6bd4\uff0c\u52a0\u4e86\u8fd9\u4e00\u884c\u4ee3\u7801\uff0c\u5176\u4ed6\u90fd\u4e0d\u53d8\n            if(nums_set.count(num - 1))\n                continue;\n            while(nums_set.count(curNum)){\n                curNum++;\n                curLen++;\n            }\n            maxLen = max(maxLen,curLen);\n        }\n        return maxLen;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <ul> <li>\u770b\u8d77\u6765\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(O(n^2)\\)\uff0c\u5b9e\u9645\u4e0a\uff0c\u5047\u8bbe\u6570\u5b57\u8fde\u7eed\u7684\u6700\u957f\u5e8f\u5217\u7684\u957f\u5ea6\u4e3amaxLen\uff0c\u6570\u7ec4\u53bb\u91cd\u540e\u957f\u5ea6\u4e3an\uff0c\u6211\u4eec\u904d\u5386n - maxLen\u4e2a\u4e0d\u5728\u6570\u5b57\u8fde\u7eed\u7684\u6700\u957f\u5e8f\u5217\u7684\u5143\u7d20\uff0c\u7531\u4e8e\u6211\u4eec\u7684\u4f18\u5316\u64cd\u4f5c\uff0c\u6211\u4eec\u53ea\u4ece\u6700\u7ec8\u6570\u5b57\u8fde\u7eed\u7684\u6700\u957f\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u904d\u5386\uff0c\u5e76\u4e14\u53ea\u904d\u5386\u8fd9\u4e2a\u5e8f\u5217\u4e00\u6b21\uff0c\u56e0\u6b64\u518d\u904d\u5386maxLen\u4e2a\u5143\u7d20\uff0c\u6700\u7ec8\u904d\u5386\u4e86n\u4e2a\u5143\u7d20\uff0c\u5373\\(O(n)\\)</li> </ul> <p>\u7a7a\u95f4\u590d\u6742\u5ea6:\\(O(n)\\)</p>"},{"location":"algorithm/leetcode/#11","title":"11\u76db\u6700\u591a\u6c34\u7684\u5bb9\u5668","text":"<p>\u5bb9\u5668\u5bb9\u7eb3\u6c34\u7684\u8ba1\u7b97\u65b9\u6cd5\uff1a</p> <ul> <li>\u5047\u8bbei\u548cj\u662f\u5bb9\u5668\u7684\u4e24\u4fa7</li> <li>\\(\u5bb9\u5668\u5bb9\u7eb3\u6c34\u91cf = (j - i) * min(height[i], height[j])\\)</li> </ul> <p>\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u4ece\u4e24\u4fa7\u5f80\u4e2d\u95f4\u904d\u5386\uff0c\u4f9d\u6b21\u6bd4\u8f83\u4e24\u4fa7height\u5927\u5c0f\uff0c\u53d6\u5bb9\u5668\u6c34\u91cf</p> <p>\u56e0\u4e3a\u76ee\u6807\u662f\u6700\u5c0f\u7684\u9ad8\u5ea6\uff0c\u56e0\u6b64\u66f4\u65b0\u6307\u9488\u65f6\uff0c\u66f4\u65b0\u7684\u662f\u5c0f\u7684\u90a3\u4e00\u4e2a</p> <p>\u601d\u8def\u4e0e977\u7c7b\u4f3c\uff0c\u90fd\u5c5e\u4e8e\u6570\u7ec4\u5f02\u4fa7\u53cc\u6307\u9488</p> <p>\u8fd9\u79cd\u9898\u7684\u7279\u70b9\u662f\uff1a\u9700\u8981\u4ece\u4e24\u4fa7\u5f00\u59cb\u6bd4\u8f83\u5927\u5c0f</p> <pre><code>class Solution {\npublic:\n    int maxArea(vector&lt;int&gt;&amp; height) {\n        int l = 0, r = height.size() - 1;\n        int res = 0;\n        while (l &lt; r) {\n            res = max(res, (r - l) * min(height[l],height[r]));\n            height[l] &lt; height[r] ? l++ : r--;          \n        }\n        return res;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#15","title":"15 \u4e09\u6570\u4e4b\u548c","text":""},{"location":"algorithm/leetcode/#_83","title":"\u66b4\u529b\u89e3\u6cd5\uff08\u8d85\u65f6\uff09","text":"<p>\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e09\u5143\u7ec4 <code>[nums[i], nums[j], nums[k]]</code> \u6ee1\u8db3 <code>i != j</code>\u3001<code>i != k</code> \u4e14 <code>j != k</code> \uff0c\u540c\u65f6\u8fd8\u6ee1\u8db3 <code>nums[i] + nums[j] + nums[k] == 0</code></p> <ul> <li>\u6700\u7b80\u5355\u7684\u505a\u6cd5\uff0c\u4e09\u5c42\u5faa\u73af\u5c31\u80fd\u627e\u51fa\u4e09\u5143\u7ec4 <code>[nums[i], nums[j], nums[k]]</code></li> </ul> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; threeSum(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        vector&lt;vector&lt;int&gt;&gt; ans;\n        for(int i = 0; i &lt; n; i++){\n            for(int j = i + 1; j &lt; n; j++){\n                for(int k = j + 1; k &lt; n; k++){\n                    if((nums[i] + nums[j] + nums[k]) == 0)\n                        ans.push_back(vector&lt;int&gt; {nums[i],nums[j],nums[k]});\n                }\n            }\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u4f46\u9898\u76ee\u8fd8\u8981\u6c42\uff1a\u7b54\u6848\u4e2d\u4e0d\u53ef\u4ee5\u5305\u542b\u91cd\u590d\u7684\u4e09\u5143\u7ec4\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u53bb\u91cd</p> <ul> <li>\u6700\u76f4\u63a5\u7684\u60f3\u6cd5\u5c31\u662f\u4f7f\u7528set/unordered_set\uff0c\u4f46\u662f\u8be5\u7c7b\u5bb9\u5668key\u503c\u548cvalue\u503c\u76f8\u540c\uff0c\u800ckey\u503c\u901a\u5e38\u4e0d\u652f\u6301vector\u505a\u5143\u7d20</li> <li>\u6211\u4eec\u8fd8\u53ef\u4ee5\u4ece\u904d\u5386\u4e0a\u53bb\u91cd\uff0c\u53ef\u4ee5\u60f3\u5230\uff0c\u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u6392\u5e8f\u540e\uff0c\u4e0b\u4e00\u6b21\u904d\u5386\u7684\u5143\u7d20\u4e0e\u4e0a\u4e00\u6b21\u76f8\u540c\u65f6\u5219\u8df3\u8fc7\uff08\u56e0\u4e3a\u4e0a\u4e00\u4e2a\u5143\u7d20\u904d\u5386\u8fc7\u7684\u5143\u7d20\uff0c\u4e0b\u4e00\u4e2a\u5143\u7d20\u8fd8\u4f1a\u91cd\u590d\u4e00\u6b21\uff09</li> </ul> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; threeSum(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        vector&lt;vector&lt;int&gt;&gt; ans;\n        sort(nums.begin(), nums.end());\n        for(int i = 0; i &lt; n; i++){\n            if(i &gt; 0 &amp;&amp; nums[i] == nums[i - 1])\n                continue;\n            for(int j = i + 1; j &lt; n; j++){\n                if(j &gt; i + 1 &amp;&amp; nums[j] == nums[j - 1])\n                    continue;\n                for(int k = j + 1; k &lt; n; k++){\n                    if(k &gt; j + 1 &amp;&amp; nums[k] == nums[k - 1])\n                        continue;\n                    if((nums[i] + nums[j] + nums[k]) == 0)\n                        ans.push_back(vector&lt;int&gt; {nums[i],nums[j],nums[k]});\n                }\n            }\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^3)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)</p>"},{"location":"algorithm/leetcode/#_84","title":"\u4f18\u5316\u7248","text":"<p>\u4e09\u91cd\u5faa\u73af\u8fd8\u662f\u65f6\u95f4\u82b1\u9500\u592a\u5927\u4e86\uff0c\u6211\u4eec\u60f3\u529e\u6cd5\u5982\u4f55\u8fdb\u4e00\u6b65\u4f18\u5316</p> <p>\u6211\u4eec\u53d1\u73b0\uff1a\u5047\u8bbe<code>nums[i] + nums[j] + nums[k] == 0</code> \u548c<code>nums[i] + nums[j] + nums[k + 1] == 0</code>\u5e76\u4e14<code>k &gt; j + 1</code></p> <p>\u90a3\u4e48\u7b2c\u4e09\u5c42\u5faa\u73af\uff0ck\u4f1a\u91cd\u590d\u904d\u5386\u533a\u95f4[j, k - 1]</p> <p>\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488</p> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; threeSum(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        sort(nums.begin(), nums.end());\n        vector&lt;vector&lt;int&gt;&gt; ans;\n        for (int first = 0; first &lt; n; first++) {\n            if (first &gt; 0 &amp;&amp; nums[first] == nums[first - 1])\n                continue;\n            int target = -nums[first];\n            int third = n - 1;\n            for (int second = first + 1; second &lt; n; second++) {\n                if (second &gt; first + 1 &amp;&amp; nums[second] == nums[second - 1])\n                    continue;\n                // \u53cc\u6307\u9488\u9700\u8981\u4fdd\u8bc1\u5de6\u6307\u9488second &lt; \u53f3\u6307\u9488third\n                while (second &lt; third &amp;&amp; nums[second] + nums[third] &gt; target){\n                    third--;\n                }\n                // \u5982\u679c\u4e24\u8005\u76f8\u540c\uff0c\u5219\u8bf4\u660e\u4e0d\u518d\u5b58\u5728b&lt;c\uff0c\u4e0e\u6211\u4eec\u7684\u524d\u63d0\u5047\u8bbeb&gt;c\u77db\u76fe\uff0c\u56e0\u6b64\u7ed3\u675f\n                if(second == third)\n                    break;\n                if(nums[second] + nums[third] == target)\n                    ans.push_back({nums[first],nums[second],nums[third]});\n            }\n        }\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#42","title":"42 \u63a5\u96e8\u6c34","text":"<p>\u63a5\u96e8\u6c34\u7684\u672c\u8d28\uff1a\u5bf9\u4e8e\u4e0b\u6807 i\uff0c\u4e0b\u96e8\u540e\u6c34\u80fd\u5230\u8fbe\u7684\u6700\u5927\u9ad8\u5ea6\u7b49\u4e8e\u4e0b\u6807 i \u4e24\u8fb9\u7684\u6700\u5927\u9ad8\u5ea6\u7684\u6700\u5c0f\u503c\uff0c\u4e0b\u6807 i \u5904\u80fd\u63a5\u7684\u96e8\u6c34\u91cf\u7b49\u4e8e\u4e0b\u6807 i \u5904\u7684\u6c34\u80fd\u5230\u8fbe\u7684\u6700\u5927\u9ad8\u5ea6\u51cf\u53bb height[i]</p>"},{"location":"algorithm/leetcode/#_85","title":"\u66b4\u529b\u89e3\u6cd5","text":"<p>\u901a\u8fc7\u5faa\u73af\u627e\u51fa\u4e0b\u6807 i \u4e24\u8fb9\u7684\u6700\u5927\u9ad8\u5ea6leftMax\u548crightMax\uff0c\u518d\u6c42\u6700\u5c0f\u503c\uff0c\u8fd9\u4e2a\u6700\u5c0f\u503c\u5c31\u662f\u4e0b\u6807 i \u5904\u7684\u6c34\u80fd\u5230\u8fbe\u7684\u6700\u5927\u9ad8\u5ea6</p> <p>leftMax\u548crightMax\u8ba1\u7b97\u8fc7\u7a0b\u5305\u542bheight[i]</p> <p>\u4e0b\u6807 i \u5904\u80fd\u63a5\u7684\u96e8\u6c34\u91cf\u7b49\u4e8e\u4e0b\u6807 i \u5904\u7684\u6c34\u80fd\u5230\u8fbe\u7684\u6700\u5927\u9ad8\u5ea6\u51cf\u53bb height[i]</p> <pre><code>class Solution {\npublic:\n    int trap(vector&lt;int&gt;&amp; height) {\n        int n = height.size();\n        int res = 0;\n        for(int i = 0; i &lt; n; i++){\n            int leftMax = 0, rightMax = 0;\n            // \u8bb0\u5f97leftMax\u5305\u542bheight[i]\n            for(int j = 0; j &lt;= i; j++){\n                leftMax = max(leftMax, height[j]);\n            }\n            // \u8bb0\u5f97rightMax\u5305\u542bheight[i]\n            for(int j = i; j &lt; n; j++){\n                rightMax = max(rightMax,height[j]);\n            }\n            if(leftMax &lt; rightMax){\n                res += leftMax - height[i];\n            }\n            else\n                res += rightMax - height[i];\n        }\n        return res;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(2n^2)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p>"},{"location":"algorithm/leetcode/#_86","title":"\u52a8\u6001\u89c4\u5212","text":"<p>\u5728\u66b4\u529b\u89e3\u6cd5\u7684\u57fa\u7840\u4e0a\u5206\u6790\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u6b21\u4ecei\u5de6\u53f3\u4e24\u4fa7\u904d\u5386\u5bfb\u627e\u6700\u9ad8\u5ea6\u9700\u8981\\(O(n)\\)\uff0c\u8fd9\u91cc\u9762\u91cd\u590d\u4e86\u5f88\u591a\u6b21</p> <p>\u6211\u4eec\u5e72\u8106\u4e00\u6b21\u904d\u5386\u4f7f\u7528\u6570\u7ec4\u8bb0\u5f55<code>leftMax[i]</code>\u548c<code>rightMax[i]</code></p> <ul> <li>leftMax[i]\u8868\u793ai\u5de6\u4fa7\u9ad8\u5ea6\u6700\u5927\u503c</li> <li>rightMax[i]\u8868\u793ai\u53f3\u4fa7\u9ad8\u5ea6\u6700\u5927\u503c</li> </ul> <p>\u89c2\u5bdf\u4ee3\u7801\u4f60\u4f1a\u53d1\u73b0\uff0c\u5176\u5b9e\u4e5f\u5c31\u662f\u5c06\u7b2c\u4e8c\u5c42for\u5faa\u73af\u63d0\u5230\u5916\u9762</p> <pre><code>class Solution {\npublic:\n    int trap(vector&lt;int&gt;&amp; height) {\n        int n = height.size();\n        int res = 0;\n        // leftMax[i]\u8868\u793ai\u5de6\u4fa7\u9ad8\u5ea6\u6700\u5927\u503c\n        // rightMax[i]\u8868\u793ai\u53f3\u4fa7\u9ad8\u5ea6\u6700\u5927\u503c\n        int leftMax[n], rightMax[n];\n        // \u521d\u59cb\u5316\n        leftMax[0] = height[0];\n        rightMax[n - 1] = height[n - 1];\n        // \u66f4\u65b0leftMax\u548crightMax\n        for (int i = 1; i &lt; n; i++) {\n            // \u8bb0\u5f97leftMax\u5305\u542bheight[i]\n            leftMax[i] = max(leftMax[i - 1],height[i]);\n        }\n        for (int i = n - 2; i &gt;= 0; i--) {\n            // \u8bb0\u5f97rightMax\u5305\u542bheight[i]\n            rightMax[i] = max(rightMax[i + 1],height[i]);\n        }\n        for (int i = 0; i &lt; n; i++) {\n            if (leftMax[i] &lt; rightMax[i]) {\n                res += leftMax[i] - height[i];\n            } else\n                res += rightMax[i] - height[i];\n        }\n        return res;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p>"},{"location":"algorithm/leetcode/#_87","title":"\u5355\u8c03\u6808\u6cd5","text":"<p>\u5355\u8c03\u6808\u7279\u70b9\uff1a</p> <ul> <li>\u6808\u5185\u8bb0\u5f55\u4e0b\u6807</li> <li>\u5355\u8c03\u9012\u51cf\u6808</li> <li>\u6808\u5e95\u5230\u6808\u9876\uff0c\u5143\u7d20\u5355\u8c03\u9012\u51cf</li> <li>\u5f53\u9047\u5230height[i] &gt; height[stk.top()]\uff0c\u9700\u8981\u5f39\u51fa\u6808\u9876\u5143\u7d20\uff0c\u6b64\u65f6\u5927\u5c0f\u5173\u7cfb\u6709\uff1a<ol> <li>height[i] &gt; height[stk.top()]</li> <li>\u5f39\u51fa\u6808\u9876\u5143\u7d20<code>int idx = stk.top();</code></li> <li>height[stk.top()] &gt;= height[idx]\uff0c\u8fd9\u91cc\u7684stk.top()\u4e0e\u7b2c\u4e00\u6b65\u7684stk.top()\u4e0d\u540c</li> </ol> </li> </ul> <p>\u4ece\u5de6\u5230\u53f3\u904d\u5386\u6570\u7ec4\uff0c\u904d\u5386\u5230\u4e0b\u6807 i \u65f6\uff0c\u5982\u679c\u6808\u5185\u81f3\u5c11\u6709\u4e24\u4e2a\u5143\u7d20\uff0c\u8bb0\u6808\u9876\u5143\u7d20\u4e3a top\uff0ctop \u7684\u4e0b\u9762\u4e00\u4e2a\u5143\u7d20\u662f left\uff0c\u5219\u4e00\u5b9a\u6709 height[left]\u2265height[top]\u3002\u5982\u679c height[i]&gt;height[top]\uff0c\u5219\u5f97\u5230\u4e00\u4e2a\u53ef\u4ee5\u63a5\u96e8\u6c34\u7684\u533a\u57df</p> <ul> <li>\u8be5\u533a\u57df\u7684\u5bbd\u5ea6\u662f i\u2212left\u22121</li> <li>\u5f53height[i]&gt;height[top]\uff0c\u6211\u4eec\u627e\u5230\u4e86\u4e24\u4fa7\u6700\u5927\u503c\uff0c\u5206\u522b\u4e3arightMax(height[i])\u548cleftMax(height[left])\uff0c\u4e24\u4fa7\u4e4b\u95f4\u7684\u533a\u57df\u5c31\u662f\u63a5\u96e8\u6c34\u7684\u533a\u57df</li> <li>\u7531\u4e8e\u63a5\u96e8\u6c34\u533a\u57df\u4e0d\u5305\u62ec\u4e24\u4fa7\u6700\u5927\u503c\uff0c\u56e0\u6b64width = i - left - 1</li> <li>\u9ad8\u5ea6\u662f min(height[left],height[i])\u2212height[top]</li> </ul> <p>\u6839\u636e\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u5373\u53ef\u8ba1\u7b97\u5f97\u5230\u8be5\u533a\u57df\u80fd\u63a5\u7684\u96e8\u6c34\u91cf\u3002</p> <pre><code>class Solution {\npublic:\n    int trap(vector&lt;int&gt;&amp; height) {\n        int n = height.size();\n        stack&lt;int&gt; stk;\n        int ans = 0;\n        for(int i = 0; i &lt; n; i++){\n            // \u8fd9\u91cc\u6ce8\u610f\u7528\u7684\u662fwhile \u4e0d\u662f if\n            while(!stk.empty() &amp;&amp; height[i] &gt; height[stk.top()]){\n                int idx = stk.top();\n                stk.pop();\n                // \u8bb0\u5f97\u5224\u65ad\u8fb9\u754c\u6761\u4ef6\n                if(stk.empty())\n                    break;\n                int left = stk.top();\n                int minHeight = min(height[left], height[i]);\n                ans += (minHeight - height[idx]) * (i - left - 1);\n            }\n            stk.push(i);\n        }\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_88","title":"\u53cc\u6307\u9488\u6cd5","text":"<p>\u66b4\u529b\u89e3\u6cd5\u672c\u8d28\u4e0a\u5c31\u662f\u6bd4\u8f83\u4e24\u4fa7\u5143\u7d20\u5927\u5c0f\uff0c\u56e0\u6b64\u53ef\u4ee5\u91c7\u7528\u540c\u4fa7\u53cc\u6307\u9488\u6cd5\u4f18\u5316</p> <p>\u672c\u9898\u4e2d\uff0c\u6211\u4eec\u6bd4\u8f83\u7684\u662f\u4e24\u4fa7\u9ad8\u5ea6\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c\uff0c\u56e0\u6b64\u5206\u4e3a\u4e24\u6b65</p> <ol> <li>\u8bb0\u5f55\u4e24\u4fa7\u9ad8\u5ea6\u7684\u6700\u5927\u503c -&gt; \u5728\u6307\u9488\u79fb\u52a8\u8fc7\u7a0b\u4e2d\u8fdb\u884c</li> <li>\u5bf9\u4e24\u4fa7\u9ad8\u5ea6\u6700\u5927\u503c\u8fdb\u884c\u53d6\u6700\u5c0f\u503c -&gt; min(leftMax, rightMax)</li> </ol> <p>\u95ee\u9898\u5728\u4e8e\u5982\u4f55\u6c42\u89e3\u4e0b\u6807 i \u5904\u80fd\u63a5\u7684\u96e8\u6c34\u91cf\uff0c\u5373\u4f7f\u7528\u53cc\u6307\u9488\u540e\uff0c\u4e0b\u6807i\u5982\u4f55\u8868\u793a</p> <ul> <li>\u53cc\u6307\u9488\u95ee\u9898\u7279\u6027\uff1aleft\u548cright\u4ea4\u66ff\u79fb\u52a8\uff0c\u6700\u7ec8\u904d\u5386\u5b8c\u6574\u4e2a\u6570\u7ec4\uff0c\u56e0\u6b64\u4e0b\u6807i\u5b9e\u9645\u4e0a\u662f\u79fb\u52a8\u7684left\u548cright</li> <li>\u6211\u4eec\u5f97\u5230\u6700\u5c0f\u503c\u540e\uff0c\u7acb\u5373\u8ba1\u7b97\u8fd9\u4e00\u4fa7\u7684\u96e8\u6c34\u91cf</li> <li>\u5982\u679cleftMax &lt; rightMax\uff0c\u90a3\u4e48\u8ba1\u7b97res += leftMax - height[left];</li> <li>\u5982\u679cleftMax &gt; rightMax\uff0c\u90a3\u4e48\u8ba1\u7b97res += rightMax - height[right];</li> <li>\u8fd9\u662f\u56e0\u4e3a\uff0c\u5f97\u5230\u6700\u5c0f\u503c\u540e\uff0c\u6211\u4eec\u4f1a\u79fb\u52a8\u76f8\u5e94\u7684\u6307\u9488\u3002\u4ee5leftMax &lt; rightMax\u4e3a\u4f8b\uff0c\u5047\u8bbe\u5f53\u524dleft == 2\uff0c\u6211\u4eec\u4f1a\u66f4\u65b0left\uff0c\u4e4b\u540e\u6211\u4eec\u4e0d\u4f1a\u518d\u8ba1\u7b97\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u7684height[2]\uff0c\u56e0\u6b64\u8ba1\u7b97\u96e8\u6c34\u91cf\u4f7f\u7528leftMax - height[left]</li> <li>\u4e3a\u4ec0\u4e48leftMax &lt; rightMax\uff0c\u79fb\u52a8left</li> <li>\u8fd9\u662f\u56e0\u4e3a\u96e8\u6c34\u91cf\u7531\u6700\u5c0f\u503c\u51b3\u5b9a\uff0c\u5982\u679c\u79fb\u52a8rightMax\uff0c\u9664\u975e\u65b0\u7684rightMax\u5c0f\u4e8eleftMax\uff0c\u5426\u5219\u5bf9\u7ed3\u679c\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd</li> <li>\u800crightMax\u662f\u9012\u589e\u7684\uff0c\u6bcf\u6b21\u90fd\u53ea\u4f1a\u53d6\u66f4\u5927\u503c\uff0c\u5373rightMax = max(rightMax, height[right])\uff0c\u56e0\u6b64rightMax\u4e0d\u53ef\u80fd\u5c0f\u4e8eleftMax</li> <li>\u56e0\u6b64\u6211\u4eec\u79fb\u52a8\u6700\u5c0f\u503c\u90a3\u4e00\u4fa7\u7684\u6307\u9488</li> </ul> <pre><code>class Solution {\npublic:\n    int trap(vector&lt;int&gt;&amp; height) {\n        int n = height.size();\n        int left = 0, right = n - 1;\n        int leftMax = height[left], rightMax = height[right];\n        int res = 0;\n        while(left &lt; right){\n            leftMax = max(leftMax, height[left]);\n            rightMax = max(rightMax, height[right]);\n            if(leftMax &lt; rightMax){\n                res += leftMax - height[left];\n                left++;\n            }\n            else{\n                res += rightMax - height[right];\n                right--;\n            }\n        }\n        return res;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</p>"},{"location":"algorithm/leetcode/#_89","title":"\u6ed1\u52a8\u7a97\u53e3","text":"<p>\u6ed1\u52a8\u7a97\u53e3\u7b97\u6cd5\u53ef\u4ee5\u7528\u4e8e\u89e3\u51b3\u4e00\u4e9b\u5b57\u7b26\u4e32\u548c\u6570\u7ec4\u95ee\u9898\uff0c\u6ed1\u52a8\u7a97\u53e3\u8bb0\u5f55\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u3001\u5b50\u4e32\u957f\u5ea6</p> <p>\u4f8b\u5982\uff1a</p> <ul> <li>\u5b57\u7b26\u4e32\u5339\u914d\u95ee\u9898\uff0c\u4f8b\u5982 Leetcode \u7b2c 28 \u9898\u548c\u7b2c 76 \u9898\uff1b</li> <li>\u6700\u957f\u5b50\u4e32\u6216\u5b50\u6570\u7ec4\u95ee\u9898\uff0c\u4f8b\u5982 Leetcode \u7b2c 3 \u9898\u3001\u7b2c 209 \u9898\u548c\u7b2c 424 \u9898\uff1b</li> <li>\u6700\u5c0f\u8986\u76d6\u5b50\u4e32\u95ee\u9898\uff0c\u4f8b\u5982 Leetcode \u7b2c 76 \u9898\uff1b</li> <li>\u5b57\u7b26\u4e32\u6392\u5217\u95ee\u9898\uff0c\u4f8b\u5982 Leetcode \u7b2c 567 \u9898\uff1b</li> <li>\u6c42\u89e3\u5b57\u7b26\u4e32\u6216\u6570\u7ec4\u4e2d\u7684\u4e00\u4e9b\u6027\u8d28\uff0c\u4f8b\u5982 Leetcode \u7b2c 438 \u9898\u3001\u7b2c 567 \u9898\u548c\u7b2c 1004 \u9898\u7b49\u3002</li> </ul>"},{"location":"algorithm/leetcode/#3","title":"3 \u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32","text":"<p>\u4e3a\u4ec0\u4e48\u4f7f\u7528\u6ed1\u52a8\u7a97\u53e3 -&gt; \u56e0\u4e3a\u9898\u76ee\u95ee\u7684\u662f\u5b50\u4e32\uff0c\u5373\u8fde\u7eed\u5b57\u7b26\u5e8f\u5217</p> <p>\u5224\u65ad\u5b57\u7b26\u662f\u5426\u91cd\u590d -&gt; \u7528\u54c8\u5e0c\u8868\u7ef4\u62a4\u6ed1\u52a8\u7a97\u53e3\u7684\u5b57\u7b26</p> <pre><code>class Solution {\npublic:\n    int lengthOfLongestSubstring(string s) {\n        int n = s.size();\n        int start = 0;\n        unordered_set&lt;char&gt; hashMap;\n        int ans = 0;\n        for(int end = 0; end &lt; n; end++){\n            while(hashMap.count(s[end])){\n                // \u8fd9\u91cc\u6ce8\u610f\u662f\u628as[start]\u79fb\u9664\n                hashMap.erase(s[start]);\n                start++;\n            }\n            hashMap.insert(s[end]);\n            ans = max(ans,end - start + 1);\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p>"},{"location":"algorithm/leetcode/#438","title":"438 \u627e\u5230\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5b57\u6bcd\u5f02\u4f4d\u8bcd","text":"<p>\u5199\u6cd5\u4e00</p> <p>for\u5faa\u73af\u91cc\u9762\uff0ci\u6307\u5411\u7a97\u53e3\u524d\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1i + pLen\u4e00\u5b9a\u6709\u6548\uff0c\u4e0d\u9700\u8981\u989d\u5916\u5224\u65ad</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; findAnagrams(string s, string p) {\n        vector&lt;int&gt; ans;\n        int sLen = s.size(), pLen = p.size();\n        if(sLen &lt; pLen)\n            return vector&lt;int&gt;{};\n        vector&lt;int&gt; sHashMap(26);\n        vector&lt;int&gt; pHashMap(26);       \n        for(int i = 0; i &lt; pLen; i++){\n            sHashMap[s[i] - 'a']++;\n            pHashMap[p[i] - 'a']++;\n        }\n        if(sHashMap == pHashMap)\n            ans.push_back(0);\n        // i\u4e3a\u6ed1\u52a8\u7a97\u53e3\u7684\u5165\u53e3\u524d\u4e00\u4e2a\u4f4d\u7f6e\uff0ci + pLen \u4e3a\u6ed1\u52a8\u7a97\u53e3\u7684\u51fa\u53e3\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\n        // \u6ed1\u52a8\u7a97\u53e3\u7684\u51fa\u53e3\u9700\u8981\u6709\u610f\u4e49\uff0c\u56e0\u6b64\u9700\u8981\u6ee1\u8db3i + pLen &lt; sLen -&gt; i &lt; sLen - pLen\n        idx - i + 1 = pLen -&gt; idx = pLen + i - 1\n        for(int i = 0; i &lt; sLen - pLen; i++){\n            // \u8c03\u6574\u5de6\u8fb9\u754c\n            --sHashMap[s[i] - 'a'];\n            // \u8c03\u6574\u53f3\u8fb9\u754c\n            ++sHashMap[s[i + pLen] - 'a'];\n            // \u8c03\u6574\u4e4b\u540e\uff0c\u83b7\u5f97\u65b0\u7684\u6ed1\u52a8\u7a97\u53e3\n            // \u5bf9\u6ed1\u52a8\u7a97\u53e3\u8fdb\u884c\u5224\u65ad\n            if(sHashMap == pHashMap)\n                ans.push_back(i + 1);\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a<code>O(m+(n\u2212m)\u00d7\u03a3)</code>\uff0c\u5176\u4e2d n \u4e3a\u5b57\u7b26\u4e32 s \u7684\u957f\u5ea6\uff0cm \u4e3a\u5b57\u7b26\u4e32 p \u7684\u957f\u5ea6\uff0c\u03a3 \u4e3a\u6240\u6709\u53ef\u80fd\u7684\u5b57\u7b26\u6570\u3002\u6211\u4eec\u9700\u8981 O(m) \u6765\u7edf\u8ba1\u5b57\u7b26\u4e32 p \u4e2d\u6bcf\u79cd\u5b57\u6bcd\u7684\u6570\u91cf\uff1b\u9700\u8981 O(m) \u6765\u521d\u59cb\u5316\u6ed1\u52a8\u7a97\u53e3\uff1b\u9700\u8981\u5224\u65ad n\u2212m+1 \u4e2a\u6ed1\u52a8\u7a97\u53e3\u4e2d\u6bcf\u79cd\u5b57\u6bcd\u7684\u6570\u91cf\u662f\u5426\u4e0e\u5b57\u7b26\u4e32 p \u4e2d\u6bcf\u79cd\u5b57\u6bcd\u7684\u6570\u91cf\u76f8\u540c\uff0c\u6bcf\u6b21\u5224\u65ad\u9700\u8981 O(\u03a3) \u3002\u56e0\u4e3a s \u548c p \u4ec5\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\uff0c\u6240\u4ee5 \u03a3=26\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(\u03a3)\u3002\u7528\u4e8e\u5b58\u50a8\u5b57\u7b26\u4e32 p \u548c\u6ed1\u52a8\u7a97\u53e3\u4e2d\u6bcf\u79cd\u5b57\u6bcd\u7684\u6570\u91cf</p> <p>\u53e6\u4e00\u79cd\u5199\u6cd5</p> <p>for\u5faa\u73af\u91cc\u9762\uff0ci\u6307\u5411\u7a97\u53e3\u7684\u5165\u53e3\uff0ci + pLen\u6307\u5411\u7a97\u53e3\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c i + pLen \u4e0d\u4e00\u5b9a\u6709\u6548\uff0c\u9700\u8981\u989d\u5916\u5224\u65ad</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; findAnagrams(string s, string p) {\n        vector&lt;int&gt; ans;\n        int sLen = s.size(), pLen = p.size();\n        if (sLen &lt; pLen)\n            return vector&lt;int&gt;{};\n        vector&lt;int&gt; sHashMap(26);\n        vector&lt;int&gt; pHashMap(26);\n        for (int i = 0; i &lt; pLen; i++) {\n            sHashMap[s[i] - 'a']++;\n            pHashMap[p[i] - 'a']++;\n        }\n        // i\u4e3a\u6ed1\u52a8\u7a97\u53e3\u7684\u5165\u53e3\uff0ci + pLen \u4e3a\u6ed1\u52a8\u7a97\u53e3\u7684\u51fa\u53e3\n        // \u5982\u679c\u4ece\u5165\u53e3\u5f00\u59cb\u904d\u5386, i\u6700\u5927\u503c\u8ba1\u7b97\uff1asLen - 1 - i + 1 == pLen -&gt; i &lt;= sLen - pLen\n        for (int i = 0; i &lt;= sLen - pLen; i++) {\n            if (sHashMap == pHashMap)\n                ans.push_back(i);\n            // \u8fd9\u91cc\u9700\u8981\u5224\u65ad i + pLen \u662f\u5426\u8d85\u51fa\u6570\u7ec4\u7d22\u5f15\u5927\u5c0f\uff0c\u624d\u80fd\u53d6s[i + pLen]\n            if (i + pLen &lt; sLen) {\n                // \u8c03\u6574\u5de6\u8fb9\u754c\n                --sHashMap[s[i] - 'a'];\n                // \u8c03\u6574\u53f3\u8fb9\u754c\n                ++sHashMap[s[i + pLen] - 'a'];\n            }\n        }\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#239","title":"239 \u6ed1\u52a8\u7a97\u53e3\u7684\u6700\u5927\u503c","text":""},{"location":"algorithm/leetcode/#_90","title":"\u5355\u8c03\u961f\u5217","text":"<p>\u6709\u65f6\u95f4\u7684\u8bdd\u9605\u8bfb\u4e00\u4e0b\u8fd9\u7bc7\u6587\u7ae0</p> <p>https://labuladong.online/algo/data-structure/monotonic-queue/#%E4%B8%80%E3%80%81%E6%90%AD%E5%BB%BA%E8%A7%A3%E9%A2%98%E6%A1%86%E6%9E%B6</p> <p>\u4ee5\u4e0b\u6587\u5b57\u6765\u6e90\u4e8e\u4ee5\u4e0a\u6587\u7ae0\uff0c\u8fd9\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u4f7f\u7528\u5355\u8c03\u961f\u5217\uff1a</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u6570\u7ec4 <code>window</code>\uff0c\u5df2\u77e5\u5176\u6700\u503c\u4e3a <code>A</code>\uff0c\u5982\u679c\u7ed9 <code>window</code> \u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6570 <code>B</code>\uff0c\u90a3\u4e48\u6bd4\u8f83\u4e00\u4e0b <code>A</code> \u548c <code>B</code> \u5c31\u53ef\u4ee5\u7acb\u5373\u7b97\u51fa\u65b0\u7684\u6700\u503c\uff1b\u4f46\u5982\u679c\u8981\u4ece <code>window</code> \u6570\u7ec4\u4e2d\u51cf\u5c11\u4e00\u4e2a\u6570\uff0c\u5c31\u4e0d\u80fd\u76f4\u63a5\u5f97\u5230\u6700\u503c\u4e86\uff0c\u56e0\u4e3a\u5982\u679c\u51cf\u5c11\u7684\u8fd9\u4e2a\u6570\u6070\u597d\u662f <code>A</code>\uff0c\u5c31\u9700\u8981\u904d\u5386 <code>window</code> \u4e2d\u7684\u6240\u6709\u5143\u7d20\u91cd\u65b0\u5bfb\u627e\u65b0\u7684\u6700\u503c\u3002</p> <p>\u8fd9\u4e2a\u573a\u666f\u5f88\u5e38\u89c1\uff0c\u4f46\u4e0d\u7528\u5355\u8c03\u961f\u5217\u4f3c\u4e4e\u4e5f\u53ef\u4ee5\uff0c\u6bd4\u5982\u4f18\u5148\u7ea7\u961f\u5217\u4e5f\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u961f\u5217\uff0c\u4e13\u95e8\u7528\u6765\u52a8\u6001\u5bfb\u627e\u6700\u503c\u7684\uff0c\u6211\u521b\u5efa\u4e00\u4e2a\u5927\uff08\u5c0f\uff09\u9876\u5806\uff0c\u4e0d\u5c31\u53ef\u4ee5\u5f88\u5feb\u62ff\u5230\u6700\u5927\uff08\u5c0f\uff09\u503c\u4e86\u5417\uff1f</p> <p>\u5982\u679c\u5355\u7eaf\u5730\u7ef4\u62a4\u6700\u503c\u7684\u8bdd\uff0c\u4f18\u5148\u7ea7\u961f\u5217\u5f88\u4e13\u4e1a\uff0c\u961f\u5934\u5143\u7d20\u5c31\u662f\u6700\u503c\u3002\u4f46\u4f18\u5148\u7ea7\u961f\u5217\u65e0\u6cd5\u6ee1\u8db3\u6807\u51c6\u961f\u5217\u7ed3\u6784\u300c\u5148\u8fdb\u5148\u51fa\u300d\u7684\u65f6\u95f4\u987a\u5e8f\uff0c\u56e0\u4e3a\u4f18\u5148\u7ea7\u961f\u5217\u5e95\u5c42\u5229\u7528\u4e8c\u53c9\u5806\u5bf9\u5143\u7d20\u8fdb\u884c\u52a8\u6001\u6392\u5e8f\uff0c\u5143\u7d20\u7684\u51fa\u961f\u987a\u5e8f\u662f\u5143\u7d20\u7684\u5927\u5c0f\u987a\u5e8f\uff0c\u548c\u5165\u961f\u7684\u5148\u540e\u987a\u5e8f\u5b8c\u5168\u6ca1\u6709\u5173\u7cfb\u3002</p> <p>\u6240\u4ee5\uff0c\u73b0\u5728\u9700\u8981\u4e00\u79cd\u65b0\u7684\u961f\u5217\u7ed3\u6784\uff0c\u65e2\u80fd\u591f\u7ef4\u62a4\u961f\u5217\u5143\u7d20\u300c\u5148\u8fdb\u5148\u51fa\u300d\u7684\u65f6\u95f4\u987a\u5e8f\uff0c\u53c8\u80fd\u591f\u6b63\u786e\u7ef4\u62a4\u961f\u5217\u4e2d\u6240\u6709\u5143\u7d20\u7684\u6700\u503c\uff0c\u8fd9\u5c31\u662f\u300c\u5355\u8c03\u961f\u5217\u300d\u7ed3\u6784\u3002</p> <p>\u300c\u5355\u8c03\u961f\u5217\u300d\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u4e3b\u8981\u7528\u6765\u8f85\u52a9\u89e3\u51b3\u6ed1\u52a8\u7a97\u53e3\u76f8\u5173\u7684\u95ee\u9898\uff0c\u524d\u6587 \u6ed1\u52a8\u7a97\u53e3\u6838\u5fc3\u6846\u67b6 \u628a\u6ed1\u52a8\u7a97\u53e3\u7b97\u6cd5\u4f5c\u4e3a\u53cc\u6307\u9488\u6280\u5de7\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u4e86\u8bb2\u89e3\uff0c\u4f46\u6709\u4e9b\u7a0d\u5fae\u590d\u6742\u7684\u6ed1\u52a8\u7a97\u53e3\u95ee\u9898\u4e0d\u80fd\u53ea\u9760\u4e24\u4e2a\u6307\u9488\u6765\u89e3\u51b3\uff0c\u9700\u8981\u4e0a\u66f4\u5148\u8fdb\u7684\u6570\u636e\u7ed3\u6784\u3002</p> <p>\u6bd4\u65b9\u8bf4\uff0c\u4f60\u6ce8\u610f\u770b\u524d\u6587 \u6ed1\u52a8\u7a97\u53e3\u6838\u5fc3\u6846\u67b6 \u8bb2\u7684\u51e0\u9053\u9898\u76ee\uff0c\u6bcf\u5f53\u7a97\u53e3\u6269\u5927\uff08<code>right++</code>\uff09\u548c\u7a97\u53e3\u7f29\u5c0f\uff08<code>left++</code>\uff09\u65f6\uff0c\u4f60\u5355\u51ed\u79fb\u51fa\u548c\u79fb\u5165\u7a97\u53e3\u7684\u5143\u7d20\u5373\u53ef\u51b3\u5b9a\u662f\u5426\u66f4\u65b0\u7b54\u6848\u3002</p> <p>\u4f46\u672c\u6587\u5f00\u5934\u8bf4\u7684\u90a3\u4e2a\u5224\u65ad\u4e00\u4e2a\u7a97\u53e3\u4e2d\u6700\u503c\u7684\u4f8b\u5b50\uff0c\u4f60\u65e0\u6cd5\u5355\u51ed\u79fb\u51fa\u7a97\u53e3\u7684\u90a3\u4e2a\u5143\u7d20\u66f4\u65b0\u7a97\u53e3\u7684\u6700\u503c\uff0c\u9664\u975e\u91cd\u65b0\u904d\u5386\u6240\u6709\u5143\u7d20\uff0c\u4f46\u8fd9\u6837\u7684\u8bdd\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4e0a\u6765\u4e86\uff0c\u8fd9\u662f\u6211\u4eec\u4e0d\u5e0c\u671b\u770b\u5230\u7684\u3002</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; maxSlidingWindow(vector&lt;int&gt;&amp; nums, int k) {\n        deque&lt;int&gt; window;\n        int n = nums.size();\n        vector&lt;int&gt; res;\n        for(int i = 0; i &lt; n; i++){\n            // \u79fb\u52a8\u6ed1\u52a8\u7a97\u53e3\u5934\u90e8 \n            // \u5f53\u524d\u6ed1\u52a8\u7a97\u53e3\u5934\u90e8idx \u5982\u679c\u6bd4\u7406\u60f3\u7684\u5934\u90e8i - k + 1\u8981\u5c0f\uff0c\u5219\u8c03\u6574\u6ed1\u52a8\u7a97\u53e3\u5934\u90e8\n            while(!window.empty() &amp;&amp; window.front() &lt; i - k + 1){\n                window.pop_front();\n            }\n            // \u79fb\u52a8\u6ed1\u52a8\u7a97\u53e3\u5c3e\u90e8\n            while(!window.empty() &amp;&amp; nums[i] &gt; nums[window.back()]){\n                window.pop_back();\n            }\n            window.push_back(i);\n            // \u66f4\u65b0\u6ed1\u52a8\u7a97\u53e3\u6700\u5927\u503c\n            // \u5f53i &gt;= k -1 \u8bf4\u660e\u6ed1\u52a8\u7a97\u53e3\u5df2\u586b\u6ee1\uff0c\u53ef\u4ee5\u5f00\u59cb\u79fb\u52a8\u548c\u83b7\u53d6\u6700\u5927\u503c\n            if(i &gt;= k - 1)\n                res.push_back(nums[window.front()]);\n        }\n        return res;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u5176\u4e2d n \u662f\u6570\u7ec4 nums \u7684\u957f\u5ea6\u3002\u6bcf\u4e00\u4e2a\u4e0b\u6807\u6070\u597d\u88ab\u653e\u5165\u961f\u5217\u4e00\u6b21\uff0c\u5e76\u4e14\u6700\u591a\u88ab\u5f39\u51fa\u961f\u5217\u4e00\u6b21\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n)\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(k)\u3002\u4e0e\u65b9\u6cd5\u4e00\u4e0d\u540c\u7684\u662f\uff0c\u5728\u65b9\u6cd5\u4e8c\u4e2d\u6211\u4eec\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\u662f\u53cc\u5411\u7684\uff0c\u56e0\u6b64\u300c\u4e0d\u65ad\u4ece\u961f\u9996\u5f39\u51fa\u5143\u7d20\u300d\u4fdd\u8bc1\u4e86\u961f\u5217\u4e2d\u6700\u591a\u4e0d\u4f1a\u6709\u8d85\u8fc7 k+1 \u4e2a\u5143\u7d20\uff0c\u56e0\u6b64\u961f\u5217\u4f7f\u7528\u7684\u7a7a\u95f4\u4e3a O(k)</p>"},{"location":"algorithm/leetcode/#76","title":"76 \u6700\u5c0f\u8986\u76d6\u5b50\u4e32","text":"<p>\u53c8\u662f\u5b50\u4e32\uff0c\u6211\u4eec\u7acb\u5373\u60f3\u5230\u4f7f\u7528\u6ed1\u52a8\u7a97\u53e3</p> <p>\u601d\u8def</p> <ol> <li>\u9996\u5148\u60f3\u5230\u7684\u80af\u5b9a\u662f\u66b4\u529b\u89e3\u6cd5\uff1a\u66b4\u529b\u679a\u4e3e + \u54c8\u5e0c\u8868</li> <li>\u7136\u540e\u5728\u5206\u6790\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53d1\u73b0\u53cc\u6307\u9488\u540c\u5411\u4e0d\u56de\u9000\uff0c\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u5355\u8c03\u6027\uff0c\u8054\u60f3\u5230\u6ed1\u52a8\u7a97\u53e3\u89e3\u6cd5\uff1a\u6ed1\u52a8\u7a97\u53e3 + \u54c8\u5e0c\u8868</li> </ol> <p>\u89e3\u9898\u65b9\u6cd5</p> <ol> <li>\u5148\u521b\u5efa\u4e24\u4e2a\u54c8\u5e0c\u8868\uff0c\u7528\u6765\u7edf\u8ba1\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570</li> <li>\u518d\u5c06\u8981\u8986\u76d6\u7684\u5b57\u7b26\u4e32t\uff0c\u5b58\u5165\u54c8\u5e0c\u8868baseHash</li> <li>\u8bbe\u7f6epos\u548cminLen\uff0c\u7528\u6765\u8bb0\u5f55\u5b50\u4e32\u7684\u521d\u59cb\u4f4d\u7f6e\u548c\u6700\u5c0f\u957f\u5ea6\uff08\u8fd9\u6b65\u5f88\u5173\u952e\uff0c\u6211\u4eec\u53ef\u4ee5\u7b49\u5faa\u73af\u7ed3\u675f\u518d\u62f7\u8d1d\u5b50\u4e32\uff0c\u800c\u4e0d\u662f\u5faa\u73af\u4e2d\uff0c\u51cf\u5c11\u4e86\u5f88\u591a\u65f6\u95f4\u5f00\u9500\uff09</li> <li>\u5176\u6b21\u8bbe\u7f6ecount\uff0c\u7528\u6765\u8bb0\u5f55curHash\u4e2d\u7684\u6709\u6548\u5b57\u7b26\u4e2a\u6570\uff08\u8fd9\u6b65\u4f18\u5316\uff0c\u53ef\u4ee5\u8ba9\u6211\u4eec\u4e0d\u7528\u6bcf\u6b21\u90fd\u4e00\u4e00\u6bd4\u8f83\u4e24\u4e2a\u54c8\u5e0c\u8868\uff0c\u800c\u662f\u6bd4\u8f83count\u662f\u5426\u8fbe\u5230t\u7684\u6709\u6548\u5b57\u7b26\u4e2a\u6570\uff09</li> </ol> <p>\u63a5\u4e0b\u6765\uff0c\u662f\u6b63\u5e38\u7684\u6ed1\u52a8\u7a97\u53e3\u56db\u6b65\u8d70\uff08\u8be6\u89c1\u4ee3\u7801\uff09\uff1a</p> <ul> <li>\u8fdb\u7a97\u53e3</li> <li>\u5224\u65ad</li> <li>\u51fa\u7a97\u53e3</li> <li>\u5904\u7406\u7ed3\u679c\uff08\u8fd9\u6b65\u7684\u4f4d\u7f6e\u6839\u636e\u9898\u76ee\u8981\u6c42\u800c\u53d8\u5316\uff09</li> </ul> <p>\u590d\u6742\u5ea6</p> <ul> <li> <p>\u65f6\u95f4\u590d\u6742\u5ea6:O(m+n)</p> </li> <li> <p>\u7a7a\u95f4\u590d\u6742\u5ea6:O(1)</p> </li> </ul> <pre><code>class Solution {\npublic:\n    string minWindow(string s, string t) {\n        // hs\u8bb0\u5f55s\u7684\u5b57\u7b26\u548c\u4e2a\u6570\n        // ht\u8bb0\u5f55t\u7684\u5b57\u7b26\u548c\u4e2a\u6570\n        unordered_map&lt;char,int&gt; hs,ht;\n        int sLen = s.size();\n        int tLen = t.size();\n        string res;\n        if(sLen &lt; tLen)\n            return res;\n        for(auto c: t){\n            ht[c]++;\n        }\n        // cnt\u7528\u4e8e\u8bb0\u5f55\u9700\u8981\u7684\u5b57\u7b26\u6570\n        int cnt = 0;\n        // \u904d\u5386s\n        for(int right = 0, left = 0; right &lt; sLen; right++){\n            hs[s[right]]++;\n            // \u5982\u679c\u5f53\u524d\u7a97\u53e3\u5185hs\u542b\u6709\u5b57\u7b26s[i]\u4e2a\u6570\u6bd4ht\u5c11\n            // \u8bf4\u660e\u5f53\u524d\u5b57\u7b26s[i]\u662f\u5fc5\u987b\u7684\n            // \u8bf4\u660e\u7a97\u53e3\u9700\u8981\u7ee7\u7eed\u6269\u5c55\n            if(hs[s[right]] &lt;= ht[s[right]])\n                cnt++;\n            // s[j]\u662f\u591a\u4f59\u7684\n            // \u6536\u7f29\u7a97\u53e3\n            while(hs[s[left]] &gt; ht[s[left]]){\n                hs[s[left]]--;\n                left++;\n            }\n            if(cnt == t.size()){\n                if(res.empty() || right - left + 1 &lt; res.size())\n                    res = s.substr(left, right - left + 1);\n            }\n        }\n        return res;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_91","title":"leetcode\u5237\u9898\u7b14\u8bb0","text":""},{"location":"algorithm/leetcode/#_92","title":"\u5b50\u4e32","text":""},{"location":"algorithm/leetcode/#560-k","title":"560 \u548c\u4e3ak\u7684\u5b50\u6570\u7ec4","text":""},{"location":"algorithm/leetcode/#_93","title":"\u66b4\u529b\u89e3\u6cd5","text":"<pre><code>class Solution {\npublic:\n    int subarraySum(vector&lt;int&gt;&amp; nums, int k) {\n        int n = nums.size();\n        int res = 0;\n        for(int i = 0; i &lt; n; i++){\n            int sum = 0;\n            for(int j = i; j &lt; n; j++){\n                sum += nums[j];\n                if(sum == k)\n                    res++;\n            }\n        }\n        return res;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</p>"},{"location":"algorithm/leetcode/#_94","title":"\u4f18\u5316\u7248","text":"<p>\u9898\u5916\u8bdd\uff1a\u8fd9\u9053\u9898\u770b\u5230\u8fde\u7eed\u5e8f\u5217\u53ef\u80fd\u4f1a\u60f3\u7528\u6ed1\u52a8\u7a97\u53e3</p> <p>\u4f46\u662f\u6ed1\u52a8\u7a97\u53e3\u901a\u5e38\u7528\u4e8e\u8bb0\u5f55\u7a97\u53e3\u5185\u7684\u6700\u5927\u6700\u5c0f\u503c \u6216 \u5b50\u4e32\u957f\u5ea6</p> <p>\u5728\u672c\u9898\u4e2d\uff0ck\u503c\u53ef\u4ee5\u4e3a\u6b63\u6570\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u8d1f\u6570\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u4e0d\u4e00\u5b9a\u6c42\u7684\u662f\u6700\u503c\uff0c\u4f7f\u7528\u6ed1\u52a8\u7a97\u53e3\u65e0\u6cd5\u6c42\u89e3</p> <p>\u5728\u66b4\u529b\u89e3\u6cd5\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\u6bcf\u6b21\u679a\u4e3enums[i]\u540e\uff0c\u90fd\u4f1a\u5faa\u73af\u904d\u5386nums[j]\u8ba1\u7b97sum\uff0c\u8fd9\u79cd\u8ba1\u7b97\u5b50\u6570\u7ec4\u7684\u548c\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u4f18\u5316</p> <p>\u524d\u7f00\u548c\uff1a\u6211\u4eec\u60f3\u77e5\u9053[j, i]\u7684\u548c\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u524d\u7f00\u548c<code>pre[i] - pre[j - 1]</code>\u8ba1\u7b97</p> <p>\u5728\u672c\u9898\u4e2d\uff0c\u6211\u4eec\u60f3\u77e5\u9053\u533a\u95f4\u548c\u4e3ak\u6570\u7ec4\u7684\u4e2a\u6570\uff0c\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u904d\u5386\u6bcf\u4e2a\u5143\u7d20i\uff0c\u83b7\u5f97pre[i]\uff0c\u4f46\u95ee\u9898\u662f\u6211\u4eec\u4e0d\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u533a\u95f4\u548c\u7b49\u4e8ek\uff0c\u5373\u6211\u4eec\u65e0\u6cd5\u77e5\u9053\u4e0b\u6807j</p> <p>\u6211\u4eec\u5047\u8bbe\u5df2\u7ecf\u627e\u5230\u4e86j\uff0c\u90a3\u4e48\u6709<code>pre[i] - pre[j - 1] == k</code>\uff0c\u6211\u4eec\u53d1\u73b0<code>pre[j - 1]</code>\u53ef\u4ee5\u7528<code>pre[i] - k</code>\u4ee3\u66ff\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u4e0d\u9700\u8981\u77e5\u9053j\u5177\u4f53\u662f\u591a\u5c11\uff0c\u53ea\u9700\u8981\u627e\u51fa\u524d\u7f00\u548c\u4e3a<code>pre[i] - k</code>\u7684\u6570\u7ec4\u5373\u53ef</p> <p>\u524d\u7f00\u548c\u4e3a<code>pre[i] - k</code> \u4e0e \u533a\u95f4\u548c\u4e3ak \u53ef\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u6982\u5ff5</p> <ul> <li>\u6216\u8bb8\u4f60\u4f1a\u8bf4\u524d\u7f00\u548c\u4e3a<code>pre[i] - k</code> \uff0c\u9700\u8981\u4ece0\u5230i\u4f9d\u6b21\u904d\u5386\u5bfb\u627e\uff1b\u533a\u95f4\u548c\u4e3ak\uff0c\u4e5f\u9700\u8981\u4ecei\u52300\u4f9d\u6b21\u904d\u5386\u5bfb\u627e\uff0c\u90fd\u662f\\(O(n)\\)\u65f6\u95f4\u590d\u6742\u5ea6</li> <li>\u4f46\u662f\u6ce8\u610f<code>pre[i]</code>\u4e0e<code>pre[i] - k</code> \u7684\u5173\u7cfb\uff0c\u5f53\u6211\u4eec\u5f97\u5230\u4e86<code>pre[i]</code>\uff0c\u8bf4\u660e\u6211\u4eec\u5df2\u7ecf\u5f97\u5230\u4e86<code>pre[i] - k</code>\uff0c\u8fd9\u4e24\u8005\u90fd\u662f\u901a\u8fc7\u524d\u7f00\u548c\u8ba1\u7b97\u5f97\u5230\u7684\uff0c\u800c\u524d\u7f00\u548c\u8ba1\u7b97\u662f\u904d\u5386\u8fc7\u7a0b\u4e2d\u5f97\u5230\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u54c8\u5e0c\u8868\uff0c\u8ba1\u7b97\u4e00\u6b21\u524d\u7f00\u548c\u5c31\u5c06\u7ed3\u679c\u653e\u5165\u54c8\u5e0c\u8868\uff0c\u90a3\u4e48\u5f53\u6211\u4eec\u5f97\u5230\u4e86<code>pre[i]</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\\(O(1)\\)\u65f6\u95f4\u590d\u6742\u5ea6\u83b7\u5f97<code>pre[i] - k</code>\u7684\u4e2a\u6570</li> </ul> <p>\u6700\u540e\uff0c\u4ece\u5de6\u5f80\u53f3\u8fb9\u66f4\u65b0\u8fb9\u8ba1\u7b97\u7684\u65f6\u5019\u5df2\u7ecf\u4fdd\u8bc1\u4e86hashMap[pre[i]\u2212k] \u91cc\u8bb0\u5f55\u7684 pre[j] \u7684\u4e0b\u6807\u8303\u56f4\u662f 0\u2264j\u2264i \u3002\u540c\u65f6\uff0c\u7531\u4e8epre[i] \u7684\u8ba1\u7b97\u53ea\u4e0e\u524d\u4e00\u9879\u7684\u7b54\u6848\u6709\u5173\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u5efa\u7acb pre \u6570\u7ec4\uff0c\u76f4\u63a5\u7528 pre \u53d8\u91cf\u6765\u8bb0\u5f55 pre[i\u22121] \u7684\u7b54\u6848\u5373\u53ef\u3002</p> <pre><code>class Solution {\npublic:\n    int subarraySum(vector&lt;int&gt;&amp; nums, int k) {\n        // key\u8bb0\u5f55\u503csum[i] - k\uff0cvalue\u8bb0\u5f55\u4e2a\u6570\n        unordered_map&lt;int,int&gt; hashMap;\n        int n = nums.size();\n        int pre = 0;\n        int count = 0;\n        // \u8fd9\u4e00\u6b65\u4e0d\u80fd\u7701\n        // \u56e0\u4e3apre == k\u7684\u65f6\u5019\u4e00\u5b9a\u6709\u89e3\n        // \u4ece\u524d\u7f00\u548c\u4e3a0\u7684\u65f6\u5019\u5f00\u59cb\n        hashMap[0] = 1;\n        // sum[i] - sum[j - 1] = k\n        // \u5373sum[j - 1] = sum[i] - k\n        // \u6b64\u5904\u7684pre\u5c31\u662fsum[i]\n        for(int i = 0; i &lt; n; i++){\n            pre += nums[i];\n            auto it = hashMap.find(pre - k);\n            if(it != hashMap.end())\n                count += it-&gt;second;\n            // \u8bb0\u5f55\u524d\u7f00\u548c\u4e3apre\u7684\u4e2a\u6570\n            hashMap[pre]++;\n        }\n        return count;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p>"},{"location":"algorithm/leetcode/#_95","title":"leetcode\u5237\u9898\u7b14\u8bb0","text":""},{"location":"algorithm/leetcode/#_96","title":"\u4e8c\u53c9\u6811","text":"<p>\u7406\u8bba\u57fa\u7840</p> <p>https://programmercarl.com/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.html#%E7%AE%97%E6%B3%95%E5%85%AC%E5%BC%80%E8%AF%BE</p>"},{"location":"algorithm/leetcode/#_97","title":"\u4e8c\u53c9\u6811\u904d\u5386","text":"<ul> <li>\u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff08\u524d\u4e2d\u540e\u7684\u533a\u522b\uff1a\u8f93\u51fa\u5143\u7d20\u7684\u987a\u5e8f\uff0c\u524d\u5c31\u662f\u7b2c\u4e00\u4e2a\uff0c\u4e2d\u5c31\u662f\u4e2d\u95f4\uff0c\u540e\u5c31\u662f\u6700\u540e\uff09</li> <li>\u524d\u5e8f\u904d\u5386</li> <li>\u4e2d\u5e8f\u904d\u5386</li> <li>\u540e\u5e8f\u904d\u5386</li> <li>\u5e7f\u5ea6\u4f18\u5148\u904d\u5386</li> <li>\u5c42\u5e8f\u904d\u5386</li> </ul>"},{"location":"algorithm/leetcode/#144","title":"144 \u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386","text":""},{"location":"algorithm/leetcode/#_98","title":"\u9012\u5f52\u7248","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    vector&lt;int&gt; ans;\n    void preOrder(TreeNode* root){\n        if(!root)\n            return;\n        ans.push_back(root-&gt;val);\n        preOrder(root-&gt;left);\n        preOrder(root-&gt;right);\n    }\npublic:\n    vector&lt;int&gt; preorderTraversal(TreeNode* root) {\n        preOrder(root);\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_99","title":"\u8fed\u4ee3\u7248","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector&lt;int&gt; preorderTraversal(TreeNode* root) {\n        if(!root)\n            return {};\n        // \u6a21\u62df\u9012\u5f52\u51fd\u6570\u8c03\u7528\u987a\u5e8f\n        stack&lt;TreeNode*&gt; stk;\n        // \u5b58\u653e\u7ed3\u679c\n        vector&lt;int&gt; ans;\n        stk.push(root);\n        while(!stk.empty()){\n            TreeNode* cur = stk.top();\n            stk.pop();\n            ans.push_back(cur-&gt;val);\n            // \u6ce8\u610f\u653e\u5165\u6808\u7684\u987a\u5e8f\u4e0e\u5b9e\u9645\u8c03\u7528\u987a\u5e8f\u76f8\u53cd\n            if(cur-&gt;right)\n                stk.push(cur-&gt;right);\n            if(cur-&gt;left)\n                stk.push(cur-&gt;left);\n        }\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#94","title":"94 \u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386","text":""},{"location":"algorithm/leetcode/#_100","title":"\u9012\u5f52\u7248","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    vector&lt;int&gt; ans;\n    void inOrder(TreeNode* root){\n        if(!root)\n            return;\n        inOrder(root-&gt;left);\n        ans.push_back(root-&gt;val);\n        inOrder(root-&gt;right);\n    }\npublic:\n    vector&lt;int&gt; inorderTraversal(TreeNode* root) {\n        inOrder(root);\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_101","title":"\u8fed\u4ee3\u7248","text":"<p>\u4e2d\u5e8f\u904d\u5386\u8fed\u4ee3\u5199\u6cd5\u4e0e\u524d\u5e8f\u904d\u5386\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff1a</p> <ul> <li>\u524d\u5e8f\u904d\u5386\u8bbf\u95ee\u8282\u70b9\u7684\u987a\u5e8f\u4e0e\u5904\u7406\u8282\u70b9\u7684\u987a\u5e8f\u76f8\u540c\uff1a\u7b2c\u4e00\u4e2a\u8bbf\u95ee\u7684\u5c31\u662f\u6839\u8282\u70b9\uff0c\u7b2c\u4e00\u4e2a\u5904\u7406\u7684\u4e5f\u662f\u6839\u8282\u70b9</li> <li>\u4e2d\u5e8f\u904d\u5386\u8bbf\u95ee\u8282\u70b9\u7684\u987a\u5e8f\u4e0e\u5904\u7406\u8282\u70b9\u7684\u987a\u5e8f\u4e0d\u540c\uff1a\u7b2c\u4e00\u4e2a\u8bbf\u95ee\u7684\u662f\u6839\u8282\u70b9\uff0c\u7b2c\u4e00\u4e2a\u5904\u7406\u7684\u662f\u5de6\u8282\u70b9\uff08\u9047\u89c1\u5de6\u8282\u70b9\u4f1a\u76f4\u63a5\u89e6\u53d1\u9012\u5f52\uff0c\u76f4\u5230\u6ca1\u6709\u5de6\u8282\u70b9\u4e3a\u6b62\uff09</li> </ul> <p>\u56e0\u6b64\u4e2d\u5e8f\u904d\u5386\u8fed\u4ee3\u5199\u6cd5\u4f7f\u7528\u6808\u5b58\u50a8\u5de6\u8282\u70b9\uff0c\u6839\u8282\u70b9\u548c\u53f3\u8282\u70b9\u5728\u51fd\u6570\u4f53\u5185\u5904\u7406\uff0c\u4e0d\u5b58\u5165\u6808\uff0c\u5426\u5219\u4f1a\u7834\u574f\u51fd\u6570\u8c03\u7528\u987a\u5e8f</p> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),\n * right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector&lt;int&gt; inorderTraversal(TreeNode* root) {\n        if (!root)\n            return {};\n        stack&lt;TreeNode*&gt; stk;\n        vector&lt;int&gt; ans;\n        TreeNode* cur = root;\n        while (cur || !stk.empty()) {\n            if (cur) {\n                stk.push(cur);\n                cur = cur-&gt;left;\n            }\n            else{\n                cur = stk.top();\n                stk.pop();\n                ans.push_back(cur-&gt;val);\n                cur = cur-&gt;right;\n            }\n        }\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#145","title":"145 \u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386","text":""},{"location":"algorithm/leetcode/#_102","title":"\u9012\u5f52\u7248","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    vector&lt;int&gt; ans;\n    void postOrder(TreeNode* root){\n        if(!root)\n            return;\n        postOrder(root-&gt;left);\n        postOrder(root-&gt;right);\n        ans.push_back(root-&gt;val);\n    }\npublic:\n    vector&lt;int&gt; postorderTraversal(TreeNode* root) {\n        postOrder(root);\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_103","title":"\u8fed\u4ee3\u7248","text":"<p>\u518d\u6765\u770b\u540e\u5e8f\u904d\u5386\uff0c\u5148\u5e8f\u904d\u5386\u662f\u4e2d\u5de6\u53f3\uff0c\u540e\u5e8f\u904d\u5386\u662f\u5de6\u53f3\u4e2d\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u8c03\u6574\u4e00\u4e0b\u5148\u5e8f\u904d\u5386\u7684\u4ee3\u7801\u987a\u5e8f\uff0c\u5c31\u53d8\u6210\u4e2d\u53f3\u5de6\u7684\u904d\u5386\u987a\u5e8f\uff0c\u7136\u540e\u5728\u53cd\u8f6cresult\u6570\u7ec4\uff0c\u8f93\u51fa\u7684\u7ed3\u679c\u987a\u5e8f\u5c31\u662f\u5de6\u53f3\u4e2d\u4e86\uff0c\u5982\u4e0b\u56fe\uff1a</p> <p></p> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector&lt;int&gt; postorderTraversal(TreeNode* root) {\n        if(!root)\n            return {};\n        vector&lt;int&gt; ans;\n        stack&lt;TreeNode*&gt; stk;\n        stk.push(root);\n        while(!stk.empty()){\n            TreeNode* cur = stk.top();\n            stk.pop();\n            ans.push_back(cur-&gt;val);\n            if(cur-&gt;left)\n                stk.push(cur-&gt;left);\n            if(cur-&gt;right)\n                stk.push(cur-&gt;right);\n        }\n        reverse(ans.begin(), ans.end());\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#102","title":"102 \u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386","text":"<p>\u4ee5\u4e0b\u505a\u6cd5\u544a\u8bc9\u6211\u4eec\uff0c\u4e8c\u53c9\u6811\u5c42\u5e8f\u904d\u5386\u4e2d\uff0c\u961f\u5217\u5b58\u50a8\u7684\u662f\u6bcf\u4e00\u5c42\u7684\u8282\u70b9</p> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),\n * right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; levelOrder(TreeNode* root) {\n        if (!root)\n            return {};\n        queue&lt;TreeNode*&gt; q;\n        q.push(root);\n        vector&lt;vector&lt;int&gt;&gt; ans;\n        while (!q.empty()) {\n            // \u8bb0\u5f55\u8fd9\u4e00\u5c42\u6709\u591a\u5c11\u4e2a\u8282\u70b9\n            int size = q.size();\n            vector&lt;int&gt; res;\n            // \u8f93\u51fa\u8fd9\u4e00\u5c42\u7684\u6240\u6709\u8282\u70b9\uff0c\u5e76\u66f4\u65b0queue\n            for (int i = 0; i &lt; size; i++) {\n                TreeNode* cur = q.front();\n                q.pop();\n                res.push_back(cur-&gt;val);\n                if (cur-&gt;left)\n                    q.push(cur-&gt;left);\n                if (cur-&gt;right)\n                    q.push(cur-&gt;right);\n            }\n            ans.push_back(res);\n        }\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#104","title":"104 \u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6","text":""},{"location":"algorithm/leetcode/#_104","title":"\u6df1\u5ea6\u4f18\u5148\u904d\u5386","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxDepth(TreeNode* root) {\n        if(!root)\n            return 0;\n        return max(maxDepth(root-&gt;left), maxDepth(root-&gt;right)) + 1;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_105","title":"\u5c42\u5e8f\u904d\u5386","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxDepth(TreeNode* root) {\n        if(!root)\n            return 0;\n        queue&lt;TreeNode*&gt; q;\n        q.push(root);\n        int ans = 0;\n        while(!q.empty()){\n            int size = q.size();\n            for(int i = 0; i &lt; size; i++){\n                TreeNode* cur = q.front();\n                q.pop();\n                if(cur-&gt;left)\n                    q.push(cur-&gt;left);\n                if(cur-&gt;right)\n                    q.push(cur-&gt;right);\n            }\n            ans++;\n        }\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#199","title":"199 \u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe","text":"<p>\u53f3\u4fa7\u6240\u80fd\u770b\u5230\u7684\u8282\u70b9 \u5176\u5b9e\u5c31\u662f\u6bcf\u5c42\u8282\u70b9\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9 -&gt; \u9700\u8981\u6211\u4eec\u6309\u5c42\u904d\u5386\uff0c\u800c\u4e14\u627e\u5230\u6bcf\u5c42\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9</p> <p>\u56e0\u6b64\u672c\u9898\u4f7f\u7528\u5c42\u5e8f\u904d\u5386\uff0c\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u901a\u8fc7\u7d22\u5f15size - 1\u5f97\u5230</p> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector&lt;int&gt; rightSideView(TreeNode* root) {\n        if(!root)\n            return {};\n        vector&lt;int&gt; ans;\n        queue&lt;TreeNode*&gt; q;\n        q.push(root);\n        while(!q.empty()){\n            int size = q.size();\n            for(int i = 0; i &lt; size; i++){\n                TreeNode* cur = q.front();\n                q.pop();\n                if(i == size - 1)\n                    ans.push_back(cur-&gt;val);\n                if(cur-&gt;left)\n                    q.push(cur-&gt;left);\n                if(cur-&gt;right)\n                    q.push(cur-&gt;right);\n            }\n        }\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#226","title":"226 \u7ffb\u8f6c\u4e8c\u53c9\u6811","text":""},{"location":"algorithm/leetcode/#_106","title":"\u9012\u5f52","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* invertTree(TreeNode* root) {\n        if(!root)\n            return nullptr;\n        TreeNode* left = invertTree(root-&gt;left);\n        TreeNode* right = invertTree(root-&gt;right);\n        root-&gt;left = right;\n        root-&gt;right = left;\n        return root;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6 O(N) \uff1a \u5176\u4e2d N \u4e3a\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u6570\u91cf\uff0c\u5efa\u7acb\u4e8c\u53c9\u6811\u955c\u50cf\u9700\u8981\u904d\u5386\u6811\u7684\u6240\u6709\u8282\u70b9\uff0c\u5360\u7528 O(N) \u65f6\u95f4\u3002 \u7a7a\u95f4\u590d\u6742\u5ea6 O(N) \uff1a \u6700\u5dee\u60c5\u51b5\u4e0b\uff08\u5f53\u4e8c\u53c9\u6811\u9000\u5316\u4e3a\u94fe\u8868\uff09\uff0c\u9012\u5f52\u65f6\u7cfb\u7edf\u9700\u4f7f\u7528 O(N) \u5927\u5c0f\u7684\u6808\u7a7a\u95f4\u3002</p>"},{"location":"algorithm/leetcode/#_107","title":"\u8fed\u4ee3","text":"<p>\u7b97\u6cd5\u6d41\u7a0b\uff1a</p> <ol> <li>\u7279\u4f8b\u5904\u7406\uff1a \u5f53 root \u4e3a\u7a7a\u65f6\uff0c\u76f4\u63a5\u8fd4\u56de null \u3002</li> <li>\u521d\u59cb\u5316\uff1a \u6808\uff08\u6216\u961f\u5217\uff09\uff0c\u672c\u6587\u7528\u6808\uff0c\u5e76\u52a0\u5165\u6839\u8282\u70b9 root \u3002</li> <li>\u5faa\u73af\u4ea4\u6362\uff1a \u5f53\u6808 stack \u4e3a\u7a7a\u65f6\u8df3\u51fa\u3002</li> <li>\u51fa\u6808\uff1a \u8bb0\u4e3a node \u3002</li> <li>\u6dfb\u52a0\u5b50\u8282\u70b9\uff1a \u5c06 node \u5de6\u548c\u53f3\u5b50\u8282\u70b9\u5165\u6808\u3002</li> <li>\u4ea4\u6362\uff1a \u4ea4\u6362 node \u7684\u5de6 / \u53f3\u5b50\u8282\u70b9\u3002</li> <li>\u8fd4\u56de\u503c\uff1a \u8fd4\u56de\u6839\u8282\u70b9 root \u3002</li> </ol> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* invertTree(TreeNode* root) {\n        if(!root)\n            return nullptr;\n        stack&lt;TreeNode*&gt; stk;\n        stk.push(root);\n        while(!stk.empty()){\n            TreeNode* cur = stk.top();\n            stk.pop();\n            if(cur-&gt;left)\n                stk.push(cur-&gt;left);\n            if(cur-&gt;right)\n                stk.push(cur-&gt;right);\n            // \u4ea4\u6362\u4e24\u4e2a\u8282\u70b9\n            TreeNode* temp = cur-&gt;right;\n            cur-&gt;right = cur-&gt;left;\n            cur-&gt;left = temp;\n        }\n        return root;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#101","title":"101 \u5bf9\u79f0\u4e8c\u53c9\u6811","text":"<p>\u5224\u65ad\u5bf9\u79f0\u4e8c\u53c9\u6811\u7684\u903b\u8f91\uff1a</p> <ol> <li>\u627e\u5230\u4e24\u4e2a\u5b50\u6811</li> <li>\u5224\u65ad\u4e24\u4e2a\u5b50\u6811\u7684\u6839\u8282\u70b9u\u548cv\u7684\u503c\u662f\u5426\u76f8\u540c</li> <li>\u5982\u679c\u76f8\u540c\uff0c\u63a5\u7740\u5224\u65adu-&gt;left\u548cv-&gt;right\u7684\u503c\u662f\u5426\u76f8\u540c \u4ee5\u53ca u-&gt;right\u548cv-&gt;left\u7684\u503c\u662f\u5426\u76f8\u540c</li> <li>\u76f4\u5230\u904d\u5386\u5b8c\u6574\u4e2a\u4e8c\u53c9\u6811\u4e3a\u6b62</li> </ol>"},{"location":"algorithm/leetcode/#_108","title":"\u9012\u5f52","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool check(TreeNode* u, TreeNode* v){\n        if(!u &amp;&amp; !v)\n            return true;\n        if(!u || !v)\n            return false;\n        return u-&gt;val == v-&gt;val &amp;&amp; check(u-&gt;left, v-&gt;right) &amp;&amp; check(u-&gt;right, v-&gt;left);\n    }\n    bool isSymmetric(TreeNode* root) {\n        if(!root)\n            return true;\n        return check(root-&gt;left, root-&gt;right);\n    }\n};\n</code></pre> <p>\u5047\u8bbe\u6811\u4e0a\u4e00\u5171 n \u4e2a\u8282\u70b9\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u8fd9\u91cc\u904d\u5386\u4e86\u8fd9\u68f5\u6811\uff0c\u6e10\u8fdb\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n)\u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u8fd9\u91cc\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u548c\u9012\u5f52\u4f7f\u7528\u7684\u6808\u7a7a\u95f4\u6709\u5173\uff0c\u8fd9\u91cc\u9012\u5f52\u5c42\u6570\u4e0d\u8d85\u8fc7 n\uff0c\u6545\u6e10\u8fdb\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(n)\u3002</p>"},{"location":"algorithm/leetcode/#_109","title":"\u8fed\u4ee3","text":"<p>\u6bcf\u4e00\u5c42\u6bd4\u8f83\u662f\u5426\u5bf9\u79f0\uff0c\u6bd4\u8f83\u65b9\u6cd5\uff1a</p> <ul> <li>\u5728\u961f\u5217\u4e2d\u52a0\u5165\u4e24\u4e2a\u6839\u8282\u70b9</li> <li>\u6bcf\u6b21\u53d6\u51fa\u4e24\u4e2a\u6839\u8282\u70b9\uff0c\u8fdb\u884c\u6bd4\u8f83</li> <li>\u5982\u679c\u90fd\u4e3a\u7a7a\uff0c\u5bf9\u79f0</li> <li>\u5982\u679c\u6709\u4e00\u4e2a\u4e0d\u4e3a\u7a7a\uff0c\u4e00\u4e2a\u4e3a\u7a7a\uff0c\u4e0d\u5bf9\u79f0</li> <li>\u5982\u679c\u503c\u76f8\u540c\uff0c\u5bf9\u79f0</li> <li>\u628a\u8fd9\u4e24\u4e2a\u6839\u8282\u70b9\u7684\u5de6\u8282\u70b9\u548c\u53f3\u8282\u70b9\u5bf9\u79f0\u653e\u5165\u961f\u5217</li> </ul> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),\n * right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSymmetric(TreeNode* root) {\n        if (!root)\n            return true;\n        queue&lt;TreeNode*&gt; q;\n        q.push(root);\n        q.push(root);\n        while (!q.empty()) {\n            TreeNode* node1 = q.front();\n            q.pop();\n            TreeNode* node2 = q.front();\n            q.pop();\n            if(!node1 &amp;&amp; !node2)\n                continue;\n            if (!node1 || !node2 || node1-&gt;val != node2-&gt;val)\n                return false;\n            q.push(node1-&gt;left);\n            q.push(node2-&gt;right);\n\n            q.push(node1-&gt;right);\n            q.push(node2-&gt;left);\n        }\n        return true;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u540c\u300c\u65b9\u6cd5\u4e00\u300d\u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u8fd9\u91cc\u9700\u8981\u7528\u4e00\u4e2a\u961f\u5217\u6765\u7ef4\u62a4\u8282\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u8fdb\u961f\u4e00\u6b21\uff0c\u51fa\u961f\u4e00\u6b21\uff0c\u961f\u5217\u4e2d\u6700\u591a\u4e0d\u4f1a\u8d85\u8fc7 n \u4e2a\u70b9\uff0c\u6545\u6e10\u8fdb\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(n)</p>"},{"location":"algorithm/leetcode/#543","title":"543 \u4e8c\u53c9\u6811\u7684\u76f4\u5f84","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    // ans\u8bb0\u5f55\u7ecf\u8fc7\u7684\u8282\u70b9\u6570\n    // \u4e24\u8282\u70b9\u4e4b\u95f4\u8def\u5f84\u7684\u957f\u5ea6\u7531\u8282\u70b9\u4e4b\u95f4\u7684\u8fb9\u6570\u8868\u793a\n    // \u4e5f\u5c31\u662f\u8bf4\u76f4\u5f84\u4e3aans - 1\uff08\u8282\u70b9\u6570 - 1 = \u8fb9\u6570\uff09\n    int ans;\n    int depth(TreeNode* root){\n        // \u6ce8\u610f\u8fb9\u754c\u6761\u4ef6\n        if(!root)\n            return 0;\n        // \u8ba1\u7b97\u6839\u8282\u70b9\u5de6\u53f3\u5b50\u6811\u7684\u6700\u5927\u6df1\u5ea6\uff08\u6700\u5927\u8282\u70b9\u6570\uff09\n        int leftDepth = depth(root-&gt;left);\n        int rightDepth = depth(root-&gt;right);\n        // \u66f4\u65b0\u672c\u5b50\u6811\u7684\u6700\u5927\u8282\u70b9\u6570leftDepth + rightDepth + 1\uff081\u662f\u6839\u8282\u70b9\uff09\n        ans = max(ans, leftDepth + rightDepth + 1);\n        // \u8fd4\u56de\u672c\u5b50\u6811\u7684\u6df1\u5ea6max(leftDepth, rightDepth) + 1\uff081\u662f\u6839\u8282\u70b9\uff09\n        return max(leftDepth, rightDepth) + 1;\n    }\npublic:\n    int diameterOfBinaryTree(TreeNode* root) {\n        if(!root)\n            return 0;\n        // \u8fd9\u4e2ad\u5176\u5b9e\u5e76\u4e0d\u91cd\u8981\uff0c\u56e0\u4e3a\u4e0d\u4e00\u5b9a\u7ecf\u8fc7root\n        int d = depth(root);\n        // \u76f4\u5f84\u4e3a\u6700\u5927\u8282\u70b9\u6570 - 1\n        return ans - 1;\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(N)\uff0c\u5176\u4e2d N \u4e3a\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u6570\uff0c\u5373\u904d\u5386\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u53ea\u88ab\u8bbf\u95ee\u4e00\u6b21\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(Height)\uff0c\u5176\u4e2d Height \u4e3a\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\u3002\u7531\u4e8e\u9012\u5f52\u51fd\u6570\u5728\u9012\u5f52\u8fc7\u7a0b\u4e2d\u9700\u8981\u4e3a\u6bcf\u4e00\u5c42\u9012\u5f52\u51fd\u6570\u5206\u914d\u6808\u7a7a\u95f4\uff0c\u6240\u4ee5\u8fd9\u91cc\u9700\u8981\u989d\u5916\u7684\u7a7a\u95f4\u4e14\u8be5\u7a7a\u95f4\u53d6\u51b3\u4e8e\u9012\u5f52\u7684\u6df1\u5ea6\uff0c\u800c\u9012\u5f52\u7684\u6df1\u5ea6\u663e\u7136\u4e3a\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\uff0c\u5e76\u4e14\u6bcf\u6b21\u9012\u5f52\u8c03\u7528\u7684\u51fd\u6570\u91cc\u53c8\u53ea\u7528\u4e86\u5e38\u6570\u4e2a\u53d8\u91cf\uff0c\u6240\u4ee5\u6240\u9700\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(Height) \u3002</p>"},{"location":"algorithm/leetcode/#108","title":"108 \u5c06\u6709\u5e8f\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811","text":"<p>\u7ed9\u5b9a\u4e2d\u5e8f\u904d\u5386\u7ed3\u679c\u6c42\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u7ed3\u679c\u4e0d\u4e00\u5b9a\u552f\u4e00</p> <p>\u7ed9\u5b9a\u4e2d\u5e8f\u904d\u5386\u7ed3\u679c\u6c42\u5e73\u8861\u7684\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u7ed3\u679c\u4e0d\u4e00\u5b9a\u552f\u4e00</p> <p>\u56e0\u6b64\uff0c\u9898\u76ee\u7ed9\u51fa\u4e86\u591a\u79cd\u53ef\u80fd\u7684\u7b54\u6848\uff0c\u8868\u793a\u90fd\u53ef\u4ee5</p> <p>\u601d\u8def\uff1a</p> <ol> <li>\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u662f\u9012\u589e\u6570\u7ec4</li> <li>\u6211\u4eec\u6bcf\u6b21\u53d6\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u4e2d\u95f4\u503c\uff0c\u8fd9\u4e2a\u503c\u5c31\u662f\u6839\u8282\u70b9</li> <li>\u6839\u8282\u70b9\u5de6\u8fb9\u662f\u5b83\u7684\u5de6\u5b50\u6811\uff0c\u53f3\u8fb9\u662f\u5b83\u7684\u53f3\u5b50\u6811</li> <li>\u63a5\u7740\u91cd\u590d\u6b65\u9aa42\u548c\u6b65\u9aa43\uff0c\u5373\u53ef\u83b7\u5f97\u4e8c\u53c9\u641c\u7d22\u6811</li> </ol> <p>\u6709\u4e2a\u5c0f\u5751\uff1a</p> <p>\u5982\u4f55\u8bc1\u660e\u4ee5\u4e0a\u505a\u6cd5\u80fd\u591f\u4fdd\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811\u662f\u5e73\u8861\u7684</p> <p>\u8bc1\u660e\u89c1\u4ee5\u4e0b\u94fe\u63a5</p> <p>https://leetcode.cn/problems/balance-a-binary-search-tree/solutions/241897/jiang-er-cha-sou-suo-shu-bian-ping-heng-by-leetcod/</p> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    TreeNode* dfs(vector&lt;int&gt;&amp; nums, int start, int end){\n        if(start &gt; end)\n            return nullptr;\n        int mid = (start + end) / 2;\n        TreeNode* root = new TreeNode(nums[mid]);\n        root-&gt;left = dfs(nums, start, mid - 1);\n        root-&gt;right = dfs(nums, mid + 1, end);\n        return root;\n    }\npublic:\n    TreeNode* sortedArrayToBST(vector&lt;int&gt;&amp; nums) {\n        return dfs(nums, 0 ,nums.size() - 1);\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u5176\u4e2d n \u662f\u6570\u7ec4\u7684\u957f\u5ea6\u3002\u6bcf\u4e2a\u6570\u5b57\u53ea\u8bbf\u95ee\u4e00\u6b21\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(logn)\uff0c\u5176\u4e2d n \u662f\u6570\u7ec4\u7684\u957f\u5ea6\u3002\u7a7a\u95f4\u590d\u6742\u5ea6\u4e0d\u8003\u8651\u8fd4\u56de\u503c\uff0c\u56e0\u6b64\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3b\u8981\u53d6\u51b3\u4e8e\u9012\u5f52\u6808\u7684\u6df1\u5ea6\uff0c\u9012\u5f52\u6808\u7684\u6df1\u5ea6\u662f O(logn)\u3002</p>"},{"location":"algorithm/leetcode/#98","title":"98 \u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811","text":""},{"location":"algorithm/leetcode/#_110","title":"\u4e2d\u5e8f\u904d\u5386\uff08\u9012\u5f52\u76f4\u63a5\u7248\uff09","text":"<p>\u901a\u8fc7\u4e2d\u5e8f\u904d\u5386\u5f97\u5230\u6700\u540e\u7684\u6709\u5e8f\u5e8f\u5217\uff0c\u904d\u5386\u4e00\u904d\u6709\u5e8f\u5e8f\u5217\u770b\u770b\u662f\u5426\u9012\u589e</p> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    vector&lt;long long&gt; ans;\n    void inOrder(TreeNode* root){\n        if(!root)\n            return;\n        inOrder(root-&gt;left);\n        ans.push_back(root-&gt;val);\n        inOrder(root-&gt;right);\n    }\npublic:\n    bool isValidBST(TreeNode* root) {\n        inOrder(root);\n        long long pre = (long long)INT_MIN - 1;\n        for(long long num : ans){\n            if(num &lt;= pre)\n                return false;\n            pre = num;\n        }     \n        return true;\n    }\n};\n</code></pre> <p>\u4f46\u8fd9\u79cd\u65b9\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u6709\u70b9\u9ad8</p>"},{"location":"algorithm/leetcode/#_111","title":"\u4e2d\u5e8f\u904d\u5386\uff08\u9012\u5f52\u4f18\u5316\u7248\uff09","text":"<p>\u6211\u4eec\u53ef\u4ee5\u5728\u4e2d\u5e8f\u904d\u5386\u8fc7\u7a0b\u4e2d\u5224\u65ad\u662f\u5426\u7b26\u5408\u6709\u5e8f\u5e8f\u5217\uff0c\u5373\u53ea\u9700\u8981\u5224\u65ad\u4e2d\u5e8f\u904d\u5386\u8bbf\u95ee\u7684\u5f53\u524d\u8282\u70b9\u4e0e\u8bbf\u95ee\u7684\u4e0a\u4e00\u4e2a\u8282\u70b9\u662f\u5426\u6ee1\u8db3\u6709\u5e8f</p> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    vector&lt;long long&gt; ans;\n    long long pre = (long long)INT_MIN - 1;\n    bool inOrder(TreeNode* root){\n        if(!root)\n            return true;\n        bool leftRes = inOrder(root-&gt;left);\n        if(root-&gt;val &lt;= pre)\n            return false;\n        pre = root-&gt;val;\n        bool rightRes = inOrder(root-&gt;right);\n        return leftRes &amp;&amp; rightRes;        \n    }\npublic:\n    bool isValidBST(TreeNode* root) {\n        return inOrder(root);\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#230-k","title":"230 \u4e8c\u53c9\u641c\u7d22\u6811\u7b2ck\u5c0f\u7684\u5143\u7d20","text":""},{"location":"algorithm/leetcode/#_112","title":"\u4e2d\u5e8f\u904d\u5386\uff08\u76f4\u63a5\u7248\uff09","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    vector&lt;int&gt; ans;\n    void inOrder(TreeNode* root){\n        if(!root)\n            return;\n        inOrder(root-&gt;left);\n        ans.push_back(root-&gt;val);\n        inOrder(root-&gt;right);\n    }\npublic:\n    int kthSmallest(TreeNode* root, int k) {\n        inOrder(root); \n        return ans[k - 1];\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_113","title":"\u4e2d\u5e8f\u904d\u5386\uff08\u4f18\u5316\u7248\uff09","text":"<p>\u6240\u8c13\u4f18\u5316\u5c31\u662f\u4e0d\u9700\u8981\u904d\u5386\u6574\u68f5\u6811\uff0c\u904d\u5386\u8fc7\u7a0b\u4e2d\u627e\u5230\u5bf9\u5e94\u7684\u8282\u70b9\u5c31\u53ef\u4ee5\u8fd4\u56de</p>"},{"location":"algorithm/leetcode/#_114","title":"\u9012\u5f52","text":"<p>\u611f\u89c9\u7528\u9012\u5f52\u4e0d\u592a\u9002\u5408\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8d34\u51fa\u6765\u4e86</p>"},{"location":"algorithm/leetcode/#_115","title":"\u8fed\u4ee3","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int kthSmallest(TreeNode* root, int k) {\n        stack&lt;TreeNode*&gt; stk;\n        TreeNode* cur = root;\n        while(cur || !stk.empty()){\n            if(cur){\n                stk.push(cur);\n                cur = cur-&gt;left;\n            }else{\n                cur = stk.top();\n                stk.pop();\n                // \u4ecek - 1\u5f00\u59cb\u8ba1\u6570\n                k--;\n                // \u56e0\u6b64k == 0\u65f6\u5bf9\u5e94\u7b2ck\u4e2a\u5c0f\u7684\u503c\n                if(k == 0)\n                    return cur-&gt;val;\n                cur = cur-&gt;right;\n            }\n        }\n        return 0;\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(H+k)\uff0c\u5176\u4e2d H \u662f\u6811\u7684\u9ad8\u5ea6\u3002\u5728\u5f00\u59cb\u904d\u5386\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981 O(H) \u5230\u8fbe\u53f6\u7ed3\u70b9\u3002\u5f53\u6811\u662f\u5e73\u8861\u6811\u65f6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53d6\u5f97\u6700\u5c0f\u503c O(logN+k)\uff1b\u5f53\u6811\u662f\u7ebf\u6027\u6811\uff08\u6811\u4e2d\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u53ea\u6709\u4e00\u4e2a\u5b50\u7ed3\u70b9\u6216\u6ca1\u6709\u5b50\u7ed3\u70b9\uff09\u65f6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53d6\u5f97\u6700\u5927\u503c O(N+k)\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(H)\uff0c\u6808\u4e2d\u6700\u591a\u9700\u8981\u5b58\u50a8 H \u4e2a\u5143\u7d20\u3002\u5f53\u6811\u662f\u5e73\u8861\u6811\u65f6\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u53d6\u5f97\u6700\u5c0f\u503c O(logN)\uff1b\u5f53\u6811\u662f\u7ebf\u6027\u6811\u65f6\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u53d6\u5f97\u6700\u5927\u503c O(N)</p>"},{"location":"algorithm/leetcode/#_116","title":"\u65b9\u6cd5\u4e8c\uff1a\u8bb0\u5f55\u5b50\u6811\u7684\u7ed3\u70b9\u6570","text":"<p>\u5982\u679c\u4e8c\u53c9\u641c\u7d22\u6811\u7ecf\u5e38\u88ab\u4fee\u6539\uff08\u63d2\u5165/\u5220\u9664\u64cd\u4f5c\uff09\u5e76\u4e14\u4f60\u9700\u8981\u9891\u7e41\u5730\u67e5\u627e\u7b2c <code>k</code> \u5c0f\u7684\u503c\uff0c\u4f60\u5c06\u5982\u4f55\u4f18\u5316\u7b97\u6cd5\uff1f</p> <p>\u8be6\u89c1\u9898\u89e3\uff1a</p> <p>https://leetcode.cn/problems/kth-smallest-element-in-a-bst/solutions/1050055/er-cha-sou-suo-shu-zhong-di-kxiao-de-yua-8o07/?envType=study-plan-v2&amp;envId=top-100-liked</p> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    unordered_map&lt;TreeNode*,int&gt; nodeNum;\n    int setNodeNum(TreeNode* node){\n        if(!node)\n            return 0;\n        int leftNum = setNodeNum(node-&gt;left);\n        int rightNum = setNodeNum(node-&gt;right);\n        nodeNum[node] = leftNum + rightNum + 1;\n        return nodeNum[node];\n    }\n    int getNodeNum(TreeNode* node){\n        if(node &amp;&amp; nodeNum.count(node))\n            return nodeNum[node];\n        else\n            return 0;\n    }\npublic:\n    int kthSmallest(TreeNode* root, int k) {\n        if(!root)\n            return 0;\n        setNodeNum(root);\n        TreeNode* node = root;\n        while(node){\n            int leftNum = getNodeNum(node-&gt;left);\n            // \u5982\u679c\u5de6\u5b50\u6811\u8282\u70b9\u6811\u6bd4 k - 1\u5c0f\uff0c\u8bf4\u660e\u7b2ck\u4e2a\u6570\u5728\u53f3\u5b50\u6811\n            // \u6b64\u65f6\u5de6\u5b50\u6811\u6709 leftNum \u4e2a\u8282\u70b9\n            // \u4e5f\u5c31\u662f\u8bf4\u6b64\u65f6\u6211\u4eec\u5df2\u7ecf\u627e\u5230\u4e86\u7b2ck\u4e2a\u8282\u70b9\u5de6\u8fb9\u7684leftNum\u4e2a\u8282\u70b9\n            // \u6211\u4eec\u8fd8\u9700\u8981\u586b\u5145k - 1 - leftNum\u4e2a\u8282\u70b9\uff0c\u5c31\u53ef\u4ee5\u627e\u5230\u7b2ck\u4e2a\u8282\u70b9\n            // \u56e0\u6b64k = k - 1 - leftNum\n            if(leftNum &lt; k - 1){\n                node = node-&gt;right;\n                k -= leftNum + 1;\n            }else if (leftNum == k - 1){\n                return node-&gt;val;\n            }else{\n                node = node-&gt;left;\n            }\n        }\n        return 0;\n    }\n};\n</code></pre> <p>\u4e0b\u4e00\u6b21\u5bfb\u627e\u7b2ck\u5c0f\u7684\u8282\u70b9\uff0c\u53ea\u9700\u8981\u67e5\u627e\u54c8\u5e0c\u8868\u5373\u53ef\uff0c\u4e3a\\(O(1)\\)\u65f6\u95f4\u590d\u6742\u5ea6</p>"},{"location":"algorithm/leetcode/#114","title":"114 \u4e8c\u53c9\u6811\u5c55\u5f00\u4e3a\u94fe\u8868","text":""},{"location":"algorithm/leetcode/#_117","title":"\u8fed\u4ee3","text":"<p>\u601d\u8def\uff1a</p> <ul> <li>\u5c06\u5de6\u5b50\u6811\u63d2\u5165\u5230\u53f3\u5b50\u6811\u7684\u5730\u65b9</li> <li>\u5c06\u539f\u6765\u7684\u53f3\u5b50\u6811\u63a5\u5230\u5de6\u5b50\u6811\u7684\u6700\u53f3\u8fb9\u8282\u70b9</li> <li>\u8003\u8651\u65b0\u7684\u53f3\u5b50\u6811\u7684\u6839\u8282\u70b9\uff0c\u4e00\u76f4\u91cd\u590d\u4e0a\u8fb9\u7684\u8fc7\u7a0b\uff0c\u76f4\u5230\u65b0\u7684\u53f3\u5b50\u6811\u4e3a null</li> </ul> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),\n * right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void flatten(TreeNode* root) {\n        TreeNode* cur = root;\n        while (cur) {\n            // move\u8868\u793a\u5de6\u5b50\u6811\u7684\u6700\u53f3\u8fb9\u8282\u70b9\n            // move\u662f\u53f3\u5b50\u6811\u9700\u8981\u63a5\u4e0a\u7684\u4f4d\u7f6e\n            TreeNode* move = cur-&gt;left;\n            while (move &amp;&amp; move-&gt;right) {\n                move = move-&gt;right;\n            }\n            // \u8fd9\u91cc\u9700\u8981\u5224\u65admove\u662f\u5426\u4e3a\u7a7a\n            // \u5982\u679c\u4e00\u5f00\u59cbcur-&gt;left\u4e0d\u4e3a\u7a7a\uff08\u5de6\u5b50\u6811\u4e0d\u4e3a\u7a7a\uff09\uff0c\u90a3\u4e48move\u4e0d\u4e3a\u7a7a\n            // \u5982\u679c\u4e00\u5f00\u59cbcur-&gt;left\u4e3a\u7a7a\uff08\u5de6\u5b50\u6811\u4e3a\u7a7a\uff09\uff0c\u90a3\u4e48move\u4e3a\u7a7a\n            // \u5982\u679c\u5de6\u5b50\u6811\u4e0d\u4e3a\u7a7a\u6240\u4ee5\u8981\u8fdb\u884c\u64cd\u4f5c\n            if (move) {\n                move-&gt;right = cur-&gt;right;\n                cur-&gt;right = cur-&gt;left;\n                cur-&gt;left = nullptr;\n            }\n            // \u79fb\u52a8\u5230\u53f3\u5b50\u6811\u548c\u5de6\u5b50\u6811\u662f\u5426\u4e3a\u7a7a\u6ca1\u5173\u7cfb\n            cur = cur-&gt;right;\n        }\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(1)\\)</p>"},{"location":"algorithm/leetcode/#_118","title":"\u53cd\u524d\u5e8f\u904d\u5386","text":"<p>\u9012\u5f52+\u56de\u6eaf\u7684\u601d\u8def\uff1a</p> <p>\u5c06\u524d\u5e8f\u904d\u5386\u53cd\u8fc7\u6765\u904d\u5386\uff0c\u90a3\u4e48\u7b2c\u4e00\u6b21\u8bbf\u95ee\u7684\u5c31\u662f\u524d\u5e8f\u904d\u5386\u4e2d\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u3002</p> <p>\u90a3\u4e48\u53ef\u4ee5\u8c03\u6574\u6700\u540e\u4e00\u4e2a\u8282\u70b9\uff0c\u518d\u5c06\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u4fdd\u5b58\u5230pre\u91cc\uff0c\u518d\u8c03\u6574\u5012\u6570\u7b2c\u4e8c\u4e2a\u8282\u70b9\uff0c\u5c06\u5b83\u7684\u53f3\u5b50\u6811\u8bbe\u7f6e\u4e3apre\uff0c\u518d\u8c03\u6574\u5012\u6570\u7b2c\u4e09\u4e2a\u8282\u70b9\uff0c\u4f9d\u6b21\u7c7b\u63a8\u76f4\u5230\u8c03\u6574\u5b8c\u6bd5\u3002\u548c\u53cd\u8f6c\u94fe\u8868\u7684\u9012\u5f52\u601d\u8def\u662f\u4e00\u6837\u7684\u3002</p> <pre><code>class Solution {\npublic:\n    TreeNode* preNode;\n    void flatten(TreeNode* root) {\n        if (root == NULL) return;\n        flatten(root-&gt;right);\n        flatten(root-&gt;left);\n        root-&gt;left = NULL;\n        root-&gt;right = preNode;\n        preNode = root;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p>"},{"location":"algorithm/leetcode/#105","title":"105 \u4ece\u524d\u5e8f\u4e0e\u4e2d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u6811","text":""},{"location":"algorithm/leetcode/#_119","title":"\u76f4\u63a5\u505a\u6cd5","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    TreeNode* myBuildTree(vector&lt;int&gt;&amp; preorder, vector&lt;int&gt;&amp; inorder, int preorderStart, int preorderEnd, int inorderStart, int inorderEnd){\n        if(preorderStart &gt; preorderEnd || inorderStart &gt; inorderEnd)\n            return nullptr;\n        auto it = find(inorder.begin()+inorderStart, inorder.begin()+inorderEnd + 1, preorder[preorderStart]);\n        int pos = distance(inorder.begin(), it);\n        int leftSubTreeNum = pos - inorderStart;\n        TreeNode* root = new TreeNode(inorder[pos]);\n        root-&gt;left = myBuildTree(preorder,inorder,preorderStart + 1, preorderStart + leftSubTreeNum, inorderStart, pos - 1);\n        root-&gt;right = myBuildTree(preorder,inorder, preorderStart + leftSubTreeNum + 1, preorderEnd, pos + 1, inorderEnd);\n        return root;\n    }\npublic:\n    TreeNode* buildTree(vector&lt;int&gt;&amp; preorder, vector&lt;int&gt;&amp; inorder) {\n        return myBuildTree(preorder, inorder,0,preorder.size() - 1, 0, inorder.size() - 1);\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_120","title":"\u76f4\u63a5\u505a\u6cd5\u7684\u4f18\u5316","text":"<p>find\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(n)\\)\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\u4e3a\u54c8\u5e0c\u8868\u67e5\u8be2\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u6539\u4e3a\\(O(1)\\)</p> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    TreeNode* myBuildTree(vector&lt;int&gt;&amp; preorder, vector&lt;int&gt;&amp; inorder, int preorderStart, int preorderEnd, int inorderStart, int inorderEnd){\n        if(preorderStart &gt; preorderEnd || inorderStart &gt; inorderEnd)\n            return nullptr;\n        int pos = hashMap[preorder[preorderStart]];\n        int leftSubTreeNum = pos - inorderStart;\n        TreeNode* root = new TreeNode(inorder[pos]);\n        root-&gt;left = myBuildTree(preorder,inorder,preorderStart + 1, preorderStart + leftSubTreeNum, inorderStart, pos - 1);\n        root-&gt;right = myBuildTree(preorder,inorder, preorderStart + leftSubTreeNum + 1, preorderEnd, pos + 1, inorderEnd);\n        return root;\n    }\npublic:\n    unordered_map&lt;int, int&gt; hashMap;\n    TreeNode* buildTree(vector&lt;int&gt;&amp; preorder, vector&lt;int&gt;&amp; inorder) {\n        for(int i = 0; i &lt; inorder.size(); i++){\n            hashMap[inorder[i]] = i;\n        }\n        return myBuildTree(preorder, inorder,0,preorder.size() - 1, 0, inorder.size() - 1);\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u5176\u4e2d n \u662f\u6811\u4e2d\u7684\u8282\u70b9\u4e2a\u6570\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u9664\u53bb\u8fd4\u56de\u7684\u7b54\u6848\u9700\u8981\u7684 O(n) \u7a7a\u95f4\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4f7f\u7528 O(n) \u7684\u7a7a\u95f4\u5b58\u50a8\u54c8\u5e0c\u6620\u5c04\uff0c\u4ee5\u53ca O(h)\uff08\u5176\u4e2d h \u662f\u6811\u7684\u9ad8\u5ea6\uff09\u7684\u7a7a\u95f4\u8868\u793a\u9012\u5f52\u65f6\u6808\u7a7a\u95f4\u3002\u8fd9\u91cc h&lt;n\uff0c\u6240\u4ee5\u603b\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(n)\u3002</p>"},{"location":"algorithm/leetcode/#_121","title":"\u8fed\u4ee3","text":"<p>\u5f85\u8865\u5145</p>"},{"location":"algorithm/leetcode/#437-iii","title":"437 \u8def\u5f84\u4e4b\u548cIII","text":""},{"location":"algorithm/leetcode/#_122","title":"\u76f4\u63a5\u505a\u6cd5","text":"<p>pathSum\u8868\u793a\u8fd4\u56de\u4e8c\u53c9\u6811\u4e2d\u4efb\u610f\u8282\u70b9\u4e3a\u8d77\u70b9\u548c\u4e3atargetSum\u7684\u8def\u5f84\u6570\uff0c\u6ce8\u610f\uff1a\u8fd9\u91cc\u7684\u4efb\u610f\u8282\u70b9\u5305\u62ec\uff1a</p> <ul> <li>\u6839\u8282\u70b9</li> <li>\u6839\u8282\u70b9\u7684\u76f4\u63a5\u5b50\u8282\u70b9</li> <li>\u95f4\u63a5\u5b50\u8282\u70b9</li> </ul> <p>\u56e0\u6b64\u6211\u4eec\u60f3\u5230\uff0c\u904d\u5386\u4e8c\u53c9\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\uff0c\u4ee5\u8fd9\u4e2a\u8282\u70b9\u4e3a\u8d77\u70b9\uff0c\u8ba1\u7b97\u548c\u4e3atargetSum\u7684\u8def\u5f84\u6570\uff0c\u6700\u540e\u7d2f\u52a0\u8d77\u6765\uff0c\u5c31\u662f\u7ed3\u679c</p> <p>\u904d\u5386\u7684\u65b9\u5f0f\u6709\u5f88\u591a\uff0c\u4ee5\u6700\u7b80\u5355\u7684\u524d\u5e8f\u904d\u5386\u4e3a\u4f8b</p> <p>\u90a3\u4e48\u6211\u4eec\u7684\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u6c42\u89e3\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u8d1f\u8d23\u8ba1\u7b97\u4ee5\u67d0\u4e2a\u8282\u70b9\u4e3a\u8d77\u70b9\uff0c\u548c\u4e3atargetSum\u7684\u8def\u5f84\u6570</p> <p>\u4e3a\u6b64\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570rootSum</p> <ul> <li> <p>\u8be5\u51fd\u6570\u5c31\u662f\u8ba1\u7b97\u7279\u5b9a\u8282\u70b9\u4e3a\u8d77\u70b9\u7684\u548c\u4e3atargetSum\u7684\u8def\u5f84\u6570</p> </li> <li> <p>\u8ba1\u7b97\u65b9\u6cd5\uff1a</p> </li> <li> <p>\u5982\u679c\u5f53\u524d\u8282\u70b9root\u503c\u4e3atargetSum\uff0c\u8868\u793a\u6211\u4eec\u627e\u5230\u4e86\u76ee\u6807\u8282\u70b9\uff0c\u8def\u5f84\u6570\u52a0\u4e00</p> </li> <li>\u5982\u679c\u5f53\u524d\u8282\u70b9root\u503c\u4e0d\u4e3atargetSum\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u7ee7\u7eed\u904d\u5386\u5f53\u524d\u8282\u70b9\u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\uff0c\u76f4\u5230\u627e\u5230\u6ee1\u8db3\u9898\u610f\u7684\u8def\u5f84<ul> <li>\u5982\u679c\u5de6/\u53f3\u5b50\u6811\u5b58\u5728\u8282\u70b9node\uff0c\u4f7f\u5f97root-&gt;n1-&gt;n2-&gt;...-&gt;node\u7684\u548c\u4e3atargetSum\uff0c\u90a3\u4e48\u8def\u5f84\u6570\u52a0\u4e00</li> </ul> </li> </ul> <p>\u7531\u4e8e\u8282\u70b9\u7684\u503c\u53ef\u4ee5\u4e3a\u8d1f\u6570\uff0c\u56e0\u6b64\u60c5\u51b51\u548c\u60c5\u51b52\u53ef\u4ee5\u540c\u65f6\u6210\u7acb\uff0c\u56e0\u6b64\u7ed3\u679c\u5e94\u8be5\u662f\u4e24\u79cd\u60c5\u51b5\u7684\u548c</p> <p>\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5b9a\u4e49\u4e86\u51fd\u6570rootSum\uff0c\u90a3\u4e48pathSum\u4e5f\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e86\uff1a</p> <ul> <li>\u672c\u8d28\u662f\u904d\u5386\u4e8c\u53c9\u6811\uff0c\u8fd9\u91cc\u6211\u4eec\u91c7\u7528\u4e86\u524d\u5e8f\u904d\u5386</li> <li>\u5904\u7406\u6bcf\u4e2a\u8282\u70b9\u540e\uff0c\u904d\u5386\u5b83\u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811</li> <li>\u5904\u7406\u6bcf\u4e2a\u8282\u70b9\u7684\u65b9\u5f0f\uff1a\u4ee5\u6bcf\u4e2a\u8282\u70b9\u4f5c\u4e3a\u8d77\u70b9\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u4e3a\u8d77\u70b9\u7684\u548c\u4e3atargetSum\u7684\u8def\u5f84\u6570\uff0c\u5373\u8ba1\u7b97rootSum</li> </ul> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    // \u8ba1\u7b97\u4ee5\u67d0\u4e2a\u8282\u70b9\u4e3a\u8d77\u70b9\u7684\u8def\u5f84\u6570\n    // root-&gt;n1-&gt;n2-&gt;...-&gt;node\n    int rootSum(TreeNode* root, long targetSum){\n        if(!root)\n            return 0;\n        int res = 0;\n        // \u5982\u679c\u5f53\u524d\u8282\u70b9\u503c\u4e3atargetSum\n        if(root-&gt;val == targetSum)\n            res++;\n        // \u5982\u679c\u5f53\u524d\u8282\u70b9\u503c\u4e0d\u4e3atargetSum\n        // \u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u5047\u8bberoot\u4e00\u5b9a\u5305\u542b\u5728\u8def\u5f84\u4e2d\n        // \u56e0\u6b64\u4e4b\u540e\u5bfb\u627e\u8def\u5f84\u9700\u8981\u66f4\u65b0targetSum\n        res += rootSum(root-&gt;left, targetSum - root-&gt;val);\n        res += rootSum(root-&gt;right, targetSum - root-&gt;val);\n        return res;\n    }\npublic:\n    // \u6ce8\u610f\u6570\u636e\u8303\u56f4\uff0c\u4f7f\u7528long\n    int pathSum(TreeNode* root, long targetSum) {\n        if(!root)\n            return 0;\n        int res = 0;\n        // \u524d\u5e8f\u904d\u5386\u6846\u67b6\n        res += rootSum(root, targetSum);\n        // \u8def\u5f84\u4e0d\u9700\u8981\u4ece\u6839\u8282\u70b9\u5f00\u59cb\n        // \u6bcf\u4e2a\u8282\u70b9\u90fd\u53ef\u4ee5\u662f\u8def\u5f84\u7684\u8d77\u70b9\n        // \u56e0\u6b64\u6bcf\u6b21\u8c03\u7528pathSum\u90fd\u662f\u540c\u6837\u7684targetSum\n        res += pathSum(root-&gt;left, targetSum);\n        res += pathSum(root-&gt;right, targetSum);\n        return res;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N^2)\\)\uff0c\u5176\u4e2d N \u4e3a\u8be5\u4e8c\u53c9\u6811\u8282\u70b9\u7684\u4e2a\u6570\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u6c42\u4ee5\u8be5\u8282\u70b9\u4e3a\u8d77\u70b9\u7684\u8def\u5f84\u6570\u76ee\u65f6\uff0c\u5219\u9700\u8981\u904d\u5386\u4ee5\u8be5\u8282\u70b9\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u7684\u6240\u6709\u8282\u70b9\uff0c\u56e0\u6b64\u6c42\u8be5\u8def\u5f84\u6240\u82b1\u8d39\u7684\u6700\u5927\u65f6\u95f4\u4e3a O(N)\uff0c\u6211\u4eec\u4f1a\u5bf9\u6bcf\u4e2a\u8282\u70b9\u90fd\u6c42\u4e00\u6b21\u4ee5\u8be5\u8282\u70b9\u4e3a\u8d77\u70b9\u7684\u8def\u5f84\u6570\u76ee\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(N^2)\\)</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(N)\uff0c\u8003\u8651\u5230\u9012\u5f52\u9700\u8981\u5728\u6808\u4e0a\u5f00\u8f9f\u7a7a\u95f4\u3002</p>"},{"location":"algorithm/leetcode/#_123","title":"\u4f18\u5316\u505a\u6cd5","text":"<p>\u4ee5\u6bcf\u4e2a\u8282\u70b9\u4e3a\u8d77\u70b9\u8ba1\u7b97\u8def\u5f84\u6570\uff0c\u4f1a\u5305\u542b\u5f88\u591a\u91cd\u590d\u7684\u8def\u5f84\uff0c\u4f8b\u5982\uff1a</p> <ol> <li>n1-&gt;n2-&gt;...-&gt;n7-&gt;n8</li> <li>n2-&gt;...-&gt;n7</li> </ol> <p>\u5047\u8bbe\u8fd9\u4e24\u6761\u8def\u5f84\u90fd\u7b26\u5408\u548c\u4e3atargetSum\uff0c\u90a3\u4e48\u8ba1\u7b97\u8def\u5f841\u4f1a\u5305\u542b\u8def\u5f842\u7684\u6b65\u9aa4\uff0c\u91cd\u590d\u4e86\u8def\u5f842\u7684\u8ba1\u7b97</p> <p>\u9488\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u8054\u60f3\u5230\u6570\u7ec4\u4e2d\u7684\u524d\u7f00\u548c\uff0c\u95ee\u9898\u5728\u4e8e\u4e8c\u53c9\u6811\u5982\u4f55\u5b9e\u73b0\u524d\u7f00\u548c\u3002\u6211\u4eec\u53d1\u73b0\u4ece\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u8fd9\u6761\u8def\u5f84\u5176\u5b9e\u5c31\u5bf9\u5e94\u4e00\u4e2a\u6570\u7ec4\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5c06\u95ee\u9898\u5206\u89e3\u4e3a\u6bcf\u6761\u6839\u8282\u70b9\u5230\u53f6\u5b50\u7ed3\u70b9\u8fd9\u6761\u8def\u5f84\u5982\u4f55\u6c42\u89e3\u5373\u53ef\uff0c\u518d\u5c06\u6700\u540e\u7ed3\u679c\u7d2f\u52a0</p> <ul> <li>\u5728\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u4e2d\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u904d\u5386\u5230\u53f6\u5b50\u8282\u70b9\u65f6\u4f1a\u56de\u6eaf\uff0c\u90a3\u4e48\u4ece\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u8fd9\u6761\u8def\u5f84\u4e2d\uff0c\u6709\u591a\u5c11\u6761\u4ee5\u67d0\u4e2a\u8282\u70b9\u4e3a\u8d77\u70b9\u548c\u4e3atargetSum\u7684\u8def\u5f84\u6570\u3002\u5728\u76f4\u63a5\u505a\u6cd5\u4e2d\uff0c\u901a\u8fc7\u5bf9\u6bcf\u4e2a\u8282\u70b9\u6c42\u4e00\u6b21rootSum\u3002\u5728\u4f18\u5316\u505a\u6cd5\u4e2d\uff0c\u7ef4\u62a4\u524d\u7f00\u548c+\u54c8\u5e0c\u8868\u907f\u514d\u91cd\u590d\u8ba1\u7b97</li> <li>\u5f53\u8282\u70b9\u56de\u6eaf\u65f6\uff0c\u8def\u5f84\u66f4\u65b0\uff0c\u56e0\u6b64\u54c8\u5e0c\u8868\u4e5f\u9700\u8981\u66f4\u65b0\uff08\u54c8\u5e0c\u8868\u53bb\u6389\u56de\u6eaf\u8282\u70b9\u5bf9\u5e94\u524d\u7f00\u548c\u7684\u6807\u8bb0\uff09</li> </ul> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    unordered_map&lt;long,int&gt; hashMap;\n    int dfs(TreeNode* root, long pre, long targetSum){\n        if(!root)\n            return 0;\n        // \u524d\u5e8f\u904d\u5386\n        pre += root-&gt;val;\n        int res = 0;\n        // sum[i] - sum[j - 1] == targetSum\n        // -&gt; sum[j - 1] == sum[i] - targetSum \n        if(hashMap.count(pre - targetSum))\n            res += hashMap[pre - targetSum];\n\n        // \u4e3a\u4ec0\u4e48\u8981\u6062\u590d\u73b0\u573a\n        // \u56e0\u4e3a\u904d\u5386\u5b8c\u5f53\u524d\u8282\u70b9\u4f1a\u56de\u6eaf\uff0c\u56de\u6eaf\u610f\u5473\u7740\u8fd9\u6761\u8def\u5f84\u7684\u548cpre\u4e0d\u5b58\u5728\n        hashMap[pre]++;\n        res += dfs(root-&gt;left, pre, targetSum);\n        res += dfs(root-&gt;right, pre, targetSum);\n        hashMap[pre]--;\n        return res;\n    }\npublic:\n    int pathSum(TreeNode* root, long targetSum) {\n        if(!root)\n            return 0;\n        hashMap[0] = 1;\n        // \u53ea\u9700\u8981\u904d\u5386\u4e00\u6b21\u4e8c\u53c9\u6811\n        return dfs(root, 0,targetSum);\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(N)\uff0c\u5176\u4e2d N \u4e3a\u4e8c\u53c9\u6811\u4e2d\u8282\u70b9\u7684\u4e2a\u6570\u3002\u5229\u7528\u524d\u7f00\u548c\u53ea\u9700\u904d\u5386\u4e00\u6b21\u4e8c\u53c9\u6811\u5373\u53ef\u3002</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(N)</li> </ul>"},{"location":"algorithm/leetcode/#_124","title":"\u603b\u7ed3","text":"<p>\u76f4\u63a5\u505a\u6cd5\u548c\u4f18\u5316\u505a\u6cd5\u672c\u8d28\u4e0a\u90fd\u662f\u904d\u5386\u4e00\u904d\u4e8c\u53c9\u6811\uff0c\u904d\u5386\u65b9\u5f0f\u91c7\u7528\u4e86\u524d\u5e8f\u904d\u5386\uff0c\u533a\u522b\u5728\u4e8e\u5982\u4f55\u5904\u7406\u6839\u8282\u70b9</p> <ul> <li> <p>\u5904\u7406\u6839\u8282\u70b9\uff1a\u8ba1\u7b97\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u548c\u4e3atargetSum\u7684\u8def\u5f84\u6570</p> </li> <li> <p>\u76f4\u63a5\u505a\u6cd5\uff1a\u4ee5\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u8fd9\u6761\u8def\u5f84\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u4f5c\u4e3a\u8d77\u70b9\uff0c\u8ba1\u7b97\u8be5\u8d77\u70b9\u548c\u4e3atargetSum\u7684\u8def\u5f84\u6570</p> <ul> <li>\u7c7b\u6bd4\u4e8e\u6570\u7ec4\u4e2d</li> </ul> <pre><code>for(int i = 0; i &lt; n; i++){\n      int sum = 0;\n      for(int j = i; j &lt; n; j++){\n          sum += nums[j];\n              if(sum == targetSum)\n                      cnt++;\n      }\n}\n</code></pre> <p>\u56e0\u6b64\u76f4\u63a5\u505a\u6cd5\u8fd8\u9700\u8981\u518d\u904d\u5386\u4e00\u6b21\u5b50\u6811\u7684\u6240\u6709\u8282\u70b9\uff0c\u5373\u518d\u91c7\u7528\u4e00\u6b21\u524d\u5e8f\u904d\u5386</p> </li> <li> <p>\u4f18\u5316\u505a\u6cd5\uff1a\u4ee5\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u8fd9\u6761\u8def\u5f84\uff0c\u4f7f\u7528\u524d\u7f00\u548c + \u54c8\u5e0c\u8868\uff0c\u53ea\u9700\u904d\u5386\u4e00\u6b21\u8def\u5f84\u5373\u53ef\u5f97\u5230\u548c\u4e3atargetSum\u7684\u8def\u5f84\u6570</p> <ul> <li>\u7c7b\u6bd4\u4e8e\u6570\u7ec4\u4e2d</li> </ul> <pre><code>for(int i = 0; i &lt; n; i++){\n      pre += nums[i];\n      if(hashMap.count(pre - targetSum)){\n              cnt += hashMap[pre - targetSum];\n      }\n      hashMap[pre - targetSum]++;\n}\n</code></pre> </li> <li> <p>\u904d\u5386\u5de6\u5b50\u6811 + \u904d\u5386\u53f3\u5b50\u6811</p> </li> <li> <p>\u552f\u4e00\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4f18\u5316\u505a\u6cd5\u4e2d\uff0c\u7531\u4e8e\u56de\u6eaf\uff0c\u54c8\u5e0c\u8868\u9700\u8981\u5220\u9664\u56de\u6eaf\u5143\u7d20</p> </li> </ul>"},{"location":"algorithm/leetcode/#236","title":"236 \u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148","text":"<p>\u5206\u7c7b\u8ba8\u8bba\uff0c\u7ed9\u5b9a\u4e24\u4e2a\u8282\u70b9p\u548cq\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>p\u548cq\u6ca1\u6709\u76f4\u63a5\u6216\u95f4\u63a5\u7236\u5b50\u8282\u70b9\u5173\u7cfb\uff0c\u90a3\u4e48p\u548cq\u4e00\u5b9a\u5206\u522b\u5728\u67d0\u4e2a\u8282\u70b9\u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\uff0c\u8fd9\u4e2a\u8282\u70b9\u5c31\u662f\u6700\u8fd1\u516c\u5171\u7956\u5148</li> <li>p\u548cq\u6709\u76f4\u63a5\u6216\u95f4\u63a5\u7684\u7236\u5b50\u8282\u70b9\u5173\u7cfb\uff0c\u5047\u8bbep\u4e3aq\u7684\u76f4\u63a5\u6216\u95f4\u63a5\u7236\u8282\u70b9\uff0c\u90a3\u4e48q\u4e00\u5b9a\u5728p\u7684\u5de6\u5b50\u6811\u6216\u53f3\u5b50\u6811</li> </ul>"},{"location":"algorithm/leetcode/#_125","title":"\u524d\u5e8f\u904d\u5386","text":"<p>\u524d\u5e8f\u904d\u5386\u8bbf\u95ee\u987a\u5e8f\uff1a\u4e2d\u5de6\u53f3\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u5148\u5224\u65ad\u5f53\u524d\u8282\u70b9\uff0c\u624d\u80fd\u8bbf\u95ee\u5de6\u53f3\u5b50\u6811</p> <p>\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u552f\u4e8c\u60c5\u51b5\uff1a</p> <ul> <li>\u5de6\u5b50\u6811\u542b\u6709p\uff0c\u5f53\u524d\u8282\u70b9\u4e3aq / \u53f3\u5b50\u6811\u542b\u6709p\uff0c\u5f53\u524d\u8282\u70b9\u4e3aq</li> <li>\u5728\u524d\u5e8f\u904d\u5386\u4e2d\uff0c\u7531\u4e8e\u524d\u5e8f\u904d\u5386\u4f1a\u5148\u8bbf\u95ee\u5230q\uff0c\u518d\u8bbf\u95ee\u5230p\uff08\u4e5f\u5c31\u662f\u5148\u8bbf\u95ee\u5230\u6700\u8fd1\u516c\u5171\u7956\u5148\uff09\uff0c\u56e0\u6b64\u53ea\u9700\u8981\uff1a\u4e00\u65e6\u8bbf\u95ee\u5230\u503c\u4e3ap\u6216q\u7684\u8282\u70b9\uff0c\u7acb\u9a6c\u8fd4\u56de\u5f53\u524d\u8282\u70b9\uff0c\u8be5\u8282\u70b9\u5c31\u662f\u6700\u8fd1\u516c\u5171\u7956\u5148</li> <li>\u5de6\u53f3\u5b50\u6811\u5206\u522b\u542b\u6709p\u6216q\uff0c\u8868\u660e\u5f53\u524d\u8282\u70b9\u5c31\u662f\u6700\u8fd1\u516c\u5171\u7956\u5148</li> <li>\u56e0\u4e3a\u662f\u524d\u5e8f\u904d\u5386\uff0c\u56e0\u6b64\u4ece\u8fd9\u6b21\u5224\u65ad\u4e4b\u540e\uff0c\u4e0d\u4f1a\u518d\u51fa\u73b0\u5de6\u53f3\u5b50\u6811\u5206\u522b\u542b\u6709p\u6216q\u7684\u60c5\u51b5\uff0c\u53ea\u4f1a\u51fa\u73b0\u5de6\u5b50\u6811\u6709p \u6216\u53f3\u5b50\u6811\u6709q</li> <li>\u56e0\u6b64\u53ea\u8981\u89e6\u53d1\u8fd9\u4e2a\u6761\u4ef6\uff0c\u6211\u4eec\u5c31\u80fd\u5224\u65ad\u5f53\u524d\u8282\u70b9\u5c31\u662f\u6700\u8fd1\u516c\u5171\u7956\u5148</li> </ul> <p>\u5177\u4f53\u7b97\u6cd5\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>\u89e3\u91ca\u4e00\u4e0b\u8fb9\u754c\u6761\u4ef6\uff1a</p> <ul> <li>\u5f53\u524d\u8282\u70b9\u662f\u7a7a\u8282\u70b9 -&gt; \u8fd4\u56de\u5f53\u524d\u8282\u70b9 \uff08\u8fd9\u4e2a\u5e94\u8be5\u4e0d\u7528\u89e3\u91ca\uff09</li> <li>\u524d\u5e8f\u904d\u5386\u7684\u6027\u8d28\u4fdd\u8bc1\u4e86\u51fd\u6570\u8fd4\u56de\u7684\u7ed3\u679c\u5c31\u662f\u7b2c\u4e00\u4e2a\u6ee1\u8db3\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u7ed3\u679c</li> <li>\u53ea\u6709\u5de6\u5b50\u6811\u627e\u5230 -&gt; \u8bf4\u660ep\u6216q\u5c31\u5728\u5de6\u5b50\u6811\u4e2d\uff0c\u8fd4\u56de\u9012\u5f52\u5de6\u5b50\u6811\u7684\u7ed3\u679c</li> <li>\u53ea\u6709\u53f3\u5b50\u6811\u627e\u5230 -&gt; \u8bf4\u660ep\u6216q\u5c31\u5728\u53f3\u5b50\u6811\u4e2d\uff0c\u8fd4\u56de\u9012\u5f52\u53f3\u5b50\u6811\u7684\u7ed3\u679c</li> <li>\u5de6\u53f3\u5b50\u6811\u90fd\u6ca1\u6709\u627e\u5230 -&gt; \u8fd4\u56de\u7a7a\u8282\u70b9\uff08\u8868\u793a\u5f53\u524d\u5b50\u6811\u4e0d\u542b\u6709p \u6216 q\uff09</li> </ul> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if(!root || root == p || root == q)\n            return root;\n        TreeNode* left = lowestCommonAncestor(root-&gt;left, p, q);\n        TreeNode* right = lowestCommonAncestor(root-&gt;right, p, q);\n        if(left &amp;&amp; right)\n            return root;\n        if(!left &amp;&amp; right)\n            return right;\n        if(!right &amp;&amp; left)\n            return left;\n        return nullptr;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(N)\uff0c\u5176\u4e2d N \u662f\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u6570\u3002\u4e8c\u53c9\u6811\u7684\u6240\u6709\u8282\u70b9\u6709\u4e14\u53ea\u4f1a\u88ab\u8bbf\u95ee\u4e00\u6b21\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(N)\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(N) \uff0c\u5176\u4e2d N \u662f\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u6570\u3002\u9012\u5f52\u8c03\u7528\u7684\u6808\u6df1\u5ea6\u53d6\u51b3\u4e8e\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\uff0c\u4e8c\u53c9\u6811\u6700\u574f\u60c5\u51b5\u4e0b\u4e3a\u4e00\u6761\u94fe\uff0c\u6b64\u65f6\u9ad8\u5ea6\u4e3a N\uff0c\u56e0\u6b64\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(N)\u3002</p>"},{"location":"algorithm/leetcode/#_126","title":"\u540e\u5e8f\u904d\u5386","text":"<p>\u540e\u5e8f\u904d\u5386\u8bbf\u95ee\u987a\u5e8f\uff1a\u5de6\u53f3\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u540e\u5e8f\u904d\u5386\u80fd\u591f\u5148\u83b7\u53d6\u5de6\u53f3\u5b50\u6811\u662f\u5426\u542b\u6709p\u6216q\u7684\u4fe1\u606f\uff0c\u518d\u5904\u7406\u6839\u8282\u70b9</p> <p>\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u552f\u4e8c\u60c5\u51b5\uff1a</p> <ul> <li>\u5de6\u53f3\u5b50\u6811\u5206\u522b\u542b\u6709p\u6216q\uff0c\u8868\u660e\u5f53\u524d\u8282\u70b9\u5c31\u662f\u6700\u8fd1\u516c\u5171\u7956\u5148</li> <li>\u4ece\u8fd9\u6b21\u5224\u65ad\u4e4b\u540e\uff0c\u8fdb\u884c\u56de\u6eaf\uff0cp\u548cq\u4f1a\u5728\u540c\u4e00\u4e2a\u5b50\u6811\u4e2d\uff0c\u800c\u4e0d\u662f\u4e0d\u540c\u5b50\u6811</li> <li>\u56e0\u6b64\u53ea\u8981\u89e6\u53d1\u8fd9\u4e2a\u6761\u4ef6\uff0c\u6211\u4eec\u5c31\u80fd\u5224\u65ad\u5f53\u524d\u8282\u70b9\u5c31\u662f\u6700\u8fd1\u516c\u5171\u7956\u5148</li> <li>\u5de6\u5b50\u6811\u542b\u6709p\uff0c\u5f53\u524d\u8282\u70b9\u4e3aq / \u53f3\u5b50\u6811\u542b\u6709p\uff0c\u5f53\u524d\u8282\u70b9\u4e3aq</li> <li>\u53ea\u8981\u89e6\u53d1\u8fd9\u4e2a\u6761\u4ef6\uff0c\u6211\u4eec\u5c31\u80fd\u5224\u65ad\u5f53\u524d\u8282\u70b9\u5c31\u662f\u6700\u8fd1\u516c\u5171\u7956\u5148</li> </ul> <p>\u7531\u4e8e\u540e\u5e8f\u904d\u5386\u7684\u6027\u8d28\uff0c\u51fd\u6570\u8fd4\u56de\u7684\u7ed3\u679c\u5e76\u4e0d\u662f\u6700\u8fd1\u516c\u5171\u7956\u5148\uff0c\u800c\u662f\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u7236\u8282\u70b9</p> <p>\u56e0\u6b64\u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u8ba9\u51fd\u6570\u8fd4\u56de\u8282\u70b9\uff0c\u53ea\u9700\u8981\u8fd4\u56debool\u503c\u8868\u793a\u662f\u5426\u5b58\u5728p\u6216q\u5373\u53ef</p> <p>\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4f7f\u7528ans\u53d8\u91cf\u989d\u5916\u5b58\u50a8\u8fd9\u4e2a\u53d8\u91cf</p> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* ans;\n    bool dfs(TreeNode* root, TreeNode* p, TreeNode* q){\n        if(!root)\n            return false;\n        bool leftStat = dfs(root-&gt;left, p ,q);\n        bool rightStat = dfs(root-&gt;right, p ,q);\n        if((leftStat &amp;&amp; rightStat) || ((root == p || root == q) &amp;&amp; (leftStat || rightStat)))\n            ans = root;\n            // \u6700\u540e\u8fd4\u56de\u503c\uff0c\u6211\u4eec\u4e0d\u5173\u5fc3\u6700\u8fd1\u516c\u5171\u7956\u5148\u662f\u54ea\u4e2a\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u5f53\u524d\u5b50\u6811\u662f\u5426\u542b\u6709p\u6216q\n        // \u56e0\u6b64\u53ea\u8981\u5de6\u5b50\u6811\u51fa\u73b0\u4e86p\u6216q / \u5de6\u5b50\u6811\u51fa\u73b0\u4e86p\u6216q / \u5f53\u524d\u8282\u70b9\u4e3ap\u6216q \u5c31\u80fd\u8868\u793a\u5f53\u524d\u5b50\u6811\u542b\u6709p\u6216q\n        return leftStat || rightStat || root == p || root == q;\n    }\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if(!root)\n            return nullptr;\n        dfs(root,p,q);\n        return ans;\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(N)\uff0c\u5176\u4e2d N \u662f\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u6570\u3002\u4e8c\u53c9\u6811\u7684\u6240\u6709\u8282\u70b9\u6709\u4e14\u53ea\u4f1a\u88ab\u8bbf\u95ee\u4e00\u6b21\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(N)\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(N) \uff0c\u5176\u4e2d N \u662f\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u6570\u3002\u9012\u5f52\u8c03\u7528\u7684\u6808\u6df1\u5ea6\u53d6\u51b3\u4e8e\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\uff0c\u4e8c\u53c9\u6811\u6700\u574f\u60c5\u51b5\u4e0b\u4e3a\u4e00\u6761\u94fe\uff0c\u6b64\u65f6\u9ad8\u5ea6\u4e3a N\uff0c\u56e0\u6b64\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(N)\u3002</p>"},{"location":"algorithm/leetcode/#124","title":"124 \u4e8c\u53c9\u6811\u4e2d\u7684\u6700\u5927\u8def\u5f84\u548c","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int ans = INT_MIN;\n    int maxSum(TreeNode* root){\n        if(!root)\n            return 0;\n        // \u5206\u522b\u8ba1\u7b97\u4e24\u4e2a\u5b50\u6811\u7684\u6700\u5927\u8d21\u732e\n        // \u5982\u679c\u4e24\u4e2a\u5b50\u6811\u7684\u6700\u5927\u8d21\u732e\u4e3a\u8d1f\u6570\uff0c\u90a3\u4e48\u5f53\u524d\u5b50\u6811\u52a0\u4e0a\u8fd9\u4e2a\u8d1f\u6570\u53ea\u4f1a\u66f4\u5c0f\n        // \u56e0\u6b64\u9700\u8981\u5c06\u4e24\u4e2a\u5b50\u6811\u7684\u6700\u5927\u8d21\u732e\u4e0e0\u6bd4\u8f83\n        int leftMaxSum = max(0,maxSum(root-&gt;left));\n        int rightMaxSum = max(0,maxSum(root-&gt;right));\n        // \u66f4\u65b0\u672c\u5b50\u6811\u7684\u6700\u5927\u8def\u5f84\u548c\n        ans = max(ans, root-&gt;val + leftMaxSum + rightMaxSum);\n        // \u8fd4\u56de\u7684\u662f\u6700\u5927\u8d21\u732e\uff0c\u800c\u4e0d\u662f\u6700\u5927\u8def\u5f84\u548c\n        // \u533a\u5206\uff1a\u5f53\u672c\u5b50\u6811\u8d21\u732e\u7ed9\u522b\u7684\u8def\u5f84\u65f6\uff0c\u8d21\u732e\u7684\u662f\u672c\u5b50\u6811\u7684\u5de6\u8fb9\u6216\u8005\u53f3\u8fb9\n        return root-&gt;val + max(leftMaxSum, rightMaxSum);\n    }\n    int maxPathSum(TreeNode* root) {\n        if(!root)\n            return 0;\n        // \u4e0d\u5173\u5fc3\u6839\u8282\u70b9\u7684\u6700\u5927\u8d21\u732e\uff0c\u4e0d\u9700\u8981\u5904\u7406\u8fd4\u56de\u503c\n        maxSum(root);\n        // \u53ea\u5173\u6ce8\u6700\u5927\u8def\u5f84\u548c\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_127","title":"\u603b\u7ed3","text":"<p>124 \u4e8c\u53c9\u6811\u4e2d\u7684\u6700\u5927\u8def\u5f84\u548c  \u548c 543 \u4e8c\u53c9\u6811\u7684\u76f4\u5f84 \u6bd4\u8f83\u50cf\uff0c\u90fd\u662f\u4f7f\u7528\u5230\u4e86\u4e8c\u53c9\u6811\u7684\u76f4\u5f84\u8fd9\u4e00\u6982\u5ff5</p> <p>\u4e8c\u53c9\u6811\u7684 \u76f4\u5f84 \u662f\u6307\u6811\u4e2d\u4efb\u610f\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u6700\u957f\u8def\u5f84\u7684 \u957f\u5ea6 \u3002\u8fd9\u6761\u8def\u5f84\u53ef\u80fd\u7ecf\u8fc7\u4e5f\u53ef\u80fd\u4e0d\u7ecf\u8fc7\u6839\u8282\u70b9 <code>root</code></p> <p>437 \u8def\u5f84\u4e4b\u548cIII \u867d\u7136\u4e5f\u4e0d\u8981\u6c42\u4e00\u5b9a\u7ecf\u8fc7\u6839\u8282\u70b9\uff0c\u4f46\u662f\u8981\u6c42\u8def\u5f84\u4e3a\u7236\u8282\u70b9\u5230\u5b50\u8282\u70b9\uff0c\u8fd9\u4e00\u70b9\u4e0e\u76f4\u5f84\u4e0d\u540c</p>"},{"location":"algorithm/leetcode/#_128","title":"\u8d2a\u5fc3","text":""},{"location":"algorithm/leetcode/#121","title":"121 \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a","text":"<p>\u60f3\u8981\u5f97\u5230\u6700\u5927\u5229\u6da6\u5f88\u7b80\u5355\uff1a</p> <p>\u53ea\u9700\u8981\u4f7f\u7528\u6700\u9ad8\u7684\u4ef7\u94b1 - \u6700\u5c0f\u7684\u6210\u672c</p> <p>\u6211\u4eec\u6700\u76f4\u63a5\u7684\u60f3\u6cd5\u5c31\u662f\uff1a</p> <p>\u904d\u5386\u4e00\u904d\u6570\u7ec4\uff0c\u5f97\u5230\u6700\u9ad8\u4ef7\u94b1\u548c\u6700\u5c0f\u6210\u672c\uff0c\u4e24\u8005\u76f8\u51cf\u5373\u53ef</p> <pre><code>class Solution {\npublic:\n    int maxProfit(vector&lt;int&gt;&amp; prices) {\n        int profit = 0;\n        int minCost = INT_MAX, maxCost = 0;\n        for(int i = 0; i &lt; prices.size(); i++){\n            minCost = min(minCost, prices[i]);\n            maxCost = max(maxCost, prices[i]);\n        }\n        profit = maxCost - minCost;\n        return profit &lt;= 0 ? 0 : profit;\n    }\n};\n</code></pre> <p>\u4f46\u662f\u672c\u9898\u6709\u4e2a\u9690\u85cf\u6761\u4ef6\uff1a\u80a1\u7968\u51fa\u552e\u9700\u8981\u5728\u4e70\u5165\u4e4b\u540e\uff0c\u4ee5\u4e0a\u505a\u6cd5\u6ca1\u6709\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u505a\u5230\u5462\uff1f\u5176\u5b9e\u4e5f\u4e0d\u96be\uff0c\u6211\u4eec\u4e0d\u66f4\u65b0\u6700\u9ad8\u4ef7\u94b1\uff0c\u800c\u662f\u76f4\u63a5\u66f4\u65b0\u6700\u5927\u5229\u6da6</p> <p>\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u6700\u5c0f\u6210\u672ccost\u53d6\u5f97\u7684\u7d22\u5f15\u4e00\u5b9a\u6bd4prices[i]\u5f53\u524d\u7684\u7d22\u5f15\u5c0f\uff0c\u56e0\u6b64\u6ee1\u8db3\u9898\u610f</p> <pre><code>class Solution {\npublic:\n    int maxProfit(vector&lt;int&gt;&amp; prices) {\n        int cost = INT_MAX, profit = 0;\n        for(int i = 0;i &lt; prices.size(); i++){\n            cost = min(cost, prices[i]);\n            profit = max(profit, prices[i] - cost);\n        }\n        return profit;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#55","title":"55 \u8df3\u8dc3\u6e38\u620f","text":"<p>\u7ef4\u62a4\u6700\u5927\u53ef\u8fbe\u4f4d\u7f6enextStep</p> <p>\u5982\u679c\u5f53\u524d\u4f4d\u7f6ei &lt;= nextStep\uff0c\u8bf4\u660e\u5f53\u524d\u4f4d\u7f6ei\u53ef\u8fbe\uff0c\u53ef\u8df3\u5230\u5f53\u524d\u4f4d\u7f6ei\u4e0a\uff0c\u66f4\u65b0\u6700\u5927\u53ef\u8fbe\u4f4d\u7f6e</p> <p>\u5982\u679c\u6700\u5927\u53ef\u8fbe\u4f4d\u7f6e\u6bd4n - 1\u5927\uff0c\u8bf4\u660e\u80fd\u591f\u5230\u8fben - 1</p> <pre><code>class Solution {\npublic:\n    bool canJump(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        int nextStep = 0;\n        for(int i = 0; i &lt; n; i++){\n            if(i &lt;= nextStep){\n                nextStep = max(nextStep, i + nums[i]);\n                if(nextStep &gt;= n - 1)\n                    return true;\n            }\n        }\n        return false;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#45-ii","title":"45 \u8df3\u8dc3\u6e38\u620fII","text":""},{"location":"algorithm/leetcode/#_129","title":"\u666e\u901a\u7248","text":"<pre><code>class Solution {\npublic:\n    int jump(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        int start = 0, end = start + 1;\n        int ans = 0;\n        while(end &lt; n){\n            int nextStep;\n            for(int i = start; i &lt; end; i++){\n                nextStep = max(nextStep, i + nums[i]);\n            }\n            ans++;\n            start = end;\n            end = nextStep + 1;\n        }\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_130","title":"\u4f18\u5316\u7248","text":"<p>\u5728\u8df3\u8dc3\u6e38\u620f\u4e2d\uff0c\u6211\u4eec\u7684\u601d\u8def\u662f\uff1a</p> <ul> <li>\u6211\u4eec\u4e0d\u786e\u5b9a\u7ed9\u5b9anums[i] \u9700\u8981\u8d70\u591a\u5c11\u6b65\u624d\u80fd\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u5143\u7d20</li> <li>\u4e3a\u6b64\uff0c\u6211\u4eec\u8fdb\u884c\u4e86\u95ee\u9898\u8f6c\u6362\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u77e5\u9053\u8d70\u591a\u5c11\u6b65\uff0c\u53ea\u9700\u8981\u66f4\u65b0\u6700\u5927\u5230\u8fbe\u8303\u56f4maxPos\uff0c\u5982\u679cmaxPos\u5927\u4e8e\u7b49\u4e8en - 1\uff0c\u8bf4\u660e\u80fd\u591f\u5230\u8fben - 1</li> </ul> <p>\u5728\u8df3\u8dc3\u6e38\u620fII\u4e2d\uff0c\u6211\u4eec\u4ecd\u7136\u80fd\u4eff\u7167\u8fd9\u4e2a\u601d\u8def\uff1a</p> <ul> <li>\u5982\u679c\u5f53\u524dmaxPos\u6ca1\u6709\u8986\u76d6n - 1\uff0c\u90a3\u6211\u4eec\u8df3\u8dc3\u4e00\u6b21</li> <li>\u5982\u679cmaxPos\u5927\u4e8e\u7b49\u4e8en - 1\uff0c\u8bf4\u660e\u80fd\u591f\u5230\u8fben - 1\uff0c\u4e0d\u9700\u8981\u518d\u8df3\u8dc3</li> </ul> <p>\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff1a\u8df3\u8dc3\u6e38\u620fII\u9ed8\u8ba4\u6211\u4eec\u80fd\u591f\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u6c42\u8df3\u8dc3\u6b21\u6570</p> <p>\u5982\u4f55\u80fd\u8ba9\u8df3\u8dc3\u6b21\u6570\u6700\u5927\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8d70\u5230maxPos\u7684\u65f6\u5019\u518d\u8df3\u8dc3\u5373\u53ef -&gt; \u6211\u4eec\u7ef4\u62a4\u4e24\u4e2amaxPos\uff0c\u4e00\u4e2a\u8868\u793a\u5f53\u524d\u80fd\u591f\u5230\u8fbe\u7684\u6700\u5927\u4f4d\u7f6e\uff0c\u53e6\u4e00\u4e2a\u8868\u793a\u4e0b\u4e00\u6b21\u80fd\u591f\u5230\u8fbe\u7684\u6700\u5927\u4f4d\u7f6e</p> <p>\u8fd9\u91cc\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u4e00\u70b9\uff1a\u8df3\u8dc3\u6e38\u620fII\u9ed8\u8ba4\u6211\u4eec\u80fd\u591f\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u9700\u8981\u904d\u5386\u5230 n -1\u4e2a\u5143\u7d20\uff0c\u56e0\u4e3a\u5728\u90a3\u4e4b\u524d\uff0c\u6211\u4eec\u4e00\u5b9a\u80fd\u8ba9maxPos\u8986\u76d6n - 1</p> <p>\u5982\u679c\u5305\u542b\u4e86n - 1\u53cd\u800c\u6709\u53ef\u80fd\u8ba9\u7ed3\u679c\u591a\u52a0\u4e00\u6b21(end \u521a\u597d\u7b49\u4e8en - 1)</p> <pre><code>class Solution {\npublic:\n    int jump(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        int end = 0;\n        int maxNextStep = 0;\n        int step = 0;\n        // \u6ce8\u610f\uff1ai &lt; n - 1 \u800c\u4e0d\u662fi &lt; n\n        for (int i = 0; i &lt; n - 1; i++) {\n            // \u8fd9\u91cc\u4e0d\u9700\u8981if\u5224\u65ad\u4e86\uff0c\u56e0\u4e3a\u9898\u76ee\u8bf4\u4e00\u5b9a\u80fd\u5230\u8fben - 1\n            maxNextStep = max(maxNextStep, i + nums[i]);\n            if (i == end) {\n                ++step;\n                end = maxNextStep;\n            }\n                // \u4e0e\u8df3\u8dc3\u6e38\u620f\u4e0d\u540c\uff0c\u8fd9\u91cc\u4e0d\u9700\u8981maxNextStep &gt;= n - 1\u5224\u65ad\uff0c\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\u4e00\u5b9a\u80fd\u5230\u8fben - 1\n                // \u5982\u679c\u52a0\u4e86\u8fd9\u4e2a\u5224\u65ad\uff0c\u8868\u660e\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u8986\u76d6\u8303\u56f4\u5927\u4e8en - 1\u4e86\n                // \u4f46\u662f\u8fd9\u65f6\u5019i\u8fd8\u6ca1\u8d70\u5230\u66f4\u65b0\u540e\u7684end\uff0c\u6211\u4eec\u9700\u8981\u8ba9i\u8d70\u5230end\u4e4b\u540e\u8ba9step\u52a0\u4e00\n        }\n        return step;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#763","title":"763 \u5212\u5206\u5b57\u6bcd\u533a\u95f4","text":"<p>\u5bf9\u4e8e\u5212\u5206\u533a\u95f4\u95ee\u9898\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u60f3\u5230\u8d2a\u5fc3</p> <p>\u505a\u6cd5\u901a\u5e38\u662f\u6bd4\u8f83\u533a\u95f4\u7684\u672b\u7aef\uff0c\u66f4\u65b0\u533a\u95f4</p> <p>\u5728\u672c\u9898\u4e2d\uff0c\u5206\u6790\u9898\u76ee\uff1a</p> <ul> <li>\u540c\u4e00\u5b57\u6bcd\u6700\u591a\u51fa\u73b0\u5728\u4e00\u4e2a\u7247\u6bb5\u4e2d -&gt; \u5047\u8bbe\u5b57\u6bcd\u51fa\u73b0\u7684\u6700\u540e\u4f4d\u7f6e\\(end_c\\)\u4e3a<code>last[s[i] - 'a']</code>\uff0c\u533a\u95f4\u672b\u7aef\\(end\\)\u5fc5\u987b\u8981\u5927\u4e8e\u7b49\u4e8e\\(end_c\\)\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u4e24\u4e2a\u5b57\u6bcd\u51fa\u73b0\u5728\u4e0d\u540c\u7247\u6bb5</li> <li>\u628a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5212\u5206\u4e3a\u5c3d\u53ef\u80fd\u591a\u7684\u7247\u6bb5 -&gt; \u53ea\u8981\u6ee1\u8db3i\u5230\u8fbe\u533a\u95f4\u672b\u7aef\\(end\\)\uff0c\u8bf4\u660e\u5f53\u524d\u533a\u95f4[start, end]\u6240\u6709\u5b57\u6bcd\u51fa\u73b0\u7684\u6700\u540e\u4f4d\u7f6e\\(end_c\\)\u4e3a<code>last[s[i] - 'a']</code>\uff0c\u90fd\u6ee1\u8db3\\(end_c\\)\u5c0f\u4e8e\u7b49\u4e8e\u533a\u95f4\u672b\u7aef\\(end\\)\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7acb\u5373\u5212\u5206\u533a\u95f4\uff0c\u4ece\u800c\u5f97\u5230\u5c3d\u53ef\u80fd\u591a\u7684\u533a\u95f4</li> </ul> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; partitionLabels(string s) {\n        int n = s.size();\n        int last[26];\n        vector&lt;int&gt; res;\n        // \u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u6700\u540e\u51fa\u73b0\u7684\u4e0b\u6807\n        for(int i = 0; i &lt; n; i++){\n            last[s[i] - 'a'] = i;\n        }\n        // start\u4e3a\u533a\u95f4\u5f00\u59cb\u70b9\uff0cend\u4e3a\u533a\u95f4\u7ed3\u675f\u70b9\n        // end\u4e00\u5b9a\u4e3a\u67d0\u533a\u95f4\u5185\u6240\u6709last[j]\u7684\u6700\u5927\u503c\n        int start = 0, end = 0;\n        for(int i = 0; i &lt; n; i++){\n            end = max(end, last[s[i] - 'a']);\n            // i == end \u8bf4\u660e\u533a\u95f4\u7ec8\u70b9end\u5df2\u786e\u5b9a \u4e14\u5df2\u904d\u5386\u5230\u533a\u95f4\u7ec8\u70b9end\n            if(i == end){\n                res.push_back(end - start + 1);\n                start = end + 1;\n            }\n        }\n        return res;\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u5176\u4e2d n \u662f\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\u9700\u8981\u904d\u5386\u5b57\u7b26\u4e32\u4e24\u6b21\uff0c\u7b2c\u4e00\u6b21\u904d\u5386\u65f6\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u6bcd\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4e0b\u6807\u4f4d\u7f6e\uff0c\u7b2c\u4e8c\u6b21\u904d\u5386\u65f6\u8fdb\u884c\u5b57\u7b26\u4e32\u7684\u5212\u5206\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(\u2223\u03a3\u2223)\uff0c\u5176\u4e2d \u03a3 \u662f\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u96c6\u3002\u8fd9\u9053\u9898\u4e2d\uff0c\u5b57\u7b26\u4e32\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\uff0c\u56e0\u6b64 \u2223\u03a3\u2223=26\u3002</p>"},{"location":"algorithm/leetcode/#21","title":"21 \u5408\u5e76\u4e24\u4e2a\u5347\u5e8f\u94fe\u8868","text":""},{"location":"algorithm/leetcode/#_131","title":"\u89e3\u6cd5\u4e00\uff1a\u9012\u5f52","text":"<pre><code>s1: A-&gt;B-&gt;C-&gt;...\ns2: a-&gt;b-&gt;c-&gt;...\n</code></pre> <p>\u5047\u8bbe\u6709\u94fe\u8868s1\u548cs2\uff0c\u5982\u679cA &lt; a\uff0c\u5219\u672c\u6b21\u6bd4\u8f83\u5f97\u5230\u94fe\u8868\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u4e3aA\uff0c\u5e76\u4e14\u4e0b\u4e00\u6b21B\u548ca\u6bd4\u8f83\uff1b\u5426\u5219\uff0c\u672c\u6b21\u6bd4\u8f83\u5f97\u5230\u94fe\u8868\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u4e3aa\uff0c\u4e0b\u4e00\u6b21A\u548cb\u6bd4\u8f83</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n        if(!list1)\n            return list2;\n        if(!list2)\n            return list1;\n        if(list1-&gt;val &lt; list2-&gt;val){\n            list1-&gt;next = mergeTwoLists(list1-&gt;next, list2);\n            return list1;\n        }\n        else{\n            list2-&gt;next = mergeTwoLists(list1, list2-&gt;next);\n            return list2;\n        }\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n+m)\uff0c\u5176\u4e2d n \u548c m \u5206\u522b\u4e3a\u4e24\u4e2a\u94fe\u8868\u7684\u957f\u5ea6\u3002\u56e0\u4e3a\u6bcf\u6b21\u8c03\u7528\u9012\u5f52\u90fd\u4f1a\u53bb\u6389 l1 \u6216\u8005 l2 \u7684\u5934\u8282\u70b9\uff08\u76f4\u5230\u81f3\u5c11\u6709\u4e00\u4e2a\u94fe\u8868\u4e3a\u7a7a\uff09\uff0c\u51fd\u6570 mergeTwoList \u81f3\u591a\u53ea\u4f1a\u9012\u5f52\u8c03\u7528\u6bcf\u4e2a\u8282\u70b9\u4e00\u6b21\u3002\u56e0\u6b64\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e\u5408\u5e76\u540e\u7684\u94fe\u8868\u957f\u5ea6\uff0c\u5373 O(n+m)\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n+m)\uff0c\u5176\u4e2d n \u548c m \u5206\u522b\u4e3a\u4e24\u4e2a\u94fe\u8868\u7684\u957f\u5ea6\u3002\u9012\u5f52\u8c03\u7528 mergeTwoLists \u51fd\u6570\u65f6\u9700\u8981\u6d88\u8017\u6808\u7a7a\u95f4\uff0c\u6808\u7a7a\u95f4\u7684\u5927\u5c0f\u53d6\u51b3\u4e8e\u9012\u5f52\u8c03\u7528\u7684\u6df1\u5ea6\u3002\u7ed3\u675f\u9012\u5f52\u8c03\u7528\u65f6 mergeTwoLists \u51fd\u6570\u6700\u591a\u8c03\u7528 n+m \u6b21\uff0c\u56e0\u6b64\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(n+m)\u3002</p>"},{"location":"algorithm/leetcode/#_132","title":"\u89e3\u6cd5\u4e8c\uff1a\u8fed\u4ee3","text":"<pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n        ListNode* head = new ListNode();\n        ListNode* tail = head;\n        while (list1 != nullptr &amp;&amp; list2 != nullptr) {\n            if (list1-&gt;val &lt; list2-&gt;val) {\n                tail-&gt;next = list1;\n                list1 = list1-&gt;next;\n            } else {\n                tail-&gt;next = list2;\n                list2 = list2-&gt;next;\n            }\n            tail = tail-&gt;next;\n        }\n        tail-&gt;next = list1 == nullptr ? list2 : list1;\n        return head-&gt;next;\n    }\n};\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n+m)\uff0c\u5176\u4e2d n \u548c m \u5206\u522b\u4e3a\u4e24\u4e2a\u94fe\u8868\u7684\u957f\u5ea6\u3002\u56e0\u4e3a\u6bcf\u6b21\u5faa\u73af\u8fed\u4ee3\u4e2d\uff0cl1 \u548c l2 \u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u4f1a\u88ab\u653e\u8fdb\u5408\u5e76\u94fe\u8868\u4e2d\uff0c \u56e0\u6b64 while \u5faa\u73af\u7684\u6b21\u6570\u4e0d\u4f1a\u8d85\u8fc7\u4e24\u4e2a\u94fe\u8868\u7684\u957f\u5ea6\u4e4b\u548c\u3002\u6240\u6709\u5176\u4ed6\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f\u5e38\u6570\u7ea7\u522b\u7684\uff0c\u56e0\u6b64\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n+m)\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\u3002\u6211\u4eec\u53ea\u9700\u8981\u5e38\u6570\u7684\u7a7a\u95f4\u5b58\u653e\u82e5\u5e72\u53d8\u91cf\u3002</p>"},{"location":"algorithm/leetcode/#22","title":"22 \u62ec\u53f7\u751f\u6210","text":""},{"location":"algorithm/leetcode/#_133","title":"\u9012\u5f52\u7248","text":"<p>\u5982\u679c\u5de6\u62ec\u53f7\u6570\u5c0f\u4e8e\u5bf9\u6570\uff0c\u9009\u62e9\u5de6\u62ec\u53f7</p> <p>\u5982\u679c\u53f3\u62ec\u53f7\u4e2a\u6570\u5c0f\u4e8e\u5de6\u62ec\u53f7\uff0c\u9009\u62e9\u53f3\u62ec\u53f7</p> <pre><code>class Solution {\nprivate:\n    void dfs(vector&lt;string&gt;&amp; ans, string&amp; res, int left, int right, int n) {\n        if (res.size() == n * 2) {\n            ans.push_back(res);\n            return;\n        }\n        if (left &lt; n) {\n            res.push_back('(');\n            dfs(ans, res, left + 1, right, n);\n            res.pop_back();\n        }\n        if (right &lt; left) {\n            res.push_back(')');\n            dfs(ans, res, left, right + 1, n);\n            res.pop_back();\n        }\n    }\n\npublic:\n    vector&lt;string&gt; generateParenthesis(int n) {\n        vector&lt;string&gt; ans;\n        string res;\n        dfs(ans, res, 0, 0, n);\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#23-k","title":"23 \u5408\u5e76K\u4e2a\u5347\u5e8f\u94fe\u8868","text":"<p>https://leetcode.cn/problems/merge-k-sorted-lists/description/</p> <p>\u672c\u9898\u572821 \u5408\u5e76\u4e24\u4e2a\u5347\u5e8f\u94fe\u8868\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u52a0\u96be</p>"},{"location":"algorithm/leetcode/#_134","title":"\u89e3\u6cd5\u4e00\uff1a\u987a\u5e8f\u5408\u5e76","text":"<p>\u6bcf\u76f8\u90bb\u4e24\u4e2a\u5408\u5e76\u5347\u5e8f\u94fe\u8868</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\nprivate:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2){\n        ListNode* head = new ListNode();\n        ListNode* tail = head;\n        while(list1 != nullptr &amp;&amp; list2 != nullptr){\n            if(list1-&gt;val &lt; list2-&gt;val){\n                tail-&gt;next = list1;\n                list1 = list1-&gt;next;\n            }\n            else{\n                tail-&gt;next = list2;\n                list2 = list2-&gt;next;\n            }\n            tail = tail-&gt;next;\n        }\n        tail-&gt;next = list1 == nullptr ? list2 : list1;\n        return head-&gt;next;\n    }\npublic:\n    ListNode* mergeKLists(vector&lt;ListNode*&gt;&amp; lists) {\n        ListNode* ans = nullptr;\n        for(int i = 0; i &lt; lists.size(); i++){\n            ans = mergeTwoLists(ans, lists[i]);\n        }\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_135","title":"\u89e3\u6cd5\u4e8c\uff1a \u5206\u6cbb\u5408\u5e76","text":"<p>\u7c7b\u4f3c\u4e8e\u5feb\u901f\u6392\u5e8f\uff0c\u5206\u7ec4\u5408\u5e76</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\nprivate:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2){\n        ListNode* head = new ListNode();\n        ListNode* tail = head;\n        while(list1 != nullptr &amp;&amp; list2 != nullptr){\n            if(list1-&gt;val &lt; list2-&gt;val){\n                tail-&gt;next = list1;\n                list1 = list1-&gt;next;\n            }\n            else{\n                tail-&gt;next = list2;\n                list2 = list2-&gt;next;\n            }\n            tail = tail-&gt;next;\n        }\n        tail-&gt;next = list1 == nullptr ? list2 : list1;\n        return head-&gt;next;\n    }\n    ListNode* merge(vector&lt;ListNode*&gt;&amp; lists,int l, int r){\n        if(l == r)\n            return lists[l];\n        if(l &gt; r)\n            return nullptr;\n        int mid = (l + r) &gt;&gt; 1;\n        return mergeTwoLists(merge(lists, l, mid), merge(lists, mid + 1, r));\n    }\npublic:\n    ListNode* mergeKLists(vector&lt;ListNode*&gt;&amp; lists) {\n        return merge(lists, 0, lists.size() - 1);\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_136","title":"\u89e3\u6cd5\u4e09\uff1a\u4f18\u5148\u7ea7\u961f\u5217","text":"<pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\nprivate:\n    struct Status{\n        int val;\n        ListNode* ptr;\n\n    };\n    struct cmp{\n        bool operator () (const Status&amp; s1, Status &amp;s2)  const {\n            return s1.val &gt; s2.val;\n        }\n    };\n\n    priority_queue&lt;Status,vector&lt;Status&gt;,cmp&gt; q;\npublic:\n    ListNode* mergeKLists(vector&lt;ListNode*&gt;&amp; lists) {\n        ListNode* head = new ListNode();\n        ListNode* tail = head;\n        for(auto node : lists){\n            if(node)\n                q.push({node-&gt;val, node});\n        }\n        while(!q.empty()){\n            Status s = q.top();\n            q.pop();\n            tail-&gt;next = s.ptr;\n            tail = tail-&gt;next;\n            if(s.ptr-&gt;next)\n                q.push({s.ptr-&gt;next-&gt;val, s.ptr-&gt;next});\n        }\n        return head-&gt;next;\n    }\n};\n</code></pre> <p>\u6216\u5199\u6210\uff1a</p> <p>\u533a\u522b\u53ea\u662f\u5728\u4e8e\u4f18\u5148\u7ea7\u961f\u5217\u81ea\u5b9a\u4e49\u6bd4\u8f83\u7684\u4e0d\u540c\u5199\u6cd5</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n#include &lt;queue&gt;\nclass Solution {\nprivate:\n    struct Status{\n        int val;\n        ListNode* ptr;\n        // \u4e00\u5b9a\u8981\u539f\u5c01\u4e0d\u52a8\u7684\u8fd9\u6837\u5199\n        bool operator &lt; (const Status&amp;s) const{\n            return val &gt; s.val;\n        }\n    };\n    // \u4e00\u5b9a\u8981\u539f\u5c01\u4e0d\u52a8\u7684\u8fd9\u6837\u5199\n    priority_queue&lt;Status&gt; q;\npublic:\n    ListNode* mergeKLists(vector&lt;ListNode*&gt;&amp; lists) {\n        ListNode* head = new ListNode();\n        ListNode* tail = head;\n        for(auto node : lists){\n            if(node)\n                q.push({node-&gt;val, node});\n        }\n        while(!q.empty()){\n            Status s = q.top();\n            q.pop();\n            tail-&gt;next = s.ptr;\n            tail = tail-&gt;next;\n            if(s.ptr-&gt;next)\n                q.push({s.ptr-&gt;next-&gt;val, s.ptr-&gt;next});\n        }\n        return head-&gt;next;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#25-k","title":"25 K\u4e2a\u4e00\u7ec4\u7ffb\u8f6c\u94fe\u8868","text":"<pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\nprivate:\n    ListNode* reverse(ListNode* head){\n        ListNode* prev = nullptr;\n        ListNode* cur = head;\n        while(cur){\n            ListNode* nxt = cur-&gt;next;\n            cur-&gt;next = prev;\n            prev = cur;\n            cur = nxt;\n        }\n        return prev;\n    }\npublic:\n    ListNode* reverseKGroup(ListNode* head, int k) {\n        // \u589e\u52a0\u4e00\u4e2adummyNode\n        ListNode* dummyNode = new ListNode();\n        dummyNode-&gt;next = head;\n        // prev\u6307\u5411\u4e0a\u4e00\u7ec4\u7684\u7b2ck\u4e2a\u8282\u70b9\uff0c\u5373\u672c\u7ec4\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684\u524d\u4e00\u4e2a\u8282\u70b9\n        // \u8d77\u5230dummyNode\u7684\u4f5c\u7528\n        ListNode* prev = dummyNode, *end = prev;\n        // \u5f53end\u6ca1\u6709\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u4e0d\u9700\u8981\u53cd\u8f6c\uff0c\u7ed3\u675f\u5faa\u73af\n        while(end-&gt;next){\n            // end\u6307\u5411\u672c\u7ec4\u7684\u7b2ck\u4e2a\u8282\u70b9\n            // \u5982\u679c\u8fd8\u904d\u5386\u7b2c[1,k]\u4e2a\u8282\u70b9\uff0cend\u4e3a\u7a7a\uff0c\u4e0d\u9700\u8981\u53cd\u8f6c\uff0c\u7ed3\u675f\u5faa\u73af\n            for(int i = 0; i &lt; k &amp;&amp; end; i++)\n                end = end-&gt;next;\n            // \u5982\u679c\u5faa\u73af\u56e0\u4e3a\u67d0\u8282\u70b9\u4e3a\u7a7a\u800c\u505c\u6b62\uff0c\u4e0d\u9700\u8981\u53cd\u8f6c\uff0c\u7ed3\u675f\u5faa\u73af\n            if(end == nullptr)\n                break;\n            // start\u6307\u5411\u672c\u7ec4\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\n            ListNode* start = prev-&gt;next;\n            // nxt\u6307\u5411\u4e0b\u4e00\u7ec4\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\n            ListNode* nxt = end-&gt;next;\n            // \u53cd\u8f6c\u94fe\u8868\uff0c\u7ed3\u679c\u4e3a\u65b0\u7684\u94fe\u8868\u5934\n            // \u53cd\u8f6c\u94fe\u8868\u4e0e\u4e0a\u4e00\u7ec4\u94fe\u8868\u76f8\u8fde\n            end-&gt;next = nullptr;\n            prev-&gt;next = reverse(start);\n            // \u66f4\u65b0\u6307\u9488\n            start-&gt;next = nxt;\n            prev = start;\n            end = prev;\n        }\n        return dummyNode-&gt;next;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_137","title":"\u56de\u6eaf\u95ee\u9898","text":""},{"location":"algorithm/leetcode/#77","title":"77 \u7ec4\u5408","text":"<p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u7ec4\u5408\u95ee\u9898\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u6811\u5f62\u6c42\u89e3\u95ee\u9898\uff0c\u6709\u4ee5\u4e0b\u6027\u8d28</p> <ol> <li>\u53d6\u4e86\u7684\u6570\u4e0d\u80fd\u518d\u53d6</li> <li>\u83b7\u53d6\u5230\u6307\u5b9ak\u4e2a\u6570\u540e\uff0c\u7acb\u5373\u8fd4\u56de\u7ed3\u679c\uff0c\u4e0d\u518d\u7ee7\u7eed\u904d\u5386</li> </ol> <p>\u5bf9\u4e8e\u6027\u8d281\uff0c\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u53c2\u6570startIndex\u786e\u5b9a\u6bcf\u6b21\u904d\u5386\u7684\u8d77\u59cb\u7d22\u5f15\uff0c[1,startIndex)\u4e3a\u5df2\u7ecf\u904d\u5386\u8fc7\u7684\uff0c[startIndex,n]\u4e3a\u672a\u904d\u5386\u7684</p> <p>PS\uff1a</p> <p>\u5bf9\u4e8e\u81ea\u7136\u6570\u7ec4\u5408\u95ee\u9898\uff0c\u7ed9\u5b9a\u7684\u96c6\u5408\uff0c\u6070\u597d\u6ee1\u8db3\uff1a\u7d22\u5f15i\u5bf9\u5e94\u7684\u503ci</p> <p>\u5bf9\u4e8e\u5176\u4ed6\u7ec4\u5408\uff0c\u4f8b\u5982\u7ed9\u5b9a\u96c6\u5408{A,B,C,D}\uff0c\u5219\u4e0d\u6ee1\u8db3\u8be5\u89c4\u5f8b\uff0c\u56e0\u6b64\u662fpath.push_back(\u96c6\u5408\u7684\u503c)</p> <p>\u5bf9\u4e8e\u6027\u8d282\uff0c\u91c7\u7528\u56de\u6eaf\u7684\u65b9\u6cd5</p> <pre><code>if(condition)\n{\n        //procedure\n        return;\n}\n</code></pre> <p></p> <pre><code>class Solution {\nprivate:\n    vector&lt;vector&lt;int&gt;&gt; ans;\n    // path\u6570\u7ec4\u7528\u4e8e\u8bb0\u5f55\u6ee1\u8db3\u7ed3\u679c\u7684\u96c6\u5408\n    vector&lt;int&gt; path;\n    // startIndex\u7528\u4e8e\u8bb0\u5f55\u4e0b\u4e00\u6b21\u5f00\u59cb\u7684\u5143\u7d20\uff0c\u907f\u514d\u91cd\u590d\n    void dfs(int n, int k, int startIndex){\n        if(path.size() == k){\n            ans.push_back(path);\n            return;\n        }\n        for(int i = startIndex; i &lt;= n; i++){\n            path.push_back(i);\n            dfs(n, k, i + 1);\n            path.pop_back();\n        }\n    }\npublic:\n    vector&lt;vector&lt;int&gt;&gt; combine(int n, int k) {\n        dfs(n, k, 1);\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_138","title":"\u4f18\u5316\u7248","text":"<p>\u5bf9\u4e8e\u4e0a\u8ff0\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8fdb\u884c\u526a\u679d\u4f18\u5316</p> <p>\u5982\u4e0b\u56fe\uff0c\u5f53n=4, k=4\uff0c\u6211\u4eec\u53d1\u73b0\u7b2c\u4e00\u4e2a\u6570\u53d61\uff0c\u8fdb\u884c\u5230\u7b2c\u56db\u5c42\u5c31\u80fd\u904d\u5386\u6240\u6709\u53ef\u80fd\uff081,2,3,4\uff09\uff0c\u56e0\u6b64\u7b2c\u4e00\u5c42\u5faa\u73af\u4e0d\u9700\u89812\u53ca\u4e4b\u540e\u7684\u5143\u7d20\uff0c\u7b2c\u4e8c\u5c42\u4e0d\u9700\u89813\u53ca\u4e4b\u540e\u7684\u5143\u7d20\uff0c\u5176\u4f59\u540c\u7406</p> <p>\u5047\u8bbe\u5f53\u524d\u53d6\u7684\u5143\u7d20\u96c6\u5408\u4e3apath\uff0c\u4e2a\u6570\u4e3a<code>path.size()</code>\uff0c\u90a3\u4e48\u6211\u4eec\u8fd8\u9700\u8981\u53d6\u7684\u5143\u7d20\u4e2a\u6570\u4e3a<code>k - path.size()</code></p> <p>\u603b\u5171\u6709n\u4e2a\u5143\u7d20\uff0c\u5047\u8bbe\u8d77\u59cb\u7d22\u5f15startIndex\u53d6\u5230\u6700\u5927\u503c\uff0c\u4f7f\u5f97startIndex\u4e4b\u540e\u7684\u5143\u7d20\u4e2a\u6570\u6070\u597d\u4e3a<code>k - path.size()</code></p> <p>\u90a3\u4e48startIndex\u7684\u503c\u4e3a<code>n - (k - path.size()) + 1</code>\uff0c\u53ef\u4ee5\u901a\u8fc7n - startIndex = k - size() + 1\u8ba1\u7b97</p> <pre><code>// \u526a\u679d\u90e8\u5206\nfor(int i = startIndex; i &lt;= n - (k - path.size()) + 1; i++){\n    path.push_back(i);\n    dfs(n, k, i + 1);\n    path.pop_back();\n}\n</code></pre> <p></p> <pre><code>class Solution {\nprivate:\n    vector&lt;vector&lt;int&gt;&gt; ans;\n    // path\u6570\u7ec4\u7528\u4e8e\u8bb0\u5f55\u6ee1\u8db3\u7ed3\u679c\u7684\u96c6\u5408\n    vector&lt;int&gt; path;\n    // startIndex\u7528\u4e8e\u8bb0\u5f55\u4e0b\u4e00\u6b21\u5f00\u59cb\u7684\u5143\u7d20\uff0c\u907f\u514d\u91cd\u590d\n    void dfs(int n, int k, int startIndex){\n        if(path.size() == k){\n            ans.push_back(path);\n            return;\n        }\n        // \u526a\u679d\u90e8\u5206\n        for(int i = startIndex; i &lt;= n - (k - path.size()) + 1; i++){\n            path.push_back(i);\n            dfs(n, k, i + 1);\n            path.pop_back();\n        }\n    }\npublic:\n    vector&lt;vector&lt;int&gt;&gt; combine(int n, int k) {\n        dfs(n, k, 1);\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_139","title":"\u53e6\u4e00\u601d\u8def","text":"<p>\u6839\u636e\u4e8c\u8fdb\u5236\u7531\u6bcf\u4f4d\u8fdb1\u7684\u601d\u60f3</p> <p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u4ece\u6700\u521d\u9012\u589e\u5e8f\u52171,2,3,4,...,\u5171k\u4e2a\u6570\u5f00\u59cb\u9012\u589e\uff0c\u76f4\u5230\u5230\u8fbe\u6700\u5927\u5e8f\u5217</p> <ul> <li>\u8be5\u9012\u589e\u4e3a\u8ba9\u6700\u9ad8\u4f4d\u4e00\u6b21\u9012\u589e\uff0c\u5176\u4f59\u4f4d\u4e0d\u53d8</li> <li>\u4f46\u662f\u9012\u589e\u6700\u9ad8\u4f4d\u7684\u8fc7\u7a0b\uff0c\u4f1a\u5bfc\u81f4\u524d\u9762\u7684\u4f4d\u53d1\u751f\u6539\u53d8\uff0c\u56e0\u6b64\u6700\u9ad8\u4e24\u4f4d\u6ee1\u8db3\u9012\u589e\u5173\u7cfb\u65f6\uff0c\u8bf4\u660e\u5df2\u7ecf\u6ee1\u8db3\u7ec4\u5408\u5173\u7cfb\uff0c\u5c06\u524d\u9762\u7684\u6570\u7f6e\u4e3a\u521d\u59cb\u5e8f\u5217</li> </ul> <p>\u65b9\u6cd5\u4e3a\uff1a</p> <ul> <li>\u4ece\u5de6\u5f80\u53f3\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u6ee1\u8db3\\(a_j + 1 \\neq a_{j+1}\\)\uff0c\u8bf4\u660e\u5df2\u7ecf\u4e0d\u6ee1\u8db3\u9012\u589e\u4e86\uff0c\u56e0\u6b64\u5c06\\(a_j + 1\\)</li> <li>\u4e3a\u4e86\u4f7f\u7b2c\u4e00\u4e2a\u5e8f\u5217\u80fd\u591f\u6267\u884c\u4e0a\u8ff0\u7b97\u6cd5\uff0c\u5f15\u5165\u54e8\u5175\u8282\u70b9\uff0c\u5728\u7b2ck\u4f4d\u52a0\u5165n + 1\uff0c\u4fdd\u8bc1\u7b2ck - 1\u4f4d\u4e0d\u6ee1\u8db3\\(a_j + 1 \\neq a_{j+1}\\)</li> </ul> <p>\u4f8b\u5982\uff0cn = 4\uff0ck = 2</p> <p>\u6700\u521d\u5e8f\u5217\u4e3a1,2[5] \uff08[5]\u4e3a\u54e8\u5175\u8282\u70b9\uff09</p> <p>\u63a5\u7740\u6211\u4eec\u9700\u8981\u5f97\u52301,3[5] </p> <ul> <li>\u4e3a\u4e86\u5f97\u52301,3[5]\uff0c\u6839\u636e\u7b97\u6cd5\u6211\u4eec\u9700\u8981\u5148\u5f97\u52302,3[5] \uff0c\u5f97\u52302,3[5] \u540e\uff0c\u5c06\u524d\u9762\u7684\u7b2cj\u4f4d\u91cd\u65b0\u7f6e\u4e3a\\(j + 1\\)</li> </ul> <p>\u4ee5\u6b64\u7c7b\u63a8</p> <p>\u4f60\u4f1a\u53d1\u73b0\u8fd9\u79cd\u7b97\u6cd5\u4e0e\u4e8c\u8fdb\u5236\u975e\u5e38\u7c7b\u4f3c\uff0c\u6700\u9ad8\u4f4d\u8fdb\u4f4d\u540e\uff0c\u5269\u4f59\u7684\u4f4d\u5c06\u91cd\u65b0\u7f6e\u4e3a0</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; temp;\n    vector&lt;vector&lt;int&gt;&gt; ans;\n\n    vector&lt;vector&lt;int&gt;&gt; combine(int n, int k) {\n        // \u521d\u59cb\u5316\n        // \u5c06 temp \u4e2d [0, k - 1] \u6bcf\u4e2a\u4f4d\u7f6e i \u8bbe\u7f6e\u4e3a i + 1\uff0c\u5373 [0, k - 1] \u5b58 [1, k]\n        // \u672b\u5c3e\u52a0\u4e00\u4f4d n + 1 \u4f5c\u4e3a\u54e8\u5175\n        for (int i = 1; i &lt;= k; ++i) {\n            temp.push_back(i);\n        }\n        temp.push_back(n + 1);\n\n        int j = 0;\n        while (j &lt; k) {\n            ans.emplace_back(temp.begin(), temp.begin() + k);\n            j = 0;\n            // \u5bfb\u627e\u7b2c\u4e00\u4e2a temp[j] + 1 != temp[j + 1] \u7684\u4f4d\u7f6e t\n            // \u6211\u4eec\u9700\u8981\u628a [0, t - 1] \u533a\u95f4\u5185\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u91cd\u7f6e\u6210 [1, t]\n            while (j &lt; k &amp;&amp; temp[j] + 1 == temp[j + 1]) {\n                temp[j] = j + 1;\n                ++j;\n            }\n            // j \u662f\u7b2c\u4e00\u4e2a temp[j] + 1 != temp[j + 1] \u7684\u4f4d\u7f6e\n            ++temp[j];\n        }\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#39-ii","title":"39 \u7ec4\u5408\u603b\u548cII","text":"<pre><code>class Solution {\nprivate:\n    vector&lt;int&gt; res;\n    vector&lt;vector&lt;int&gt;&gt; ans;\n    void dfs(const vector&lt;int&gt;&amp; candidates, vector&lt;int&gt;&amp; res, int target,\n             int index) {\n        if (index == candidates.size()) {\n            return;\n        }\n        if (target == 0) {\n            ans.push_back(res);\n            return;\n        }\n        // \u4e0d\u9009\u8fd9\u4e2a\u6570\n        dfs(candidates, res, target, index + 1);\n        // \u9009\u8fd9\u4e2a\u6570\n        if (candidates[index] &lt;= target) {\n            res.push_back(candidates[index]);\n            dfs(candidates, res, target - candidates[index], index);\n            res.pop_back();\n        }\n    }\n\npublic:\n    vector&lt;vector&lt;int&gt;&gt; combinationSum(vector&lt;int&gt;&amp; candidates, int target) {\n        dfs(candidates, res, target, 0);\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#216-iii","title":"216 \u7ec4\u5408\u603b\u548cIII","text":"<p>\u572877 \u7ec4\u5408\u57fa\u7840\u4e0a\u52a0\u4e86\u9650\u5236\u6761\u4ef6\uff0c\u4e0d\u4ec5\u9700\u8981k\u4e2a\u5143\u7d20\u7684\u7ec4\u5408\uff0c\u800c\u4e14\u8be5\u7ec4\u5408\u4e4b\u548c\u4e3an</p> <p>\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u52a0\u4e0a\u9650\u5236\u5373\u53ef\uff0c\u5176\u4f59\u4e0e77 \u7ec4\u5408\u505a\u6cd5\u4e00\u81f4</p> <p>\u9650\u5236\u6761\u4ef6\uff1a</p> <p><code>if(path.size() == k &amp;&amp; n == 0)</code></p> <pre><code>class Solution {\nprivate:\n    const int N = 9;\n    vector&lt;vector&lt;int&gt;&gt; ans;\n    vector&lt;int&gt; path;\n    void dfs(int k, int n, int startIndex){\n        // \u6ce8\u610f\u8fd9\u91cc\u9700\u8981\u5224\u65adn == 0\u4ee5\u4fdd\u8bc1k\u4e2a\u5143\u7d20\u4e4b\u548c\u6070\u597d\u4e3an\n        if(path.size() == k &amp;&amp; n == 0){\n            ans.push_back(path);\n            return ;\n        }\n        for(int i = startIndex; i &lt;= N - (k - path.size()) + 1; i++){\n            if(i &lt;= n){\n                path.push_back(i);\n                // \u8bb0\u5f97\u8fd9\u91cc\u8981n - i\uff0c\u8868\u793a\u9009\u62e9\u5143\u7d20i\u540e\uff0c\u5269\u4f59\u7684\u5143\u7d20\u548c\n                dfs(k, n - i, i + 1);\n                path.pop_back();\n            }\n        }\n    }\npublic:\n    vector&lt;vector&lt;int&gt;&gt; combinationSum3(int k, int n) {\n        dfs(k, n, 1);\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#46","title":"46 \u5168\u6392\u5217","text":""},{"location":"algorithm/leetcode/#_140","title":"\u5199\u6cd5\u4e00","text":"<pre><code>class Solution {\nprivate:\n    void dfs(vector&lt;int&gt; &amp;nums, int start, vector&lt;int&gt; &amp;path,vector&lt;vector&lt;int&gt;&gt; &amp;ans){\n        if(path.size() == nums.size())\n            ans.push_back(path);\n        for(int i = start; i &lt; nums.size(); i++){\n            path.push_back(nums[i]);\n            swap(nums[start], nums[i]);\n            dfs(nums, start + 1, path, ans);\n            swap(nums[start], nums[i]);\n            path.pop_back();\n        }\n    }\npublic:\n    vector&lt;vector&lt;int&gt;&gt; permute(vector&lt;int&gt;&amp; nums) {\n        vector&lt;vector&lt;int&gt;&gt; ans;\n        vector&lt;int&gt; path;\n        dfs(nums,0,path,ans);\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_141","title":"\u5199\u6cd5\u4e8c","text":"<pre><code>class Solution {\nprivate:\n    vector&lt;vector&lt;int&gt;&gt; ans;\n    void dfs(vector&lt;int&gt;&amp; nums,int idx){\n        if(idx == nums.size() - 1){\n            ans.push_back(nums);\n            return;\n        } \n        for(int i = idx; i &lt; nums.size(); i++){\n            swap(nums[i], nums[idx]);\n            dfs(nums, idx + 1);\n            swap(nums[i], nums[idx]);\n        }\n    }\npublic:\n    vector&lt;vector&lt;int&gt;&gt; permute(vector&lt;int&gt;&amp; nums) {\n        dfs(nums, 0);\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#17","title":"17 \u7535\u8bdd\u53f7\u7801\u7684\u5b57\u6bcd\u7ec4\u5408","text":"<p>startIndex\u8bb0\u5f55\u8f93\u5165\u5b57\u7b26\u4e32\u904d\u5386\u7684\u4f4d\u7f6e</p> <p>\u901a\u8fc7startIndex\u83b7\u53d6\u5bf9\u5e94\u7535\u8bdd\u7c3f\u5b57\u6bcd\u4e32str</p> <p>\u904d\u5386\u5b57\u6bcd\u4e32str\u5c06\u5176\u52a0\u5165str</p> <pre><code>class Solution {\nprivate:\n    unordered_map&lt;int, string&gt; phoneTable = {\n        {2, \"abc\"}, {3, \"def\"},  {4, \"ghi\"}, {5, \"jkl\"},\n        {6, \"mno\"}, {7, \"pqrs\"}, {8, \"tuv\"}, {9, \"wxyz\"},\n    };\n    vector&lt;string&gt; ans;\n    string path;\n    int k;\n    void dfs(string&amp; digits, string&amp; path, int k, int startIndex) {\n        if (k == 0) {\n            ans.push_back(path);\n            return;\n        }\n        string str = phoneTable[digits[startIndex] - '0'];\n        for (char letter : str) {\n            path.push_back(letter);\n            dfs(digits, path, k - 1, startIndex + 1);\n            path.pop_back();\n        }\n    }\n\npublic:\n    vector&lt;string&gt; letterCombinations(string digits) {\n        if (!digits.empty()) {\n            k = digits.size();\n            dfs(digits, path, k, 0);\n        }\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#78","title":"78 \u5b50\u96c6","text":""},{"location":"algorithm/leetcode/#_142","title":"\u8fed\u4ee3\u6cd5","text":"<p>\u7528\u4e8c\u8fdb\u5236\u8868\u793a\u6bcf\u4e2a\u5e42\u96c6\uff0c\u7b2ci\u4f4d\u4e3a1\u8868\u793a\u9009\u62e9\u7b2ci\u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u603b\u5171\u67092^n - 1\u4e2a\u72b6\u6001</p> <pre><code>class Solution {\nprivate:\n    vector&lt;int&gt; t;\n    vector&lt;vector&lt;int&gt;&gt; ans;\npublic:\n    vector&lt;vector&lt;int&gt;&gt; subsets(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        // \u603b\u5171\u67092^n - 1\u79cd\u72b6\u6001\n        for(int mask = 0; mask &lt; (1 &lt;&lt; n); mask++){\n            // \u6bcf\u4e2a\u72b6\u6001\u5bf9\u5e94\u7684\u5e8f\u5217\u4e0d\u540c\n            t.clear();\n            // \u679a\u4e3e\u6bcf\u4e2a\u5143\u7d20\n            for(int i = 0; i &lt; n; i++){\n                // 1 &lt;&lt; i\u8868\u793a\u7b2ci\u4f4d\u4e3a1\n                // mask &amp; (1 &lt;&lt; i)\u8868\u793amask\u72b6\u6001\u7b2ci\u4f4d\u4e3a1\n                // \u5373\u9009\u62e9\u7b2ci\u4e2a\u5143\u7d20\n                if(mask &amp; (1 &lt;&lt; i)){\n                    t.push_back(nums[i]);\n                }\n            }\n            ans.push_back(t);\n        }\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_143","title":"\u9012\u5f52\u6cd5","text":"<p>\u7528idx\u8bb0\u5f55\u5f53\u524d\u904d\u5386\u5230\u7b2c\u51e0\u4e2a\u5143\u7d20\uff0c\u5206\u7c7b\u8ba8\u8bba\uff1a</p> <ul> <li>\u9009\u62e9\u5f53\u524d\u5143\u7d20\uff0c\u5982\u679c\u9009\u62e9\u5f53\u524d\u5143\u7d20\uff0c\u90a3\u4e48dfs\u4e4b\u540e\u9700\u8981\u56de\u6eaf</li> <li>\u4e0d\u9009\u62e9\u5f53\u524d\u5143\u7d20</li> </ul> <pre><code>class Solution {\nprivate:\n    vector&lt;vector&lt;int&gt;&gt; ans;\n    vector&lt;int&gt; res;\n    void dfs(vector&lt;int&gt;&amp;nums, int idx){\n        if(idx == nums.size()){\n            ans.push_back(res);\n            return;\n        }\n        res.push_back(nums[idx]);\n        dfs(nums, idx + 1);\n        res.pop_back();\n        dfs(nums, idx + 1);\n    }\npublic:\n    vector&lt;vector&lt;int&gt;&gt; subsets(vector&lt;int&gt;&amp; nums) {\n        dfs(nums, 0);\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#79","title":"79 \u5355\u8bcd\u641c\u7d22","text":"<pre><code>class Solution {\nprivate:\n    int rows, cols;\n    int dx[4] = {-1, 0, 1, 0};\n    int dy[4] = {0, 1, 0, -1};\n    bool dfs(vector&lt;vector&lt;char&gt;&gt;&amp; board, const string&amp; word, int x, int y,\n             int idx) {\n        if (board[x][y] != word[idx])\n            return false;\n        if (idx == word.size() - 1)\n            return true;\n        for (int i = 0; i &lt; 4; i++) {\n            int a = x + dx[i];\n            int b = y + dy[i];\n            if (a &gt;= 0 &amp;&amp; a &lt; rows &amp;&amp; b &gt;= 0 &amp;&amp; b &lt; cols) {\n                board[x][y] = '\\0';\n                if (dfs(board, word, a, b, idx + 1))\n                    return true;\n                board[x][y] = word[idx];\n            }\n        }\n        return false;\n    }\n\npublic:\n    bool exist(vector&lt;vector&lt;char&gt;&gt;&amp; board, string word) {\n        rows = board.size();\n        cols = board[0].size();\n        for (int i = 0; i &lt; rows; i++) {\n            for (int j = 0; j &lt; cols; j++) {\n                if (dfs(board, word, i, j, 0))\n                    return true;\n            }\n        }\n        return false;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#84","title":"84 \u67f1\u72b6\u56fe\u6700\u5927\u7684\u77e9\u5f62","text":"<p>https://leetcode.cn/problems/largest-rectangle-in-histogram/description/</p>"},{"location":"algorithm/leetcode/#_144","title":"\u89e3\u6cd5\u4e00\uff1a \u66b4\u529b\u679a\u4e3e","text":"<p>\u679a\u4e3e\u5bbd\uff1a\u679a\u4e3e\u5de6\u8fb9\u754c\uff0c\u518d\u679a\u4e3e\u53f3\u8fb9\u754c</p> <pre><code>class Solution {\npublic:\n    int largestRectangleArea(vector&lt;int&gt;&amp; heights) {\n        int ans = 0;\n        int n = heights.size();\n        for(int i = 0; i &lt; n; i++){\n            int minHeight = heights[i];\n            for(int j = i; j &lt; n; j++){\n                minHeight = min(minHeight, heights[j]);\n                ans = max(ans, (j - i + 1) * minHeight);\n            }\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u679a\u4e3e\u9ad8\uff1a</p> <pre><code>class Solution {\npublic:\n    int largestRectangleArea(vector&lt;int&gt;&amp; heights) {\n        int ans = 0;\n        int n = heights.size();\n        // \u679a\u4e3e\u6bcf\u6839\u67f1\u5b50\u7684\u9ad8\u5ea6\n        for(int mid = 0; mid &lt; n; mid++){\n            int height = heights[mid];\n            int left = mid, right = mid;\n            // \u5982\u679c\u5de6\u53f3\u67f1\u5b50\u6bd4\u5f53\u524d\u679a\u4e3e\u7684\u67f1\u5b50\u9ad8\uff0c\u90a3\u4e48\u77e9\u5f62\u7684\u9ad8\u5ea6\u4ecd\u7136\u4e3a\u5f53\u524d\u679a\u4e3e\u67f1\u5b50\u7684\u9ad8\u5ea6heights[mid]\n            while(left - 1 &gt;= 0 &amp;&amp; heights[left - 1] &gt;= height) --left;\n            while(right + 1 &lt; n &amp;&amp; heights[right + 1] &gt;= height) ++right;\n            // \u6ce8\u610f\u8fd9\u91ccleft\u548cright\u90fd\u6307\u5411\u6700\u540e\u4e00\u4e2a\u6bd4\u679a\u4e3e\u67f1\u5b50\u9ad8\u5ea6\u5927\u7684\u67f1\u5b50\n            // \u4e0e\u5355\u8c03\u6808\u505a\u6cd5\u4e0d\u540c\uff0c\u8fd9\u91cc\u4e3aright - left + 1\uff08\u5355\u8c03\u6808\u662fright - left - 1\uff09\n            ans = max(ans, (right - left + 1) * height);\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e24\u79cd\u66b4\u529b\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a$ O(N^2)$\uff0c\u4f1a\u8d85\u51fa\u65f6\u95f4\u9650\u5236\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u8fdb\u884c\u4f18\u5316\u3002\u8003\u8651\u5230\u679a\u4e3e\u300c\u5bbd\u300d\u7684\u65b9\u6cd5\u4f7f\u7528\u4e86\u4e24\u91cd\u5faa\u73af\uff0c\u672c\u8eab\u5c31\u5df2\u7ecf\u9700\u8981 \\(O(N^2)\\)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4e0d\u5bb9\u6613\u4f18\u5316\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f18\u5316\u53ea\u4f7f\u7528\u4e86\u4e00\u91cd\u5faa\u73af\u7684\u679a\u4e3e\u300c\u9ad8\u300d\u7684\u65b9\u6cd5\u3002</p>"},{"location":"algorithm/leetcode/#_145","title":"\u89e3\u6cd5\u4e8c\uff1a \u5355\u8c03\u6808","text":""},{"location":"algorithm/leetcode/#_146","title":"\u6734\u7d20\u7248","text":"<p>\u5355\u8c03\u6808\u5e38\u7528\u4e8e\u67e5\u627e\u6bd4\u5b83\u5927\u7684\u7b2c\u4e00\u4e2a\u6570 or \u6bd4\u5b83\u5c0f\u7684\u7b2c\u4e00\u4e2a\u6570</p> <p>\u5355\u8c03\u9012\u589e\u6808\uff1a\u6808\u5185\u79bb\u6808\u9876\u8d8a\u8fd1\uff08\u4e0b\u6807\u8d8a\u5927\uff09\uff0c\u6808\u5143\u7d20\u8d8a\u5927\uff1b\u6808\u9876\u5143\u7d20\u4e3a\u6808\u5185\u6700\u5927</p> <ul> <li>\u5f53\u6709\u65b0\u5143\u7d20\u8fdb\u5165\uff0c\u5982\u679c\u65b0\u5143\u7d20\u6bd4\u6808\u9876\u5143\u7d20\u5927\uff0c\u76f4\u63a5\u5165\u6808\u3002</li> <li>\u5f53\u6709\u65b0\u5143\u7d20\u8fdb\u5165\uff0c\u5982\u679c\u65b0\u5143\u7d20\u6bd4\u6808\u9876\u5143\u7d20\u5c0f\uff0c\u6808\u5f39\u51fa\uff0c\u76f4\u5230\u6ee1\u8db3\u65b0\u5143\u7d20\u6bd4\u6808\u9876\u5143\u7d20\u5927\uff0c\u518d\u5c06\u65b0\u5143\u7d20\u5165\u6808\u3002</li> </ul> <p>\u7531\u6b64\u53ef\u89c1\uff0c\u65b0\u5143\u7d20C\u4f7f\u6808\u9876\u5143\u7d20A\u5f39\u51fa\u540e\uff0c\u4e0b\u4e00\u4e2a\u6808\u9876\u5143\u7d20B\u662fA\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u6bd4B\u5c0f\u7684\u5143\u7d20\uff0c\u65b0\u5143\u7d20C\u662fA\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u6bd4C\u5c0f\u7684\u5143\u7d20</p> <p>\u7531\u66b4\u529b\u679a\u4e3e\u9ad8\u7684\u89e3\u6cd5\u53ef\u77e5\u9053\uff0c\u6211\u4eec\u679a\u4e3e\u9ad8\u5ea6\u540e\u9700\u8981\u5206\u522b\u5f80\u4e24\u8fb9\u5bfb\u627e\u6bd4\u5b83\u77ee\u7684\u7b2c\u4e00\u4e2a\u67f1\u5b50\uff08\u6570\uff09\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u5355\u8c03\u6808</p> <pre><code>class Solution {\npublic:\n    int largestRectangleArea(vector&lt;int&gt;&amp; heights) {\n        int ans = 0;\n        int n = heights.size();\n        vector&lt;int&gt; left(n), right(n);\n        stack&lt;int&gt; stk;\n        for(int i = 0; i &lt; n; i++){\n            while(!stk.empty() &amp;&amp; heights[stk.top()] &gt;= heights[i]) stk.pop();\n            left[i] = (stk.empty() ? -1 : stk.top());\n            stk.push(i);\n        }\n        stk = stack&lt;int&gt;();\n        for(int i = n - 1; i &gt;= 0; i--){\n            while(!stk.empty() &amp;&amp; heights[stk.top()] &gt;= heights[i]) stk.pop();\n            right[i] = (stk.empty() ? n : stk.top());\n            stk.push(i);\n        }\n        for(int i = 0; i &lt; n; i++){\n            // right \u548c left \u90fd\u6307\u5411\u7b2c\u4e00\u4e2a\u6bd4\u679a\u4e3e\u67f1\u5b50\u5c0f\u7684\u67f1\u5b50\uff0c\u56e0\u6b64\u4e0d\u5305\u542bleft \u548c right\n            // \u5bbd\u5ea6\u8ba1\u7b97\u4e3a\uff1a (right - 1) - (left + 1) + 1 = right - left - 1\n            ans = max(ans, (right[i] - left[i] - 1) * heights[i]);\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(N)\u3002</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(N)\u3002</li> </ul> <p>\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u53ea\u4f1a\u5165\u6808\u4e00\u6b21\uff08\u5728\u679a\u4e3e\u5230\u5b83\u65f6\uff09\uff0c\u5e76\u4e14\u6700\u591a\u51fa\u6808\u4e00\u6b21\u3002</p> <p>\u56e0\u6b64\u5f53\u6211\u4eec\u4ece\u5de6\u5411\u53f3/\u603b\u53f3\u5411\u5de6\u904d\u5386\u6570\u7ec4\u65f6\uff0c\u5bf9\u6808\u7684\u64cd\u4f5c\u7684\u6b21\u6570\u5c31\u4e3a O(N)\u3002\u6240\u4ee5\u5355\u8c03\u6808\u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(N)\u3002</p>"},{"location":"algorithm/leetcode/#_147","title":"\u4f18\u5316\u7248","text":"<p>\u5bf9\u4e0a\u8ff0\u8fdb\u884c\u4f18\u5316</p> <p>\u65b0\u5143\u7d20C\u4f7f\u6808\u9876\u5143\u7d20A\u5f39\u51fa\u540e\uff0c\u4e0b\u4e00\u4e2a\u6808\u9876\u5143\u7d20B\u662fA\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u6bd4B\u5c0f\u7684\u5143\u7d20\uff0c\u65b0\u5143\u7d20C\u662fA\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u6bd4C\u5c0f\u7684\u5143\u7d20</p> <pre><code>class Solution {\npublic:\n    int largestRectangleArea(vector&lt;int&gt;&amp; heights) {\n        int len = heights.size() + 2;\n        vector&lt;int&gt; height(len);\n        // \u5728heights\u6570\u7ec4\u57fa\u7840\u4e0a\u5728\u5934\u5c3e\u52a0\u4e0a0\u5143\u7d20\n        // \u8fd9\u662f\u56e0\u4e3a\u4ee5heights[0]\uff08heights[heights.size() - 1]\uff09\u4f5c\u4e3a\u67f1\u5b50\u9ad8\u5ea6\u65f6\uff0c\u7f3a\u5c11\u5de6\u8fb9\u754c\uff08\u53f3\u8fb9\u754c\uff09\n        // \u4e3a\u5176\u8865\u4e0a\u5de6\u53f3\u8fb9\u754c\uff0c\u4f7f\u5176\u80fd\u591f\u8ba1\u7b97heights[0]\uff08heights[heights.size() - 1]\uff09\u4f5c\u4e3a\u67f1\u5b50\u9ad8\u5ea6\u65f6\u7684\u9762\u79ef\n        height[0] = 0;\n        height[len - 1] = 0;\n        for(int i = 1; i &lt; len - 1; i++)\n            height[i] = heights[i - 1];\n        stack&lt;int&gt; stk;\n        int ans = 0;\n        for(int i = 0; i &lt; len; i++){\n            while(!stk.empty() &amp;&amp; height[i] &lt; height[stk.top()]){\n                // \u65b0\u5143\u7d20i\u8ba9\u6808\u5f39\u51fa\uff0c\u6808\u9876\u5143\u7d20\u4e3astk.top()\n                int idx = stk.top();\n                stk.pop();\n                // \u8fd9\u91cc\u7684stk.top()\u4e3a\u5f39\u51fa\u540e\u7684\u4e0b\u4e00\u4e2a\u6808\u9876\u5143\u7d20\n                int w = i - stk.top() - 1;\n                // \u9ad8\u5ea6\u4e3a\u6700\u521d\u7684\u6808\u9876\u5143\u7d20\n                ans = max(ans, w * height[idx]);\n            }\n            // \u6ca1\u6709\u5f39\u51fa\u65f6\u4e0d\u9700\u8981\u8ba1\u7b97\u9762\u79ef\n            stk.push(i);\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(N)\u3002</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(N)\u3002</li> </ul>"},{"location":"algorithm/leetcode/#85","title":"85 \u6700\u5927\u77e9\u5f62","text":"<p>https://leetcode.cn/problems/maximal-rectangle/</p> <p>\u82e5<code>matrix[i][j] == \u20181\u2019</code>\uff0c\u90a3\u4e48\u4ee5\u8be5\u70b9\u4e3a\u77e9\u5f62\u7684\u53f3\u4e0b\u89d2</p> <ul> <li>\u8bb0<code>left[i][j]</code>\u4e3a\u7b2ci\u884c\u7b2cj\u5217\u5143\u7d20\u5de6\u8fb9\u8fde\u7eed1\u7684\u4e2a\u6570\uff08\u5305\u62ec\u7b2ci\u884c\u7b2cj\u5217\uff09</li> <li>\u90a3\u4e48\u77e9\u5f62\u53ef\u4ee5\u8f6c\u6362\u4e3a\u82e5\u5e72\u4e2a\u67f1\u5f62\uff0c<code>left[i][j]</code>\u4e3a\u67f1\u5f62\u7684\u9ad8\u5ea6\uff0c\u9898\u76ee\u5c31\u53d8\u6210\u4e8684 \u6c42\u67f1\u72b6\u56fe\u6700\u5927\u7684\u67f1\u5f62</li> <li>\u5bbd\u5ea6\u4e3ak - i + 1\uff0ck\u4e3a\u7b2ci\u884c\u524d\u7684\u7b2ck\u884c</li> </ul> <p>\u6362\u4e00\u4e0b\u5750\u6807\u8f74\uff0c\u5bbd\u5ea6\u5c31\u662f\u4ee3\u7801\u4e2d\u7684\u9ad8\u5ea6\uff0c\u9ad8\u5ea6\u5c31\u662f\u4ee3\u7801\u4e2d\u7684\u5bbd\u5ea6</p>"},{"location":"algorithm/leetcode/#_148","title":"\u89e3\u6cd5\u4e00\uff1a\u66b4\u529b\u679a\u4e3e\u70b9","text":"<pre><code>class Solution {\npublic:\n    int maximalRectangle(vector&lt;vector&lt;char&gt;&gt;&amp; matrix) {\n        int n = matrix.size();\n        int m = matrix[0].size();\n        vector&lt;vector&lt;int&gt;&gt; left(n,vector&lt;int&gt;(m, 0));\n        for (int i = 0; i &lt; n; i++) {\n            for (int j = 0; j &lt; m; j++) {\n                if (matrix[i][j] == '1') {\n                    left[i][j] = (j == 0 ? 0: left[i][j - 1]) + 1;\n                }\n            }\n        }\n        int ans = 0;\n        for(int i = 0; i &lt; n; i++){\n            for(int j = 0; j &lt; m; j++){\n                if(matrix[i][j] == '1'){\n                    int w = left[i][j];\n                    // \u8fd9\u91ccarea\u521d\u59cb\u5316\u4e3aw, \u56e0\u4e3a\u5047\u8bbematrix[k][j]\u90fd\u4e3a'0', \u5bbd\u5ea6\u81f3\u5c11\u4e3a1\n                    int area = w;\n                    for(int k = i - 1; k &gt;= 0; k--){\n                        w = min(w, left[k][j]);\n                        area = max(area, (i - k + 1) * w);\n                    }\n                    ans = max(ans, area);\n                }\n            }\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(m^2n)\\)\uff0c\u5176\u4e2d m \u548c n \u5206\u522b\u662f\u77e9\u9635\u7684\u884c\u6570\u548c\u5217\u6570\u3002\u8ba1\u7b97 left \u77e9\u9635\u9700\u8981 O(mn) \u7684\u65f6\u95f4\u3002\u968f\u540e\u5bf9\u4e8e\u77e9\u9635\u7684\u6bcf\u4e2a\u70b9\uff0c\u9700\u8981 O(m) \u7684\u65f6\u95f4\u679a\u4e3e\u9ad8\u5ea6\u3002\u6545\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$ O(mn)+O(mn)\u22c5O(m)=O(m^2n)$\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(mn)\\)\uff0c\u5176\u4e2d m \u548c n \u5206\u522b\u662f\u77e9\u9635\u7684\u884c\u6570\u548c\u5217\u6570\u3002\u6211\u4eec\u5206\u914d\u4e86\u4e00\u4e2a\u4e0e\u7ed9\u5b9a\u77e9\u9635\u7b49\u5927\u7684\u6570\u7ec4\uff0c\u7528\u4e8e\u5b58\u50a8\u6bcf\u4e2a\u5143\u7d20\u7684\u5de6\u8fb9\u8fde\u7eed 1 \u7684\u6570\u91cf\u3002</p>"},{"location":"algorithm/leetcode/#_149","title":"\u89e3\u6cd5\u4e8c\uff1a\u5355\u8c03\u6808","text":"<p>\u540c84 \u4e00\u6837\uff0c\u9700\u8981\u6c42\u51fa\u67f1\u5f62\u56fe\u6700\u5c0f\u7684\u9ad8\u5ea6\uff08\u4ee3\u7801\u4e2d\u4e3a\u5bbd\u5ea6\uff09</p> <p>\u4e0e84\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u672c\u9898\u53ef\u4ee5\u62c6\u5206\u4e3am\u5217 \u67f1\u5f62\u56fe\uff0c\u5c0684\u9898\u7684\u4ee3\u7801\u5904\u7406m\u6b21\u5373\u53ef</p> <pre><code>class Solution {\npublic:\n    int maximalRectangle(vector&lt;vector&lt;char&gt;&gt;&amp; matrix) {\n        int n = matrix.size();\n        int m = matrix[0].size();\n        vector&lt;vector&lt;int&gt;&gt; left(n, vector&lt;int&gt;(m, 0));\n        for(int i = 0; i &lt; n; i++){\n            for(int j = 0; j &lt; m; j++){\n                if(matrix[i][j] == '1')\n                    left[i][j] = (j == 0 ? 0 : left[i][j - 1]) + 1;\n            }\n        }\n        int ans = 0;\n        int len = n + 2;\n        // \u679a\u4e3e\u6bcf\u4e00\u5217\n        for(int j = 0; j &lt; m; j++){\n            stack&lt;int&gt; stk;\n            int area = 0;        \n            vector&lt;int&gt; ll(len);\n            ll[0] = 0;\n            ll[len - 1] = 0;\n            // \u521d\u59cb\u5316\u522b\u5f04\u53cd\u4e86\uff0c\u662fleft[k - 1][j]\uff0c\u4e0d\u662fleft[j][k - 1]\n            for(int k = 1; k &lt; len - 1; k++)\n                ll[k] = left[k - 1][j];\n            for(int i = 0; i &lt; len; i++){\n                while(!stk.empty() &amp;&amp; ll[i] &lt; ll[stk.top()]){\n                    int idx = stk.top();\n                    stk.pop();\n                    int w = i - stk.top() - 1;\n                    area = max(area, w * ll[idx]);\n                }\n                stk.push(i);\n            }\n            ans = max(ans, area);\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(mn)\uff0c\u5176\u4e2d m \u548c n \u5206\u522b\u662f\u77e9\u9635\u7684\u884c\u6570\u548c\u5217\u6570\u3002\u8ba1\u7b97 left \u77e9\u9635\u9700\u8981 O(mn) \u7684\u65f6\u95f4\uff1b\u5bf9\u6bcf\u4e00\u5217\u5e94\u7528\u67f1\u72b6\u56fe\u7b97\u6cd5\u9700\u8981 O(m) \u7684\u65f6\u95f4\uff0c\u4e00\u5171\u9700\u8981 O(mn) \u7684\u65f6\u95f4\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(mn)\uff0c\u5176\u4e2d m \u548c n \u5206\u522b\u662f\u77e9\u9635\u7684\u884c\u6570\u548c\u5217\u6570\u3002\u6211\u4eec\u5206\u914d\u4e86\u4e00\u4e2a\u4e0e\u7ed9\u5b9a\u77e9\u9635\u7b49\u5927\u7684\u6570\u7ec4\uff0c\u7528\u4e8e\u5b58\u50a8\u6bcf\u4e2a\u5143\u7d20\u7684\u5de6\u8fb9\u8fde\u7eed 1 \u7684\u6570\u91cf\u3002</p>"},{"location":"algorithm/leetcode/#112","title":"112 \u8def\u5f84\u603b\u548c","text":"<p>https://leetcode.cn/problems/path-sum/description/</p>"},{"location":"algorithm/leetcode/#_150","title":"\u505a\u6cd5\uff1a\u9012\u5f52","text":"<p>\u672c\u505a\u6cd5\u4e2d\u7684targetSum\u4e3a\u5254\u9664\u6389\u5f53\u524d\u8282\u70b9\u5269\u4f59\u7684targetSum\uff0c\u5373\u5de6/\u53f3\u8282\u70b9\u5230\u8fbe\u5b50\u8282\u70b9\u9700\u8981\u8d70\u7684\u8def\u5f84\u548c</p>"},{"location":"algorithm/leetcode/#_151","title":"\u601d\u8def\u7248","text":"<p>\u8be5\u7248\u672c\u6ca1\u6709\u600e\u4e48\u7b80\u5316\uff0c\u7740\u91cd\u4e8e\u8be6\u7ec6\u7684\u601d\u8def</p> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    bool dfs(TreeNode* root, int targetSum){\n        // \u5224\u65ad\u662f\u5426\u5b58\u5728\u5de6\u8282\u70b9\n        if(root-&gt;left){\n            // \u5982\u679c\u5de6\u8282\u70b9\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u8def\u5f84\uff0c\u90a3\u4e48\u5f53\u524d\u8282\u70b9\u4e5f\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u8def\u5f84\n            if(dfs(root-&gt;left, targetSum - root-&gt;left-&gt;val))\n                return true;\n        }\n        // \u53f3\u8282\u70b9\u540c\u7406\n        if(root-&gt;right){\n            if(dfs(root-&gt;right, targetSum - root-&gt;right-&gt;val))\n                return true;\n        }\n        // \u5982\u679c\u5f53\u524d\u8282\u70b9\u4e3a\u53f6\u5b50\u8282\u70b9\n        if(!root-&gt;left &amp;&amp; !root-&gt;right){\n            if(targetSum == 0)\n                return true;\n            else \n                return false;\n        }\n        return false;       \n    }\npublic:\n    bool hasPathSum(TreeNode* root, int targetSum) {\n        // \u5982\u679c\u6839\u8282\u70b9\u6ca1\u7a7a\uff0c\u4e0d\u5b58\u5728\u9898\u89e3\n        if(!root)\n            return false;\n        return dfs(root, targetSum - root-&gt;val);\n    }\n};\n</code></pre> <p>\u6216\u5199\u6210</p> <pre><code>class Solution {\nprivate:\n    bool traversal(TreeNode* cur, int count) {\n        if (!cur-&gt;left &amp;&amp; !cur-&gt;right &amp;&amp; count == 0) return true; // \u9047\u5230\u53f6\u5b50\u8282\u70b9\uff0c\u5e76\u4e14\u8ba1\u6570\u4e3a0\n        if (!cur-&gt;left &amp;&amp; !cur-&gt;right) return false; // \u9047\u5230\u53f6\u5b50\u8282\u70b9\u76f4\u63a5\u8fd4\u56de\n\n        if (cur-&gt;left) { // \u5de6\n            count -= cur-&gt;left-&gt;val; // \u9012\u5f52\uff0c\u5904\u7406\u8282\u70b9;\n            if (traversal(cur-&gt;left, count)) return true;\n            count += cur-&gt;left-&gt;val; // \u56de\u6eaf\uff0c\u64a4\u9500\u5904\u7406\u7ed3\u679c\n        }\n        if (cur-&gt;right) { // \u53f3\n            count -= cur-&gt;right-&gt;val; // \u9012\u5f52\uff0c\u5904\u7406\u8282\u70b9;\n            if (traversal(cur-&gt;right, count)) return true;\n            count += cur-&gt;right-&gt;val; // \u56de\u6eaf\uff0c\u64a4\u9500\u5904\u7406\u7ed3\u679c\n        }\n        return false;\n    }\n\npublic:\n    bool hasPathSum(TreeNode* root, int sum) {\n        if (root == NULL) return false;\n        return traversal(root, sum - root-&gt;val);\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_152","title":"\u7b80\u5316\u7248","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasPathSum(TreeNode* root, int targetSum) {\n        if(root == NULL) return false;\n        if(!root-&gt;left &amp;&amp; !root-&gt;right &amp;&amp; targetSum == root-&gt;val)   return true;\n        return hasPathSum(root-&gt;left, targetSum - root-&gt;val) || hasPathSum(root-&gt;right, targetSum - root-&gt;val);\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#200","title":"200 \u5c9b\u5c7f\u6570\u91cf","text":"<p>\u9898\u89e3\u4e2d\u8fd9\u91cc\u4fee\u6539\u4e86\u539f\u6570\u7ec4\uff0c\u5927\u5bb6\u5982\u679c\u9762\u8bd5\u7684\u65f6\u5019\uff0c\u8981\u95ee\u6e05\u695a\u9762\u8bd5\u5b98\u662f\u5426\u80fd\u4fee\u6539\u539f\u6570\u7ec4\uff0c\u4e0d\u80fd\u7684\u8bdd\u5c31\u5f97\u52a0\u5165\u6807\u8bb0\u6570\u7ec4\uff0c\u4e0d\u8981\u4e00\u7ed9\u9898\u5c31\u76f4\u63a5\u4e0a\u624b</p>"},{"location":"algorithm/leetcode/#dfs","title":"\u89e3\u6cd5\u4e00\uff1a dfs","text":"<p>\u6211\u7684\u89e3\u6cd5</p> <pre><code>class Solution {\nprivate:\n    int dx[4] = {-1, 0, 1, 0};\n    int dy[4] = {0, 1, 0, -1};\n    void dfs(vector&lt;vector&lt;char&gt;&gt;&amp; grid, vector&lt;vector&lt;bool&gt;&gt;&amp; isVisited, int x,\n             int y) {\n        int n = grid.size();\n        int m = grid[0].size();\n        for (int i = 0; i &lt; 4; i++) {\n            int a = x + dx[i];\n            int b = y + dy[i];\n            if (a &gt;= 0 &amp;&amp; a &lt; n &amp;&amp; b &gt;= 0 &amp;&amp; b &lt; m &amp;&amp; grid[a][b] == '1' &amp;&amp;\n                !isVisited[a][b]) {\n                isVisited[a][b] = true;\n                dfs(grid, isVisited, a, b);\n            }\n        }\n    }\n\npublic:\n    int numIslands(vector&lt;vector&lt;char&gt;&gt;&amp; grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        vector&lt;vector&lt;bool&gt;&gt; isVisited(n, vector&lt;bool&gt;(m, false));\n        int ans = 0;\n        for (int i = 0; i &lt; n; i++) {\n            for (int j = 0; j &lt; m; j++) {\n                if (grid[i][j] == '1' &amp;&amp; !isVisited[i][j]) {\n                    ans++;\n                    isVisited[i][j] = true;\n                    dfs(grid, isVisited, i, j);\n                }\n            }\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(MN)\uff0c\u5176\u4e2d M \u548c N \u5206\u522b\u4e3a\u884c\u6570\u548c\u5217\u6570\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(MN)\uff0c\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u6574\u4e2a\u7f51\u683c\u5747\u4e3a\u9646\u5730\uff0c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u6df1\u5ea6\u8fbe\u5230 MN\u3002</p>"},{"location":"algorithm/leetcode/#bfs","title":"\u89e3\u6cd5\u4e8c\uff1a bfs","text":"<p>\u6211\u7684\u89e3\u6cd5</p> <p>\u4e0edfs\u7c7b\u4f3c</p> <pre><code>class Solution {\nprivate:\n    typedef pair&lt;int,int&gt; PII;\n    int dx[4] = {-1, 0, 1, 0};\n    int dy[4] = {0, 1, 0, -1};\n    void bfs(vector&lt;vector&lt;char&gt;&gt;&amp; grid, vector&lt;vector&lt;bool&gt;&gt;&amp; isVisited, int x, int y){\n        int n = grid.size();\n        int m = grid[0].size();\n        queue&lt;PII&gt; q;\n        q.push({x, y});\n        while(!q.empty()){\n            auto t = q.front();\n            q.pop();\n            for(int i = 0; i &lt; 4; i++){\n                int a = t.first + dx[i];\n                int b = t.second + dy[i];\n                if(a &gt;= 0 &amp;&amp; a &lt; n &amp;&amp; b &gt;=0 &amp;&amp; b &lt; m &amp;&amp; grid[a][b] == '1' &amp;&amp; !isVisited[a][b]){\n                    isVisited[a][b] = true;\n                    q.push({a, b});\n                }\n            }\n        }\n    }\npublic:\n    int numIslands(vector&lt;vector&lt;char&gt;&gt;&amp; grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        vector&lt;vector&lt;bool&gt;&gt; isVisited(n, vector&lt;bool&gt;(m, false));\n        int ans = 0;\n        for(int i = 0; i &lt; n; i++){\n            for(int j = 0; j &lt; m; j++){\n                if(grid[i][j] == '1' &amp;&amp; !isVisited[i][j]){\n                    ans++;\n                    bfs(grid, isVisited, i, j);\n                }\n            }\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(MN)\uff0c\u5176\u4e2d M \u548c N \u5206\u522b\u4e3a\u884c\u6570\u548c\u5217\u6570\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(min(M,N))\uff0c\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u6574\u4e2a\u7f51\u683c\u5747\u4e3a\u9646\u5730\uff0c\u961f\u5217\u7684\u5927\u5c0f\u53ef\u4ee5\u8fbe\u5230 min(M,N)\u3002</p>"},{"location":"algorithm/leetcode/#_153","title":"\u89e3\u6cd5\u4e09\uff1a \u5e76\u67e5\u96c6","text":"<pre><code>class Solution {\nprivate:\n    vector&lt;int&gt; p;\n    vector&lt;bool&gt; isVisited;\n    int res;\n    int dx[4] = {-1, 0, 1, 0};\n    int dy[4] = {0, 1, 0, -1};\n    int Find(int x) {\n        if (p[x] != x)\n            p[x] = Find(p[x]);\n        return p[x];\n    }\n    void Union(int x, int y) {\n        // \u6bcf\u6b21\u5408\u5e76\u90fd\u8981res\u51cf\u4e00\uff0c\u56e0\u6b64\u5982\u679c\u5408\u5e76\u8fc7\u76f4\u63a5\u8df3\u8fc7\uff0c\u4ee5\u514dres\u591a\u51cf\n        if (Find(x) == Find(y))\n            return;\n        p[Find(x)] = Find(y);\n        res--;\n    }\n\npublic:\n    int numIslands(vector&lt;vector&lt;char&gt;&gt;&amp; grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        p.resize(n * m);\n        isVisited.resize(n * m);\n        res = 0;\n        for (int i = 0; i &lt; n; i++) {\n            for (int j = 0; j &lt; m; j++) {\n                int idx = i * m + j;\n                if (grid[i][j] == '1') {\n                    p[idx] = idx;\n                    res++;\n                }\n            }\n        }\n        for (int i = 0; i &lt; n; i++) {\n            for (int j = 0; j &lt; m; j++) {\n                int idx = i * m + j;\n                if (grid[i][j] == '1') {\n                    // \u53ea\u6709\u8fd9\u4e2a\u5730\u65b9\u9700\u8981\u6807\u8bb0\u5df2\u904d\u5386\n                    isVisited[idx] = true;\n                    for (int k = 0; k &lt; 4; k++) {\n                        int a = i + dx[k];\n                        int b = j + dy[k];\n                        if (a &gt;= 0 &amp;&amp; a &lt; n &amp;&amp; b &gt;= 0 &amp;&amp; b &lt; m &amp;&amp;\n                            grid[a][b] == '1' &amp;&amp; !isVisited[a * m + b]) {\n                            // \u8fd9\u91cc\u4e0d\u9700\u8981\u6807\u8bb0\u904d\u5386\uff0c\u56e0\u4e3aUnion\u4e0d\u4f1a\u7ee7\u7eed\u5f80\u4e0b\u8bbf\u95ee\u4e0b\u4e00\u4e2a\u8282\u70b9\n                            // \u4e0d\u662f\u9012\u5f52\u51fd\u6570\uff01\n                            Union(idx, a * m + b);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(MN\u00d7\u03b1(MN))\uff0c\u5176\u4e2d M \u548c N \u5206\u522b\u4e3a\u884c\u6570\u548c\u5217\u6570\u3002\u6ce8\u610f\u5f53\u4f7f\u7528\u8def\u5f84\u538b\u7f29\uff08\u89c1 find \u51fd\u6570\uff09\u548c\u6309\u79e9\u5408\u5e76\uff08\u89c1\u6570\u7ec4 rank\uff09\u5b9e\u73b0\u5e76\u67e5\u96c6\u65f6\uff0c\u5355\u6b21\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \u03b1(MN)\uff0c\u5176\u4e2d \u03b1(x) \u4e3a\u53cd\u963f\u514b\u66fc\u51fd\u6570\uff0c\u5f53\u81ea\u53d8\u91cf x \u7684\u503c\u5728\u4eba\u7c7b\u53ef\u89c2\u6d4b\u7684\u8303\u56f4\u5185\uff08\u5b87\u5b99\u4e2d\u7c92\u5b50\u7684\u6570\u91cf\uff09\u65f6\uff0c\u51fd\u6570 \u03b1(x) \u7684\u503c\u4e0d\u4f1a\u8d85\u8fc7 5\uff0c\u56e0\u6b64\u4e5f\u53ef\u4ee5\u770b\u6210\u662f\u5e38\u6570\u65f6\u95f4\u590d\u6742\u5ea6\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(MN)\uff0c\u8fd9\u662f\u5e76\u67e5\u96c6\u9700\u8981\u4f7f\u7528\u7684\u7a7a\u95f4\u3002</p> <p>\u6211\u6ca1\u6709\u4f7f\u7528\u6309\u79e9\u5408\u5e76</p>"},{"location":"algorithm/leetcode/#209_1","title":"209 \u957f\u5ea6\u6700\u5c0f\u7684\u5b50\u6570\u7ec4","text":"<p>https://leetcode.cn/problems/minimum-size-subarray-sum/description/</p> <p>\u9898\u76ee\u5173\u952e\u5728\u4e8e\uff1a\u8fd9\u4e2a\u5b50\u6570\u7ec4\u662f\u8fde\u7eed\u7684</p>"},{"location":"algorithm/leetcode/#_154","title":"\u89e3\u6cd5\u4e00\uff1a\u66b4\u529b\u679a\u4e3e","text":"<p>\u5148\u679a\u4e3e\u5b50\u6570\u7ec4\u7684\u8d77\u70b9\uff0c\u518d\u5f80\u540e\u679a\u4e3e\uff0c\u6ee1\u8db3sum &gt;= target\u505c\u6b62\uff0c\u8ba1\u7b97\u5b50\u6570\u7ec4\u957f\u5ea6 j - i + 1</p> <pre><code>class Solution {\nprivate:\n    const int INF = 0x3f3f3f3f;\npublic:\n    int minSubArrayLen(int target, vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        int ans = INF;\n        for(int i = 0; i &lt; n; i++){\n            int sum = 0;\n            for(int j = i; j &lt; n; j++){\n                sum += nums[j];\n                if(sum &gt;= target)\n                    ans = min(ans, j - i + 1);\n            }\n        }\n        if(ans == INF) \n            return 0;\n        else\n            return ans;\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)\uff0c\u5176\u4e2d n \u662f\u6570\u7ec4\u7684\u957f\u5ea6\u3002\u9700\u8981\u904d\u5386\u6bcf\u4e2a\u4e0b\u6807\u4f5c\u4e3a\u5b50\u6570\u7ec4\u7684\u5f00\u59cb\u4e0b\u6807\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5f00\u59cb\u4e0b\u6807\uff0c\u9700\u8981\u904d\u5386\u5176\u540e\u9762\u7684\u4e0b\u6807\u5f97\u5230\u957f\u5ea6\u6700\u5c0f\u7684\u5b50\u6570\u7ec4\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\u3002</p>"},{"location":"algorithm/leetcode/#_155","title":"\u89e3\u6cd5\u4e8c\uff1a \u524d\u7f00\u548c + \u4e8c\u5206\u67e5\u627e","text":"<p>\u89e3\u6cd5\u4e00\u679a\u4e3e\u8d77\u70b9\u4e4b\u540e\u53c8\u5411\u540e\u679a\u4e3e\u4e86n\u4e2a\u5143\u7d20\u624d\u627e\u5230sum &gt;= target</p> <p>\u7531\u4e8e\u672c\u9898\u9650\u5b9a\u4e86\u201c\u6b63\u6574\u6570\u5143\u7d20\u201d\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u627e\u5230\u7b2c\u4e00\u4e2a\u6ee1\u8db3sum &gt;= target\u7684\u5143\u7d20\uff0c\u663e\u7136\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u67e5\u627e</p> <p>\u6211\u4eec\u7684\u76ee\u6807\u662fsum &gt;= target \u800c\u4e0d\u662fnum &gt;= target\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u4f5c\u4e3a\u672b\u5c3e\u65f6\u7684sum[i]</p> <p>\u56e0\u6b64\u60f3\u5230\u524d\u7f00\u548c</p> <pre><code>class Solution {\nprivate:\n    const int INF = 0x3f3f3f3f;\n\npublic:\n    int minSubArrayLen(int target, vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        vector&lt;int&gt; s(n + 1);\n        //  \u8ba1\u7b97\u524d\u7f00\u548c\n        for (int i = 1; i &lt;= n; i++) {\n            // \u8fd9\u91cc\u539f\u672c\u662fnums[i]\uff0c\u4f46\u662fnums\u548cs\u7684\u4e0b\u6807\u4e4b\u95f4\u504f\u79fb\u4e861\n            s[i] = s[i - 1] + nums[i - 1];\n        }\n        int ans = INF;\n        // \u904d\u5386\u8d77\u70b9\uff0c\u7531\u4e8e\u662f\u904d\u5386\u524d\u7f00\u548c\uff0c\u6240\u4ee5\u4e0b\u6807\u53ef\u76f4\u63a5\u4ece1\u5f00\u59cb\n        for (int i = 1; i &lt;= n; i++) {\n            // \u6211\u4eec\u8981\u627e\u5230sum &gt;= target\n            // sum = s[idx] - s[i - 1]\n            // \u56e0\u6b64\u4e8c\u5206\u67e5\u627e\u7684\u76ee\u6807\u4e3a\u5728\u6570\u7ec4s\u4e2d\u627e\u5230\u5927\u4e8e\u7b49\u4e8etarget + s[i -\n            // 1]\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\n            int t = target + s[i - 1];\n            auto it = lower_bound(s.begin(), s.end(), t);\n            if (it != s.end()) {\n                int idx = distance(s.begin(), it);\n                ans = min(ans, idx - i + 1);\n            }\n        }\n        return ans == INF ? 0 : ans;\n    }\n};\n</code></pre> <p>\u4e8c\u5206\u81ea\u5df1\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <pre><code>class Solution {\nprivate:\n    const int INF = 0x3f3f3f3f;\n\npublic:\n    int minSubArrayLen(int target, vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        vector&lt;int&gt; s(n + 1);\n        //  \u8ba1\u7b97\u524d\u7f00\u548c\n        for (int i = 1; i &lt;= n; i++) {\n            // \u8fd9\u91cc\u539f\u672c\u662fnums[i]\uff0c\u4f46\u662fnums\u548cs\u7684\u4e0b\u6807\u4e4b\u95f4\u504f\u79fb\u4e861\n            s[i] = s[i - 1] + nums[i - 1];\n        }\n        int ans = INF;\n        // \u904d\u5386\u8d77\u70b9\uff0c\u7531\u4e8e\u662f\u904d\u5386\u524d\u7f00\u548c\uff0c\u6240\u4ee5\u4e0b\u6807\u53ef\u76f4\u63a5\u4ece1\u5f00\u59cb\n        for (int i = 1; i &lt;= n; i++) {\n            // \u6211\u4eec\u8981\u627e\u5230sum &gt;= target\n            // sum = s[idx] - s[i - 1]\n            // \u56e0\u6b64\u4e8c\u5206\u67e5\u627e\u7684\u76ee\u6807\u4e3a\u5728\u6570\u7ec4s\u4e2d\u627e\u5230\u5927\u4e8e\u7b49\u4e8etarget + s[i - 1]\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\n            int t = target + s[i - 1];\n            int l = i, r = n;\n            while(l &lt; r){\n                int mid = l + r &gt;&gt; 1;\n                if(s[mid] &gt;= t) r = mid;\n                else l = mid + 1;\n            }\n            if(s[l] &gt;= t)\n                ans = min(ans, l - i + 1);\n        }\n        return ans == INF ? 0 : ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_156","title":"\u89e3\u6cd5\u4e09\uff1a\u79fb\u52a8\u7a97\u53e3","text":"<p>\u7531\u4e8e\u9898\u76ee\u7684\u5b50\u6570\u7ec4\u662f\u8fde\u7eed\u7684\u5e8f\u5217\uff0c\u6c42sum &gt;= target\u5b50\u6570\u7ec4\u957f\u5ea6\u6700\u5c0f\u503c\uff0c\u5b9e\u9645\u4e0a\u662f\u8981\u6c42\u5b50\u6570\u7ec4\u6ed1\u52a8\u65f6\u7684\u6700\u5c0f\u503c &gt;= target</p> <p>\u60f3\u8ba9\u5b50\u6570\u7ec4\u957f\u5ea6\u6700\u5c0f\uff0c\u610f\u5473\u7740\u8fd9\u4e2a\u79fb\u52a8\u7a97\u53e3\u7684\u957f\u5ea6\u4e0d\u5b9a\uff0c\u56e0\u6b64\u79fb\u52a8\u7a97\u53e3\u7684\u5934\u90e8\u4e5f\u9700\u8981\u6539\u53d8</p> <p>\u52a0\u8fdb\u4e00\u4e2a\u5143\u7d20</p> <pre><code>class Solution {\nprivate:\n    const int INF = 0x3f3f3f3f;\npublic:\n    int minSubArrayLen(int target, vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        int start = 0, end = 0;\n        int ans = INF;\n        int sum = 0;\n        while(end &lt; n){\n            sum += nums[end];\n            while(sum &gt;= target){\n                ans = min(ans, end - start + 1);\n                sum -= nums[start];\n                start++;\n            }\n            end++;\n        }\n        return ans == INF ? 0 : ans;\n    }\n};\n</code></pre> <p>\u4ee5\u4e0a\u662f\u53cc\u6307\u9488\u505a\u6cd5</p> <p>\u5982\u679c\u5957\u6a21\u677f\uff0c\u4f7f\u7528\u961f\u5217\u89e3\u51b3\uff0c\u5219\u662f\uff1a</p> <pre><code>class Solution {\nprivate:\n    const int INF = 0x3f3f3f3f;\npublic:\n    int minSubArrayLen(int target, vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        queue&lt;int&gt; q;\n        int sum = 0;\n        int ans = INF;\n        for(int i = 0; i &lt; n; i++){\n            // \u5148\u52a0nums[i] \u518d\u5bf9\u961f\u5934\u8fdb\u884c\u5224\u65ad\n            q.push(i);\n            sum += nums[i];\n            // \u5904\u7406\u961f\u5934\n            while(!q.empty() &amp;&amp; sum &gt;= target){\n                sum -= nums[q.front()];\n                ans = min(ans, q.back() - q.front() + 1);\n                q.pop();\n            }\n        }\n        return ans == INF ? 0 : ans;\n    }\n};\n</code></pre> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u961f\u5217\u7684\u5934\u662f\u65e9\u52a0\u5165\u7684\u5143\u7d20\uff0c\u5c3e\u662f\u521a\u521a\u52a0\u5165\u7684\u5143\u7d20\uff0c\u5373\u5934\u5bf9\u5e94start\uff0c\u5c3e\u5bf9\u5e94end</p>"},{"location":"algorithm/leetcode/#234","title":"234 \u56de\u6587\u94fe\u8868","text":"<p>https://leetcode.cn/problems/palindrome-linked-list/solutions/457059/hui-wen-lian-biao-by-leetcode-solution/?envType=study-plan-v2&amp;envId=top-100-liked</p>"},{"location":"algorithm/leetcode/#_157","title":"\u9012\u5f52\u7248","text":"<p>\u5229\u7528\u51fd\u6570\u9012\u5f52\u7279\u6027\uff0c\u5f53\u51fd\u6570\u904d\u5386\u5230\u6700\u5e95\u5c42\u9047\u5230\u7ec8\u6b62\u6761\u4ef6\u624d\u4f1a\u8fd4\u56de\uff0c\u7ec8\u6b62\u6761\u4ef6\u8bbe\u7f6e\u4e3anullptr\uff0c\u5219\u51fd\u6570\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u624d\u4f1a\u8fd4\u56de</p> <p>\u6b64\u65f6\u6211\u4eec\u8bbe\u7f6efirstPointer\u6307\u5411\u7b2c\u4e00\u4e2a\u8282\u70b9\uff0c\u5f53\u51fd\u6570\u5f00\u59cb\u8fd4\u56de\u65f6\uff0c\u5c06curNode\u4e0efirstPointer\u7684\u503c\u8fdb\u884c\u6bd4\u8f83</p> <p>\u5982\u679c\u67d0\u6b21\u6bd4\u8f83\u53d1\u73b0\u4e0d\u76f8\u7b49\uff0c\u90a3\u4e48\u8bf4\u660e\u4e0d\u662f\u56de\u6587\u94fe\u8868\uff0c\u9700\u8981\u5411\u4e0a\u4f20\u9012\u7ed3\u679c\uff0c\u56e0\u6b64\u8fd4\u56de\u503c\u8bbe\u7f6e\u4e3abool\u7c7b\u578b</p> <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\nprivate:\n    ListNode* firstPointer;\npublic:\n    bool recursivelyCheck(ListNode* curNode){\n        if(!curNode)\n            return true;\n        if(!recursivelyCheck(curNode-&gt;next))\n            return false;\n        if(firstPointer-&gt;val != curNode-&gt;val)\n            return false;\n        firstPointer = firstPointer-&gt;next;\n        return true;\n    }\n    bool isPalindrome(ListNode* head) {\n        firstPointer = head;\n        return recursivelyCheck(head);\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u5176\u4e2d n \u6307\u7684\u662f\u94fe\u8868\u7684\u5927\u5c0f\u3002</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u5176\u4e2d n \u6307\u7684\u662f\u94fe\u8868\u7684\u5927\u5c0f\u3002</li> </ul>"},{"location":"algorithm/leetcode/#_158","title":"\u8fed\u4ee3\u7248","text":"<pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\nprivate:\n    ListNode* reverseList(ListNode* head) {\n        ListNode* prev = nullptr;\n        ListNode* cur = head;\n        while (cur) {\n            ListNode* next = cur-&gt;next;\n            cur-&gt;next = prev;\n            prev = cur;\n            cur = next;\n        }\n        return prev;\n    }\n    ListNode* getFirstEnd(ListNode* head) {\n        ListNode *fast = head, *slow = head;\n        while (fast-&gt;next != nullptr &amp;&amp; fast-&gt;next-&gt;next != nullptr) {\n            fast = fast-&gt;next-&gt;next;\n            slow = slow-&gt;next;\n        }\n        return slow;\n    }\n\npublic:\n    bool isPalindrome(ListNode* head) {\n        if (!head)\n            return true;\n        ListNode* firstEnd = getFirstEnd(head);\n        ListNode* secondHead = reverseList(firstEnd-&gt;next);\n        ListNode *p1 = head, *p2 = secondHead;\n        while (p2) {\n            if (p1-&gt;val != p2-&gt;val)\n                return false;\n            p1 = p1-&gt;next;\n            p2 = p2-&gt;next;\n        }\n        // \u5982\u679c\u9700\u8981\u6062\u590d\u539f\u72b6\n        firstEnd-&gt;next = reverseList(secondHead);\n        return true;\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u5176\u4e2d n \u6307\u7684\u662f\u94fe\u8868\u7684\u5927\u5c0f\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\u3002\u6211\u4eec\u53ea\u4f1a\u4fee\u6539\u539f\u672c\u94fe\u8868\u4e2d\u8282\u70b9\u7684\u6307\u5411\uff0c\u800c\u5728\u5806\u6808\u4e0a\u7684\u5806\u6808\u5e27\u4e0d\u8d85\u8fc7 O(1)\u3002</p>"},{"location":"algorithm/leetcode/#279","title":"279 \u5b8c\u5168\u5e73\u65b9\u6570","text":"<p>\u601d\u8def\uff1a</p> <p>\u9898\u76ee\u8981\u6c42\u548c\u4e3ai\u7684\u5b8c\u5168\u5e73\u65b9\u6570\u6700\u5c0f\u6570\u91cf</p> <p>\u5047\u8bbe\u9009\u62e9\u4e86j (j &lt;= i)\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u8981\u627e\u7684\u5c31\u662f\u548c\u4e3ai - j*j\u7684\u5b8c\u5168\u5e73\u65b9\u6570\u6700\u5c0f\u6570\u91cf</p> <p>\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u662f\u4e00\u4e2a\u72b6\u6001\u9012\u63a8\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528\u52a8\u6001\u89c4\u5212</p> <p>f[i - j* j]\u4e0b\u6807\u6bd4f[i]\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u4ece\u5c0f\u5230\u5927\u904d\u5386</p> <pre><code>class Solution {\npublic:\n    int numSquares(int n) {\n        // dp[i]\u8868\u793a\u548c\u4e3ai\u7684\u5b8c\u5168\u5e73\u65b9\u6570\u7684\u6700\u5c11\u6570\u91cf\n        // dp[0] = 0\n        vector&lt;int&gt; dp(n + 1, 0);\n        for(int i = 1; i &lt;= n; i++){\n            // \u679a\u4e3e\u5b8c\u5168\u5e73\u65b9\u6570\n            dp[i] = INT_MAX;\n            for(int j = 1; j * j &lt;=i; j++){\n                dp[i] = min(dp[i],1 + dp[i - j * j]);\n            }\n        }\n        return dp[n];\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#415","title":"415 \u5b57\u7b26\u4e32\u76f8\u52a0\uff08\u5927\u6570\u52a0\u6cd5\uff09","text":"<pre><code>class Solution {\npublic:\n    string addStrings(string num1, string num2) {\n        int len1 = num1.size(), len2 = num2.size();\n        if (len1 &lt; len2)\n            return addStrings(num2, num1);\n        // \u5c06num1\uff0cnum2\u53cd\u5411\u5b58\u50a8\uff0c\u56e0\u4e3a\u6700\u9ad8\u4f4d\u653e\u5728\u6570\u7ec4\u672b\u7aef\uff0c\u65b9\u4fbf\u8fdb\u4f4d\n        vector&lt;int&gt; a, b;\n        for (int i = len1 - 1; i &gt;= 0; i--)\n            a.push_back(num1[i] - '0');\n        for (int i = len2 - 1; i &gt;= 0; i--)\n            b.push_back(num2[i] - '0');\n        string ans;\n        int t = 0;\n        for (int i = 0; i &lt; len1; i++) {\n            t += a[i];\n            if (i &lt; len2)\n                t += b[i];\n            ans.push_back(t % 10 + '0');\n            t /= 10;\n        }\n        if (t)\n            ans.push_back(t + '0');\n            // ans\u4e5f\u4e3a\u5012\u5e8f\uff0c\u771f\u5b9e\u7b54\u6848\u9700\u8981\u53cd\u8fc7\u6765\n        reverse(ans.begin(), ans.end());\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#470-rand7-rand10","title":"470 \u7528rand7() \u5b9e\u73b0rand10()","text":"<pre><code>// The rand7() API is already defined for you.\n// int rand7();\n// @return a random integer in the range 1 to 7\n\nclass Solution {\npublic:\n    int rand10() {\n        while (true) {\n            // (rand_X - 1) * Y + rand_Y \u53ef\u6784\u9020[1, X * Y]\n            // \u76f8\u5f53\u4e8e\u6784\u9020\u4e00\u4e2aY\u8fdb\u5236\u7684\u6570\uff0c\u4e2a\u4f4d\u662frand_Y\uff0c\u6ee1\u8db3Y\u8fdb\u5236\uff0c\u6bcf\u4e2a\u4e2a\u4f4d\u7b49\u6982\u7387\u5206\u5e03\n            // \u201c\u5341\u4f4d\u201d\u662f (rand_X - 1)\uff0c\u4e5f\u662f\u7b49\u6982\u7387\u5206\u5e03\n            // rand_X\u4e3a[1,X]\n            // \u7c7b\u6bd4\u4e8e3 = \u4e8c\u8fdb\u5236\u7684 11 = 2 * 1 + 2\uff0c\u8fd9\u91ccY\u5c31\u662f2\uff0cX - 1\u5c31\u662f1\n            // \u56e0\u6b64\u80fd\u591f\u6784\u9020\u7684\u6700\u5927\u503c\u4e3a Y * (X - 1) + Y\n            int num = (rand7() - 1) * 7 + (rand7() - 1); // num \u4e3a\u7b49\u6982\u7387[0, 48]\n            // \u5bf9[0,48]\u53d6\u6211\u4eec\u9700\u8981\u7684\u503c[1,11]\n            if (num &gt;= 1 &amp;&amp; num &lt;= 40)\n                return num % 10 + 1;\n\n            // \u5bf9\u591a\u51fa\u6765\u7684\u503c0,41,42...48\u7ee7\u7eed\u5229\u7528\n            // num % 40 = 0, 1, 2, 3, ...,8 = rand9() - 1\n            // \u7ee7\u7eed\u5229\u7528\u516c\u5f0f\u6784\u9020\u7b49\u6982\u7387\u5206\u5e03\n            num = (num % 40) * 7 + rand7() - 1;\n            // num\u53d6\u503c\u4e3a[0, 62]\n            // \u65e0\u7528\u6570\u5b57\u53ea\u67090, 1, 2\n            if (num &gt;= 1 &amp;&amp; num &lt;= 60)\n                return num % 10 + 1;\n\n            // \u540c\u7406\n            // num % 60 = 0, 1, 2 = rand3() - 1\n            // num\u53d6\u503c\u4e3a[0, 20]\n            num = (num % 60) * 7 + rand7() - 1;\n            if (num &gt;= 1 &amp;&amp; num &lt;= 20)\n                return num % 10 + 1;\n\n            // \u6700\u540e\u65e0\u7528\u6570\u5b57\u53ea\u67090\n        }\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#503-ii","title":"503 \u4e0b\u4e00\u4e2a\u66f4\u5927\u5143\u7d20II","text":"<p>https://leetcode.cn/problems/next-greater-element-ii/description/</p> <p>\u904d\u5386\u4e00\u904d\u6570\u7ec4\u663e\u7136\u4e0d\u591f\uff0c\u53ef\u590d\u5236\u4e00\u4efd\u6570\u7ec4\u62fc\u63a5\u5728\u539f\u6570\u7ec4\u672b\u5c3e\uff0c\u5b9e\u73b0\u5faa\u73af\u6570\u7ec4</p> <p>\u5b9e\u9645\u64cd\u4f5c\u4e2d\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u590d\u5236\uff0c\u53ea\u9700\u8981\u904d\u5386\u4e24\u6b21\u6570\u7ec4\u5373\u53ef\uff0ci % n \u5bf9\u5e94nums\u7684\u4e0b\u6807</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; nextGreaterElements(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        stack&lt;int&gt; stk;\n        vector&lt;int&gt; ans(n, -1);\n        for (int i = 0; i &lt; 2 * n - 1; i++) {\n            while (!stk.empty() &amp;&amp; nums[i % n] &gt; nums[stk.top()]) {\n                ans[stk.top()] = nums[i % n];\n                stk.pop();\n            }\n            stk.push(i % n);\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6: O(n)\uff0c\u5176\u4e2d n \u662f\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u6211\u4eec\u9700\u8981\u904d\u5386\u8be5\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u6700\u591a 2 \u6b21\uff0c\u6bcf\u4e2a\u5143\u7d20\u51fa\u6808\u4e0e\u5165\u6808\u7684\u603b\u6b21\u6570\u4e5f\u4e0d\u8d85\u8fc7 4 \u6b21\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6: O(n)\uff0c\u5176\u4e2d n \u662f\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3b\u8981\u53d6\u51b3\u4e8e\u6808\u7684\u5927\u5c0f\uff0c\u6808\u7684\u5927\u5c0f\u81f3\u591a\u4e3a 2n\u22121\u3002</p>"},{"location":"algorithm/leetcode/#547","title":"547 \u7701\u4efd\u6570\u91cf","text":""},{"location":"algorithm/leetcode/#dfs_1","title":"\u89e3\u6cd5\u4e00\uff1adfs","text":"<p>\u672c\u9898nxn\u77e9\u9635\u53ef\u89c6\u4f5c\u90bb\u63a5\u77e9\u9635\uff0c\u5bf9\u5176\u53ef\u4ee5\u8fdb\u884c\u56fe\u8bba\u7684dfs\u6216bfs\u904d\u5386\uff0c\u627e\u51fa\u6240\u6709\u7684\u8fde\u901a\u5206\u91cf</p> <p>\u5173\u952e\u5728\u4e8e\u5982\u679c\u8ba1\u7b97\u8fde\u901a\u5206\u91cf\u7684\u4e2a\u6570\uff1a\u5982\u679c\u7b2ci - 1\u6b21dfs\u904d\u5386\u540e\u4ecd\u6709\u8282\u70b9\u6ca1\u6709\u88ab\u904d\u5386\uff0c\u8bf4\u660e\u5176\u5c5e\u4e8e\u65b0\u7684\u8fde\u901a\u5206\u91cf</p> <pre><code>class Solution {\nprivate:\n    void dfs(vector&lt;vector&lt;int&gt;&gt;&amp; isConnected, vector&lt;bool&gt;&amp; isVisited, int idx){\n        for(int j = 0; j &lt; isConnected[idx].size(); j++){\n            if(isConnected[idx][j] &amp;&amp; !isVisited[j]){\n                isVisited[j] = true;\n                dfs(isConnected, isVisited, j);\n            }\n        }\n    }\npublic:\n    int findCircleNum(vector&lt;vector&lt;int&gt;&gt;&amp; isConnected) {\n        int n = isConnected.size();\n        vector&lt;bool&gt; isVisited(n, false);\n        int ans = 0;\n        for(int i = 0; i &lt; n; i++){\n            // \u904d\u5386\u4e00\u904d\u540e\uff0c\u5982\u679c\u7b2c\u4e8c\u904d\u8fd8\u51fa\u73b0\u4e86\u6ca1\u6709\u904d\u5386\u8fc7\u7684\u8282\u70b9\n            // \u8bf4\u660e\u51fa\u73b0\u65b0\u7684\u8fde\u901a\u5206\u91cf\n            if(!isVisited[i]){\n                // \u627e\u51fai\u5bf9\u5e94\u7684\u6240\u6709\u8fde\u901a\u8282\u70b9\uff0c\u5bf9\u5176\u6807\u8bb0\n                dfs(isConnected, isVisited, i);\n                // i\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\uff0c\u6240\u4ee5\u51fa\u73b0\u65b0\u7684\u8fde\u901a\u5206\u91cf\n                ans++;\n            }\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)\uff0c\u5176\u4e2d n \u662f\u57ce\u5e02\u7684\u6570\u91cf\u3002\u9700\u8981\u904d\u5386\u77e9\u9635 n \u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u5176\u4e2d n \u662f\u57ce\u5e02\u7684\u6570\u91cf\u3002\u9700\u8981\u4f7f\u7528\u6570\u7ec4 visited \u8bb0\u5f55\u6bcf\u4e2a\u57ce\u5e02\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7\uff0c\u6570\u7ec4\u957f\u5ea6\u662f n\uff0c\u9012\u5f52\u8c03\u7528\u6808\u7684\u6df1\u5ea6\u4e0d\u4f1a\u8d85\u8fc7 n</p>"},{"location":"algorithm/leetcode/#bfs_1","title":"\u89e3\u6cd5\u4e8c\uff1a bfs","text":"<p>\u4e0edfs\u7c7b\u4f3c\uff0c\u4ee5\u6bcf\u4e2a\u8282\u70b9bfs\u904d\u5386\u4e00\u904d\uff0c\u5982\u679c\u904d\u5386\u505c\u6b62\uff0c\u8bf4\u660e\u5176\u8bbf\u95ee\u5b8c\u6240\u6709\u76f8\u8fde\u7684\u8282\u70b9</p> <p>\u904d\u5386\u540e\u8fd8\u6709\u672a\u8bbf\u95ee\u7684\u8282\u70b9\uff0c\u8bf4\u660e\u6709\u65b0\u7684\u8fde\u901a\u5206\u91cf</p> <pre><code>class Solution {\npublic:\n    int findCircleNum(vector&lt;vector&lt;int&gt;&gt;&amp; isConnected) {\n        int n = isConnected.size();\n        vector&lt;bool&gt; isVisited(n, false);\n        int ans = 0;\n        for(int i = 0; i &lt; n; i++){\n            queue&lt;int&gt; q;\n            if(!isVisited[i]){\n                ans++;\n                q.push(i);\n                while(!q.empty()){\n                    int idx = q.front();\n                    q.pop();\n                    for(int j = 0; j &lt; n; j++){\n                        if(isConnected[idx][j] &amp;&amp; !isVisited[j]){\n                            q.push(j);\n                            isVisited[j] = true;\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2)\\)\uff0c\u5176\u4e2d n \u662f\u57ce\u5e02\u7684\u6570\u91cf\u3002\u9700\u8981\u904d\u5386\u77e9\u9635 isConnected \u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u5176\u4e2d n \u662f\u57ce\u5e02\u7684\u6570\u91cf\u3002\u9700\u8981\u4f7f\u7528\u6570\u7ec4 visited \u8bb0\u5f55\u6bcf\u4e2a\u57ce\u5e02\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7\uff0c\u6570\u7ec4\u957f\u5ea6\u662f n\uff0c\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u4f7f\u7528\u7684\u961f\u5217\u7684\u5143\u7d20\u4e2a\u6570\u4e0d\u4f1a\u8d85\u8fc7 n\u3002</p>"},{"location":"algorithm/leetcode/#_159","title":"\u89e3\u6cd5\u4e09\uff1a \u5e76\u67e5\u96c6","text":"<pre><code>class Solution {\npublic:\n    int Find(vector&lt;int&gt;&amp; p, int x) {\n        if (p[x] != x)\n            p[x] = Find(p, p[x]);\n        return p[x];\n    }\n    void Union(vector&lt;int&gt;&amp; p, int x, int y) { p[Find(p, x)] = Find(p, y); }\n\n    int findCircleNum(vector&lt;vector&lt;int&gt;&gt;&amp; isConnected) {\n        int n = isConnected.size();\n        int m = isConnected[0].size();\n        vector&lt;int&gt; parent(n);\n        for (int i = 0; i &lt; n; i++)\n            parent[i] = i;\n        for (int i = 0; i &lt; n; i++) {\n            for (int j = i + 1; j &lt; m; j++) {\n                if (isConnected[i][j])\n                    Union(parent, i, j);\n            }\n        }\n        int ans = 0;\n        for (int i = 0; i &lt; n; i++) {\n            if (parent[i] == i)\n                ans++;\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n^2logn)\\)\uff0c\u5176\u4e2d n \u662f\u57ce\u5e02\u7684\u6570\u91cf\u3002\u9700\u8981\u904d\u5386\u77e9\u9635 isConnected \u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(n^2)\\)\uff0c\u5982\u679c\u9047\u5230\u76f8\u8fde\u5173\u7cfb\uff0c\u5219\u9700\u8981\u8fdb\u884c 2 \u6b21\u67e5\u627e\u548c\u6700\u591a 1 \u6b21\u5408\u5e76\uff0c\u4e00\u5171\u9700\u8981\u8fdb\u884c \\(2n^2\\)\u6b21\u67e5\u627e\u548c\u6700\u591a\\(n^2\\)\u6b21\u5408\u5e76\uff0c\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f$ O(2n^2logn^2 )=O(n^2logn)\\(\u3002\u8fd9\u91cc\u7684\u5e76\u67e5\u96c6\u4f7f\u7528\u4e86\u8def\u5f84\u538b\u7f29\uff0c\u4f46\u662f\u6ca1\u6709\u4f7f\u7528\u6309\u79e9\u5408\u5e76\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(n^2logn)\\)\uff0c\u5e73\u5747\u60c5\u51b5\u4e0b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f9d\u7136\u662f \\(O(n2\u03b1(n))\\)\uff0c\u5176\u4e2d \u03b1 \u4e3a\u963f\u514b\u66fc\u51fd\u6570\u7684\u53cd\u51fd\u6570\uff0c\\)\u03b1(n) $\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u5e38\u6570\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)\uff0c\u5176\u4e2d n \u662f\u57ce\u5e02\u7684\u6570\u91cf\u3002\u9700\u8981\u4f7f\u7528\u6570\u7ec4 parent \u8bb0\u5f55\u6bcf\u4e2a\u57ce\u5e02\u6240\u5c5e\u7684\u8fde\u901a\u5206\u91cf\u7684\u7956\u5148\u3002</p>"},{"location":"algorithm/leetcode/#684","title":"684 \u5197\u4f59\u8fde\u63a5","text":"<p>https://leetcode.cn/problems/redundant-connection/</p> <p>\u672c\u9898\u7ed9\u51fan\u4e2a\u70b9\u548cn\u6761\u8fb9\uff0c\u7531\u4e8e\u6811\u7684\u8fb9\u6570\u4e3a\u8282\u70b9\u6570 -1\uff0c \u6240\u4ee5\u5b9e\u9645\u4e0a\u53ea\u4f1a\u591a\u51fa\u4e00\u6761\u8fb9\uff0c\u8fd9\u6761\u8fb9\u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684\u89e3</p> <p>\u5982\u679c\u591a\u6761\u7b54\u6848\u8fb9\uff0c\u521b\u4e00\u4e2aans\u6570\u7ec4\u4f9d\u6b21\u653e\u5165\uff0c\u6700\u540e\u8fd4\u56de\u672b\u5c3e\u5143\u7d20\u5373\u53ef\uff08\u5373\u6808\u9876\u5143\u7d20\uff09</p> <pre><code>class Solution {\nprivate:\n    vector&lt;int&gt; p;\n    void init(int n){\n        p.resize(n + 1);\n        for(int i = 1; i &lt;= n; i++)\n            p[i] = i;\n    }\n    int Find(int x){\n        if(p[x] != x) p[x] = Find(p[x]);\n        return p[x];\n    }\n    void Union(int x, int y){\n        p[Find(x)] = Find(y);\n    }\npublic:\n    vector&lt;int&gt; findRedundantConnection(vector&lt;vector&lt;int&gt;&gt;&amp; edges) {\n        int n = edges.size();\n        init(n);\n        for(auto edge: edges){\n            int x = edge[0], y = edge[1];\n            if(Find(x) != Find(y)){\n                Union(x, y);\n            }\n            // p[x] == p[y]\u8bf4\u660ex\u548cy\u5728\u4e00\u68f5\u6811\u4e2d\u4e86\uff0c\u6b64\u65f6\u591a\u52a0\u7684\u90a3\u6761\u8fb9\u4f1a\u4f7f\u6811\u53d8\u6210\u56fe\uff0c\u5373\u9898\u89e3\n            else return edge;\n        }\n        return vector&lt;int&gt;();\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#739","title":"739 \u6bcf\u65e5\u6e29\u5ea6","text":"<p>https://leetcode.cn/problems/daily-temperatures/description/</p> <p>\u627e\u51fa\u5de6/\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u6808\u9876\u5143\u7d20\u5c0f -&gt;  \u5355\u8c03\u9012\u589e\u6808</p> <p>\u627e\u51fa\u5de6/\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u6808\u9876\u5143\u7d20\u5927 -&gt; \u5355\u8c03\u9012\u51cf\u6808</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; dailyTemperatures(vector&lt;int&gt;&amp; temperatures) {\n        int n = temperatures.size();\n        stack&lt;int&gt; stk;\n        vector&lt;int&gt; ans(n, 0);\n        for(int i = 0; i &lt; n; i++){\n            // \u5355\u8c03\u9012\u51cf\u6808\uff0c\u5f39\u51fa\u8bf4\u660e\u65b0\u5143\u7d20i\u662f\u7b2c\u4e00\u4e2a\u6bd4\u6808\u9876\u5143\u7d20\u5927\u7684\u5143\u7d20\n            while(!stk.empty() &amp;&amp; temperatures[i] &gt; temperatures[stk.top()]){\n                // \u9898\u76ee\u95ee\u7684\u662f\u51e0\u5929\u540e\n                ans[stk.top()] = i - stk.top();\n                stk.pop();\n            }\n            stk.push(i);\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u5176\u4e2d n \u662f\u6e29\u5ea6\u5217\u8868\u7684\u957f\u5ea6\u3002\u6b63\u5411\u904d\u5386\u6e29\u5ea6\u5217\u8868\u4e00\u904d\uff0c\u5bf9\u4e8e\u6e29\u5ea6\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u4e0b\u6807\uff0c\u6700\u591a\u6709\u4e00\u6b21\u8fdb\u6808\u548c\u51fa\u6808\u7684\u64cd\u4f5c\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u5176\u4e2d n \u662f\u6e29\u5ea6\u5217\u8868\u7684\u957f\u5ea6\u3002\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u6808\u5b58\u50a8\u6e29\u5ea6\u5217\u8868\u4e2d\u7684\u4e0b\u6807\u3002</p>"},{"location":"algorithm/leetcode/#912","title":"912 \u6392\u5e8f\u6570\u7ec4","text":""},{"location":"algorithm/leetcode/#_160","title":"\u5806\u6392\u5e8f","text":"<pre><code>class Solution {\nprivate:\n    void heapify(vector&lt;int&gt;&amp; nums, int u, int heapSize) {\n        int smallest = u;\n        int l = 2 * u + 1, r = 2 * u + 2;\n        if (l &lt; heapSize &amp;&amp; nums[l] &lt; nums[smallest])\n            smallest = l;\n        if (r &lt; heapSize &amp;&amp; nums[r] &lt; nums[smallest])\n            smallest = r;\n        if (smallest != u) {\n            swap(nums[smallest], nums[u]);\n            heapify(nums, smallest, heapSize);\n        }\n    }\n    void buildMinHeap(vector&lt;int&gt;&amp; nums, int heapSize) {\n        for (int i = nums.size() / 2; i &gt;= 0; i--)\n            heapify(nums, i, heapSize);\n    }\n\npublic:\n    vector&lt;int&gt; sortArray(vector&lt;int&gt;&amp; nums) {\n        vector&lt;int&gt; ans;\n        int heapSize = nums.size();\n        buildMinHeap(nums, heapSize);\n        for (int i = heapSize - 1; i &gt;= 0; i--) {\n            ans.push_back(nums[0]);\n            swap(nums[0], nums[i]);\n            heapify(nums, 0, i);\n        }\n        return ans;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_161","title":"\u5f52\u5e76\u6392\u5e8f","text":"<pre><code>class Solution {\nprivate:\n    vector&lt;int&gt; tmp;\n    void mergeSort(vector&lt;int&gt;&amp; nums,int l,int r){\n        if(l &lt; r){\n            int mid = (l + r)&gt;&gt; 1;\n            mergeSort(nums,l,mid);\n            mergeSort(nums,mid+ 1,r);\n            int cnt = 0;\n            int i = l, j = mid + 1;\n            while(i &lt;= mid &amp;&amp; j &lt;= r){\n                if(nums[i] &lt;= nums[j])\n                    tmp[cnt++] = nums[i++];\n                else\n                    tmp[cnt++] = nums[j++];\n            }\n            while(i &lt;= mid)\n                tmp[cnt++] = nums[i++];\n            while(j &lt;= r)\n                tmp[cnt++] = nums[j++];\n            for(int i = 0; i &lt; r - l + 1;i++)\n                nums[l+i] = tmp[i];\n        }\n    }\npublic:\n    vector&lt;int&gt; sortArray(vector&lt;int&gt;&amp; nums) {\n        tmp.resize(nums.size(),0);\n        mergeSort(nums,0,nums.size() - 1);\n        return nums;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_162","title":"\u5feb\u901f\u6392\u5e8f","text":"<pre><code>class Solution {\nprivate:\n    void quickSort(vector&lt;int&gt;&amp; nums, int l, int r) {\n        // \u6ce8\u610f\u662fl &lt; r\n        if (l &lt; r) {\n            int idx = l + rand() % (r - l + 1);\n            int pivot = nums[idx];\n            int i = l - 1, j = r + 1;\n            while (i &lt; j) {\n                do\n                    i++;\n                while (nums[i] &lt; pivot);\n                do\n                    j--;\n                while (nums[j] &gt; pivot);\n                if(i &lt; j)\n                    swap(nums[i],nums[j]);\n            }\n            // \u56e0\u4e3a\u662f l &lt; r \u6240\u4ee5\u8fd9\u91cc\u662fquickSort(nums, l, j)\u800c\u4e0d\u662fquickSort(nums, l, j - 1)\n            quickSort(nums, l, j);\n            quickSort(nums, j + 1, r);\n        }\n    }\n\npublic:\n    vector&lt;int&gt; sortArray(vector&lt;int&gt;&amp; nums) {\n        quickSort(nums, 0, nums.size() - 1);\n        return nums;\n    }\n};\n</code></pre>"},{"location":"algorithm/leetcode/#_163","title":"\u6a21\u62df\u9898","text":""},{"location":"algorithm/leetcode/#146-lru","title":"146 LRU\u7f13\u5b58","text":"<pre><code>class DListNode {\npublic:\n    int key;\n    int value;\n    DListNode* prev;\n    DListNode* next;\n    DListNode():key(0), value(0),prev(nullptr),next(nullptr){};\n    DListNode(int key_, int value_) : key(key_), value(value_),prev(nullptr),next(nullptr) {}\n};\n\nclass LRUCache {\nprivate:\n    DListNode* head;\n    DListNode* tail;\n    unordered_map&lt;int, DListNode*&gt; cache;\n    int size;\n    int capacity;\n\n    void addToHead(DListNode* node) {\n        node-&gt;prev = head;\n        node-&gt;next = head-&gt;next;\n        head-&gt;next-&gt;prev = node;\n        head-&gt;next = node;\n    }\n\n    void removeNode(DListNode* node) {\n        node-&gt;prev-&gt;next = node-&gt;next;\n        node-&gt;next-&gt;prev = node-&gt;prev;\n    }\n\n    void moveToHead(DListNode* node) {\n        removeNode(node);\n        addToHead(node);\n    }\n\n    DListNode* removeTail() {\n        DListNode* node = tail-&gt;prev;\n        removeNode(node);\n        return node;\n    }\n\npublic:\n    LRUCache(int capacity) {\n        this-&gt;capacity = capacity;\n        head = new DListNode();\n        tail = new DListNode();\n        head-&gt;next = tail;\n        tail-&gt;prev = head;\n        size = 0;\n    }\n\n    int get(int key) {\n        if (!cache.count(key))\n            return -1;\n        DListNode* node = cache[key];\n        moveToHead(node);\n        return node-&gt;value;\n    }\n\n    void put(int key, int value) {\n        if (cache.count(key)) {\n            DListNode* node = cache[key];\n            moveToHead(node);\n            node-&gt;value = value;\n        } else {\n            DListNode* node = new DListNode(key, value);\n            addToHead(node);\n            cache[key] = node;\n            ++size;\n            if (size &gt; capacity) {\n                DListNode* t = removeTail();\n                cache.erase(t-&gt;key);\n                delete t;\n                --size;\n            }\n        }\n    }\n};\n\n/**\n * Your LRUCache object will be instantiated and called as such:\n * LRUCache* obj = new LRUCache(capacity);\n * int param_1 = obj-&gt;get(key);\n * obj-&gt;put(key,value);\n */\n</code></pre>"},{"location":"algorithm/leetcode/#_164","title":"\u5237\u9898\u603b\u7ed3","text":""},{"location":"algorithm/leetcode/#_165","title":"\u6ed1\u52a8\u7a97\u53e3","text":"<p>\u5355\u5411\u961f\u5217queue\uff0c<code>#include &lt;queue&gt;</code> , \u4ec5\u652f\u6301\u63d2\u5165\u961f\u5c3epush(int i)\uff0c\u5f39\u51fa\u961f\u5934pop()</p> <p>\u53cc\u5411\u961f\u5217duque\uff0c<code>#include&lt;deque&gt;</code>, \u652f\u6301\u63d2\u5165\u961f\u5934push_front(int i)\uff0c\u63d2\u5165\u961f\u5c3epush_back(int i)\uff0c\u5220\u9664\u961f\u5934pop_front()\uff0c\u5220\u9664\u961f\u5c3epop_back()</p> <p>\u5bf9\u4e8e\u4e00\u822c\u7684\u6ed1\u52a8\u7a97\u53e3\uff0c\u5982\u679c\u4e0d\u7528pop\u961f\u5c3e\uff0c\u53ef\u4ee5\u7528queue</p> <pre><code>        queue&lt;int&gt; q;\n        // \u904d\u5386\u5e8f\u5217\u6bcf\u4e2a\u5143\u7d20\n        for(int i = 0; i &lt; n; i++){\n        // \u68c0\u67e5\u65b0\u52a0\u5165\u7684\u5143\u7d20\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff0c\u5982\u679c\u6ee1\u8db3\uff0c\u52a0\u5165\u961f\u5c3e\n        if(check(q.front(), i))\n                q.push(i);\n        // \u6839\u636e\u95ee\u9898\uff0c\u5bf9\u63d2\u5165\u7684nums[i]\u64cd\u4f5c\n        ...\n        // check(q.front())\u610f\u4e3a\uff1a\u68c0\u67e5\u961f\u5934\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u5219\u5f39\u51fa\n                while(!q.empty() &amp;&amp; check(q.front())){\n                        q.pop();\n                }\n        }\n</code></pre> <p>\u5982\u679c\u9700\u8981\u6c42\u6ed1\u52a8\u7a97\u53e3\u6700\u5927\u6700\u5c0f\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528deque</p> <pre><code>        deque&lt;int&gt; q;\n        // \u904d\u5386\u5e8f\u5217\u6bcf\u4e2a\u5143\u7d20\n        for(int i = 0; i &lt; n; i++){\n        // \u68c0\u67e5\u961f\u5934\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u5f39\u51fa\u961f\u5934    \n        while(!q.empty() &amp;&amp; check(q.front()))   q.pop_front();\n        // \u68c0\u67e5\u961f\u5c3e\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u5f39\u51fa\u961f\u5c3e\n        while(!q.empty() &amp;&amp; check(q.back(), i)) q.pop_back(i);\n        // \u5c06\u65b0\u5143\u7d20\u52a0\u5165\u961f\u5c3e\n        q.push_back(i);\n        }\n</code></pre> <p>\u4f8b\u5982acwing 154 \u6ed1\u52a8\u7a97\u53e3</p> <p>https://www.acwing.com/problem/content/156/</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;deque&gt;\nusing namespace std;\n\nconst int N = 1e6 + 10;\nint a[N];\nint n, k;\n\nint main(){\n    deque&lt;int&gt; q;\n    cin &gt;&gt; n &gt;&gt; k;\n    for(int i = 0; i &lt; n; i++)\n        cin &gt;&gt; a[i];\n    // \u6c42\u6ed1\u52a8\u7a97\u53e3\u6700\u5c0f\u503c\n    for(int i = 0; i &lt; n; i++){\n        // \u961f\u5217\u5b58\u50a8\u7684\u662f\u6ed1\u52a8\u7a97\u53e3\u7684\u6700\u5c0f\u503c\u7684\u7d22\u5f15\n        // \u961f\u5217\u7684\u957f\u5ea6\u4e0d\u4e00\u5b9a\u4e3ak\n\n        // \u7a97\u53e3\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u4e3aidx\uff0c\u957f\u5ea6\u4e3ak\u7684\u7a97\u53e3\u5bf9\u5e94\u7684\u672b\u5c3e\u5143\u7d20\u7684\u7d22\u5f15\u4e3aidx + k - 1\uff0c\u4e5f\u4e3ai\n        // \u6240\u4ee5i = idx + k - 1 \u6216idx = i - k + 1\n        // \u53ef\u63a8\u51fa\uff1a\n        // \uff081\uff09i = idx + k - 1:\n        //      \u6240\u4ee5\u4e00\u5f00\u59cbidx = 0\uff0c\u7a97\u53e3\u672a\u6ee1\uff0c\u5f80\u91cc\u9762\u586b\u5143\u7d20\uff0c\u5f53i == k - 1\u65f6\uff0c\u7a97\u53e3\u521a\u597d\u6ee1\uff1b\u4e4b\u540ei &gt; k - 1\n        // \uff082\uff09idx = i + k - 1:\n        //      \u60f3\u8981\u4fdd\u6301\u7a97\u53e3\u4e00\u76f4\u4e3ak\uff0c\u90a3\u4e48\u9700\u8981idx = i - k + 1 &lt;= q.front()\n        //      \u5982\u679ci - k + 1 &gt; q.front() \u8bf4\u660e\u961f\u5934\u5df2\u7ecf\u4e0d\u5728\u7a97\u53e3\u5185\uff0c\u9700\u8981\u5f39\u51fa\n\n\n        // pop\u524d\u4fdd\u8bc1\u961f\u5217\u4e0d\u4e3a\u7a7a \u4e14 \u4fdd\u8bc1\u7a97\u53e3\u59cb\u7ec8\u4fdd\u6301\u5728k\u4e2a\n        // \u5982\u679c\u8d85\u51fak\u4e2a\uff0c\u8bf4\u660e\u961f\u5934\u9700\u8981\u5f39\u51fa\n        // \u5982\u679c\u4e0d\u8db3\u6216\u7b49\u4e8ek\u4e2a\uff0c\u961f\u5934\u4e5f\u4e0d\u9700\u8981\u5f39\u51fa\n        while(!q.empty() &amp;&amp; i - k + 1 &gt; q.front()) q.pop_front();\n        // pop\u524d\u4fdd\u8bc1\u961f\u5217\u4e0d\u4e3a\u7a7a \u4e14 \u5982\u679c\u961f\u5c3e\u5143\u7d20a[q.back()]\u6bd4\u65b0\u5143\u7d20a[i]\u8fd8\u5c0f\n        // \u90a3\u4e48\u53ea\u8981a[i]\u8fd8\u5728\u7a97\u53e3\u5185\uff0c\u4e4b\u540e\u7a97\u53e3\u7684\u6700\u5c0f\u503c\u4e00\u5b9a\u4e0d\u4e3aa[q.back()]\n        // \u56e0\u6b64\u5f39\u51fa\u961f\u5c3e\u5143\u7d20\n        while(!q.empty() &amp;&amp; a[i] &lt; a[q.back()]) q.pop_back();\n        q.push_back(i);\n\n        if(i - k + 1 &gt;= 0)\n            cout &lt;&lt; a[q.front()] &lt;&lt; \" \";\n    }\n    q.clear();\n    cout &lt;&lt; endl;\n    // \u6c42\u6ed1\u52a8\u7a97\u53e3\u6700\u5927\u503c\n    for(int i = 0; i &lt; n; i++){\n        while(!q.empty() &amp;&amp; i - q.front() + 1 &gt; k) q.pop_front();\n        while(!q.empty() &amp;&amp; a[i] &gt; a[q.back()]) q.pop_back();\n        q.push_back(i);\n        if(i - k + 1 &gt;= 0)\n            cout &lt;&lt; a[q.front()] &lt;&lt; \" \";\n    }\n}\n</code></pre> <p>\u5f53\u7136\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\uff0c\u53ea\u9700\u8981\u6307\u5411\u539f\u6765\u7684\u6570\u7ec4\u5373\u53ef</p>"},{"location":"algorithm/leetcode/#_166","title":"\u56fe\uff1a\u7f51\u683c\u95ee\u9898","text":"<p>\u7f51\u683c\u95ee\u9898</p>"},{"location":"algorithm/leetcode/#_167","title":"\u5e76\u67e5\u96c6","text":"<p>\u53ef\u89e3\u51b3\u56fe\u7684\u8fde\u901a\u5206\u91cf\u95ee\u9898</p>"},{"location":"algorithm/leetcode/#_168","title":"\u5355\u8c03\u6808","text":""},{"location":"algorithm/leetcode/#stl","title":"STL","text":""},{"location":"algorithm/leetcode/#_169","title":"\u4e8c\u5206\u67e5\u627e","text":"<p>https://blog.csdn.net/weixin_45031801/article/details/137544229</p> <p>lower_bound( begin , end , val , less() ) \u4e0a\u8ff0\u4ee3\u7801\u4e2d\u52a0\u5165\u4e86 less() \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff1a\u9002\u7528\u4e8e\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u7684\u6709\u5e8f\u5e8f\u5217\uff0c\u4ece\u6570\u7ec4/\u5bb9\u5668\u7684 beign \u4f4d\u7f6e\u8d77\uff0c\u5230 end-1 \u4f4d\u7f6e\u7ed3\u675f\uff0c\u67e5\u627e\u7b2c\u4e00\u4e2a \u5927\u4e8e\u7b49\u4e8e val \u7684\u6570\u5b57 lower_bound( begin , end , val , greater() ) \u4e0a\u8ff0\u4ee3\u7801\u4e2d\u52a0\u5165\u4e86 greater() \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff1a\u9002\u7528\u4e8e\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u7684\u6709\u5e8f\u5e8f\u5217\uff0c\u4ece\u6570\u7ec4/\u5bb9\u5668\u7684 beign \u4f4d\u7f6e\u8d77\uff0c\u5230 end-1 \u4f4d\u7f6e\u7ed3\u675f\uff0c\u67e5\u627e\u7b2c\u4e00\u4e2a \u5c0f\u4e8e\u7b49\u4e8e val \u7684\u6570\u5b57"},{"location":"algorithm/leetcode/#upper_bound","title":"upper_bound","text":"<p>\u524d\u63d0\u662f\u6709\u5e8f\u7684\u60c5\u51b5\u4e0b\uff0cupper_bound\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5927\u4e8eval\u503c\u7684\u4f4d\u7f6e\u3002\uff08\u901a\u8fc7\u4e8c\u5206\u67e5\u627e\uff09</p>"},{"location":"algorithm/leetcode/#lower_bound","title":"lower_bound","text":"<p>\u524d\u63d0\u662f\u6709\u5e8f\u7684\u60c5\u51b5\u4e0b\uff0clower_bound \u8fd4\u56de\u6307\u5411\u7b2c\u4e00\u4e2a\u503c\u4e0d\u5c0f\u4e8e val \u7684\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8eval\u503c\u7684\u4f4d\u7f6e\u3002\uff08\u901a\u8fc7\u4e8c\u5206\u67e5\u627e\uff09</p> <p>*\u6ce8\u610f\uff1a*\u9700\u8981\u6ce8\u610f\u7684\u662f\u5982\u679c\u4f8b\u5b50\u4e2d\uff08val &gt;= 8\uff09,\u90a3\u4e48\u8fed\u4ee3\u5668\u5c31\u4f1a\u6307\u5411last\u4f4d\u7f6e\uff0c*\u4e5f\u5c31\u662f\u6570\u7ec4\u5c3e\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\uff0c\u4e0d\u7ba1val\u591a\u5927\uff0c\u8fed\u4ee3\u5668\u6c38\u8fdc\u6307\u5411\u5c3e\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e*</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nint main()\n{\n    vector&lt;int&gt; v = { 3,4,1,2,8 };\n    // \u5148\u6392\u5e8f\n    sort(v.begin(), v.end());  // 1 2 3 4 8\n\n    // \u5b9a\u4e49\u4e24\u4e2a\u8fed\u4ee3\u5668\u53d8\u91cf\n    vector&lt;int&gt;::iterator iter1;\n    vector&lt;int&gt;::iterator iter2;\n\n    // \u5728\u52a8\u6001\u6570\u7ec4\u4e2d\u5bfb\u627e &gt;=3 \u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u6570 \u5e76\u4ee5\u8fed\u4ee3\u5668\u7684\u5f62\u5f0f\u8fd4\u56de\n    iter1 = lower_bound(v.begin(), v.end(), 3);  // -- \u6307\u54113\n    // \u5728\u52a8\u6001\u6570\u7ec4\u4e2d\u5bfb\u627e &gt;=7 \u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u6570 \u5e76\u4ee5\u8fed\u4ee3\u5668\u7684\u5f62\u5f0f\u8fd4\u56de\n    iter2 = lower_bound(v.begin(), v.end(), 7);  // -- \u6307\u54118\n\n    cout &lt;&lt; distance(v.begin(), iter1) &lt;&lt; endl; //\u4e0b\u6807 2\n    cout &lt;&lt; distance(v.begin(), iter2) &lt;&lt; endl; //\u4e0b\u6807 4 \n    return 0;\n}\n</code></pre>"},{"location":"algorithm/leetcode/#_170","title":"\u5176\u4ed6\u7ec6\u8282","text":"<pre><code>while(index--){\n}\n</code></pre> <p>\u7b49\u4ef7\u4e8e</p> <pre><code>for(int i = 0; i &lt; index; i++){\n}\n</code></pre>"},{"location":"computer_basic/Git/","title":"Git","text":""},{"location":"computer_basic/Git/#_1","title":"\u53c2\u8003","text":"<p>https://liaoxuefeng.com/books/git/what-is-git/svn-vs-git/index.html</p> <p>https://www.runoob.com/git/git-tutorial.html</p>"},{"location":"computer_basic/Git/#git_1","title":"Git\u662f\u4ec0\u4e48","text":"<p>Git\u662f\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf</p> <p>\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u5206\u4e3a\u4e24\u79cd</p> <ul> <li>\u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236</li> <li>\u7ef4\u62a4\u4e00\u4e2a\u4e2d\u592e\u670d\u52a1\u5668\uff0c\u6240\u6709\u7248\u672c\u5e93\u5b58\u653e\u5728\u4e2d\u592e\u670d\u52a1\u5668\uff0c\u7528\u6237\u60f3\u83b7\u53d6\u7248\u672c\uff0c\u9700\u8981\u4ece\u4e2d\u592e\u670d\u52a1\u5668\u83b7\u53d6\uff0c\u66f4\u6539\u540e\u518d\u5c06\u7248\u672c\u66f4\u65b0\u5230\u4e2d\u592e\u670d\u52a1\u5668</li> <li>\u4f8b\u5982SVN</li> <li>\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236</li> <li>\u6bcf\u4e2a\u7528\u6237\u7ef4\u62a4\u4e00\u4e2a\u5b8c\u6574\u7684\u7248\u672c\u5e93\uff0c\u7528\u6237\u4e4b\u95f4\u901a\u8fc7\u76f8\u4e92\u63a8\u9001\u66f4\u65b0\u7248\u672c\uff08\u4e3a\u4e86\u65b9\u4fbf\uff0cGit\u62e5\u6709\u4e2d\u592e\u670d\u52a1\u5668\uff0c\u65b9\u4fbf\u7528\u6237\u4e4b\u95f4\u4ea4\u6362\u63a8\u9001\uff09</li> <li>\u4f8b\u5982Git</li> </ul>"},{"location":"computer_basic/Git/#_2","title":"\u6682\u5b58\u533a\u3001\u5de5\u4f5c\u533a\u548c\u7248\u672c\u5e93\u7684\u5173\u7cfb","text":"<ul> <li>\u56fe\u4e2d\u5de6\u4fa7\u4e3a\u5de5\u4f5c\u533a\uff0c\u53f3\u4fa7\u4e3a\u7248\u672c\u5e93\u3002\u5728\u7248\u672c\u5e93\u4e2d\u6807\u8bb0\u4e3a \"index\" \u7684\u533a\u57df\u662f\u6682\u5b58\u533a\uff08stage/index\uff09\uff0c\u6807\u8bb0\u4e3a \"master\" \u7684\u662f master \u5206\u652f\u6240\u4ee3\u8868\u7684\u76ee\u5f55\u6811\u3002</li> <li>\u56fe\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u6b64\u65f6 \"HEAD\" \u5b9e\u9645\u662f\u6307\u5411 master \u5206\u652f\u7684\u4e00\u4e2a\"\u6e38\u6807\"\u3002\u6240\u4ee5\u56fe\u793a\u7684\u547d\u4ee4\u4e2d\u51fa\u73b0 HEAD \u7684\u5730\u65b9\u53ef\u4ee5\u7528 master \u6765\u66ff\u6362\u3002</li> <li>\u56fe\u4e2d\u7684 objects \u6807\u8bc6\u7684\u533a\u57df\u4e3a Git \u7684\u5bf9\u8c61\u5e93\uff0c\u5b9e\u9645\u4f4d\u4e8e \".git/objects\" \u76ee\u5f55\u4e0b\uff0c\u91cc\u9762\u5305\u542b\u4e86\u521b\u5efa\u7684\u5404\u79cd\u5bf9\u8c61\u53ca\u5185\u5bb9\u3002</li> <li>\u5f53\u5bf9\u5de5\u4f5c\u533a\u4fee\u6539\uff08\u6216\u65b0\u589e\uff09\u7684\u6587\u4ef6\u6267\u884c git add \u547d\u4ee4\u65f6\uff0c\u6682\u5b58\u533a\u7684\u76ee\u5f55\u6811\u88ab\u66f4\u65b0\uff0c\u540c\u65f6\u5de5\u4f5c\u533a\u4fee\u6539\uff08\u6216\u65b0\u589e\uff09\u7684\u6587\u4ef6\u5185\u5bb9\u88ab\u5199\u5165\u5230\u5bf9\u8c61\u5e93\u4e2d\u7684\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\u4e2d\uff0c\u800c\u8be5\u5bf9\u8c61\u7684ID\u88ab\u8bb0\u5f55\u5728\u6682\u5b58\u533a\u7684\u6587\u4ef6\u7d22\u5f15\u4e2d\u3002</li> <li>\u5f53\u6267\u884c\u63d0\u4ea4\u64cd\u4f5c\uff08git commit\uff09\u65f6\uff0c\u6682\u5b58\u533a\u7684\u76ee\u5f55\u6811\u5199\u5230\u7248\u672c\u5e93\uff08\u5bf9\u8c61\u5e93\uff09\u4e2d\uff0cmaster \u5206\u652f\u4f1a\u505a\u76f8\u5e94\u7684\u66f4\u65b0\u3002\u5373 master \u6307\u5411\u7684\u76ee\u5f55\u6811\u5c31\u662f\u63d0\u4ea4\u65f6\u6682\u5b58\u533a\u7684\u76ee\u5f55\u6811\u3002</li> <li>\u5f53\u6267\u884c git reset HEAD \u547d\u4ee4\u65f6\uff0c\u6682\u5b58\u533a\u7684\u76ee\u5f55\u6811\u4f1a\u88ab\u91cd\u5199\uff0c\u88ab master \u5206\u652f\u6307\u5411\u7684\u76ee\u5f55\u6811\u6240\u66ff\u6362\uff0c\u4f46\u662f\u5de5\u4f5c\u533a\u4e0d\u53d7\u5f71\u54cd\u3002</li> <li>\u5f53\u6267\u884c git rm --cached  \u547d\u4ee4\u65f6\uff0c\u4f1a\u76f4\u63a5\u4ece\u6682\u5b58\u533a\u5220\u9664\u6587\u4ef6\uff0c\u5de5\u4f5c\u533a\u5219\u4e0d\u505a\u51fa\u6539\u53d8\u3002 <li>\u5f53\u6267\u884c git checkout . \u6216\u8005 git checkout --  \u547d\u4ee4\u65f6\uff0c\u4f1a\u7528\u6682\u5b58\u533a\u5168\u90e8\u6216\u6307\u5b9a\u7684\u6587\u4ef6\u66ff\u6362\u5de5\u4f5c\u533a\u7684\u6587\u4ef6\u3002\u8fd9\u4e2a\u64cd\u4f5c\u5f88\u5371\u9669\uff0c\u4f1a\u6e05\u9664\u5de5\u4f5c\u533a\u4e2d\u672a\u6dfb\u52a0\u5230\u6682\u5b58\u533a\u4e2d\u7684\u6539\u52a8\u3002 <li>\u5f53\u6267\u884c git checkout HEAD . \u6216\u8005 git checkout HEAD  \u547d\u4ee4\u65f6\uff0c\u4f1a\u7528 HEAD \u6307\u5411\u7684 master \u5206\u652f\u4e2d\u7684\u5168\u90e8\u6216\u8005\u90e8\u5206\u6587\u4ef6\u66ff\u6362\u6682\u5b58\u533a\u548c\u4ee5\u53ca\u5de5\u4f5c\u533a\u4e2d\u7684\u6587\u4ef6\u3002\u8fd9\u4e2a\u547d\u4ee4\u4e5f\u662f\u6781\u5177\u5371\u9669\u6027\u7684\uff0c\u56e0\u4e3a\u4e0d\u4f46\u4f1a\u6e05\u9664\u5de5\u4f5c\u533a\u4e2d\u672a\u63d0\u4ea4\u7684\u6539\u52a8\uff0c\u4e5f\u4f1a\u6e05\u9664\u6682\u5b58\u533a\u4e2d\u672a\u63d0\u4ea4\u7684\u6539\u52a8\u3002"},{"location":"computer_basic/Git/#_3","title":"\u57fa\u672c\u64cd\u4f5c","text":""},{"location":"computer_basic/Git/#git-initgit-addgit-commit","title":"git init/git add/git commit","text":"<p>\u76ee\u5f55\u5c31\u662f\u5de5\u4f5c\u533a</p> <p>\u7248\u672c\u5e93\u5c31\u662f\u5de5\u4f5c\u533a\u4e2d\u7684<code>.ssh</code>\u6587\u4ef6\u5939</p> <p>\u7248\u672c\u5e93\u4e2d\u6700\u91cd\u8981\u7684\u5c31\u662f\u79f0\u4e3astage\uff08\u6216\u8005\u53ebindex\uff09\u7684\u6682\u5b58\u533a\uff0c\u8fd8\u6709Git\u4e3a\u6211\u4eec\u81ea\u52a8\u521b\u5efa\u7684\u7b2c\u4e00\u4e2a\u5206\u652f<code>master</code>\uff0c\u4ee5\u53ca\u6307\u5411<code>master</code>\u7684\u4e00\u4e2a\u6307\u9488\u53eb<code>HEAD</code>\u3002</p> <pre><code>git init #\u521b\u5efa\u7248\u672c\u5e93\n\ngit add &lt;file&gt; #\u6dfb\u52a0\u6587\u4ef6 \ngit add . #\u6dfb\u52a0\u6240\u6709\u6587\u4ef6\n\ngit commit -m &lt;message&gt; #\u63d0\u4ea4\u4fee\u6539\n</code></pre> <p><code>git add</code>\u547d\u4ee4\u5b9e\u9645\u4e0a\u5c31\u662f\u628a\u8981\u63d0\u4ea4\u7684\u6240\u6709\u4fee\u6539\u653e\u5230\u6682\u5b58\u533a\uff08Stage\uff09\uff0c\u7136\u540e\uff0c\u6267\u884c<code>git commit</code>\u5c31\u53ef\u4ee5\u4e00\u6b21\u6027\u628a\u6682\u5b58\u533a\u7684\u6240\u6709\u4fee\u6539\u63d0\u4ea4\u5230\u5206\u652f\u3002</p> <p><code>git status</code>\u663e\u793a\u7684\u5c31\u662f\u6682\u5b58\u533a\u7684\u72b6\u6001</p>"},{"location":"computer_basic/Git/#git-diff","title":"git diff","text":"<p>\u63d0\u4ea4\u540e\uff0c\u7528<code>git diff HEAD -- readme.txt</code>\u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u5de5\u4f5c\u533a\u548c\u7248\u672c\u5e93\u91cc\u9762\u6700\u65b0\u7248\u672c\u7684\u533a\u522b</p> <p>git diff \u6709\u4e24\u4e2a\u4e3b\u8981\u7684\u5e94\u7528\u573a\u666f\u3002</p> <ul> <li>\u5c1a\u672a\u7f13\u5b58\u7684\u6539\u52a8\uff1agit diff</li> <li>\u67e5\u770b\u5df2\u7f13\u5b58\u7684\u6539\u52a8\uff1a git diff --cached</li> <li>\u67e5\u770b\u5df2\u7f13\u5b58\u7684\u4e0e\u672a\u7f13\u5b58\u7684\u6240\u6709\u6539\u52a8\uff1agit diff HEAD</li> <li>\u663e\u793a\u6458\u8981\u800c\u975e\u6574\u4e2a diff\uff1agit diff --stat</li> </ul> <p>\u663e\u793a\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u5dee\u5f02:</p> <pre><code>$ git diff [file]\n</code></pre> <p>\u663e\u793a\u6682\u5b58\u533a\u548c\u4e0a\u4e00\u6b21\u63d0\u4ea4(commit)\u7684\u5dee\u5f02:</p> <pre><code>$ git diff --cached [file]\n\u6216\n$ git diff --staged [file]\n</code></pre> <p>\u663e\u793a\u4e24\u6b21\u63d0\u4ea4\u4e4b\u95f4\u7684\u5dee\u5f02:</p> <pre><code>$ git diff [first-branch]...[second-branch]\n</code></pre>"},{"location":"computer_basic/Git/#_4","title":"\u56de\u9000\u64cd\u4f5c","text":"<p>\u8fd9\u91cc\u7684\u56de\u9000\u4e0d\u4ec5\u4ec5\u662f\u56de\u5230\u5386\u53f2\u64cd\u4f5c\uff0c\u8fd8\u53ef\u4ee5\u6062\u590d\u88ab\u56de\u9000\u4e86\u4e4b\u540e\u7684\u64cd\u4f5c</p> <p>\u672c\u8d28\u4e0a\u662f\u79fb\u52a8HEAD\u6307\u9488</p> <p><code>git log</code>\u7528\u4e8e\u67e5\u770bcommit\u8bb0\u5f55\uff0c\u663e\u793a\u4ece\u6700\u8fd1\u5230\u6700\u8fdc\u7684\u63d0\u4ea4\u65e5\u5fd7</p> <p>Git\u7684\u7248\u672c\u56de\u9000\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u56e0\u4e3aGit\u5728\u5185\u90e8\u6709\u4e2a\u6307\u5411\u5f53\u524d\u7248\u672c\u7684<code>HEAD</code>\u6307\u9488\uff0c\u5f53\u4f60\u56de\u9000\u7248\u672c\u7684\u65f6\u5019\uff0cGit\u4ec5\u4ec5\u662f\u628aHEAD\u4ece\u6307\u5411<code>append GPL</code>\uff1a</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2510\n\u2502HEAD\u2502\n\u2514\u2500\u2500\u2500\u2500\u2518\n   \u2502\n   \u2514\u2500\u2500\u25b6 \u25cb append GPL\n        \u2502\n        \u25cb add distributed\n        \u2502\n        \u25cb wrote a readme file\n</code></pre> <p>\u6539\u4e3a\u6307\u5411<code>add distributed</code>\uff1a</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2510\n\u2502HEAD\u2502\n\u2514\u2500\u2500\u2500\u2500\u2518\n   \u2502\n   \u2502    \u25cb append GPL\n   \u2502    \u2502\n   \u2514\u2500\u2500\u25b6 \u25cb add distributed\n        \u2502\n        \u25cb wrote a readme file\n</code></pre> <p>\u7136\u540e\u987a\u4fbf\u628a\u5de5\u4f5c\u533a\u7684\u6587\u4ef6\u66f4\u65b0\u4e86\u3002\u6240\u4ee5\u4f60\u8ba9<code>HEAD</code>\u6307\u5411\u54ea\u4e2a\u7248\u672c\u53f7\uff0c\u4f60\u5c31\u628a\u5f53\u524d\u7248\u672c\u5b9a\u4f4d\u5728\u54ea\u3002</p> <p>\u5728Git\u4e2d\uff0c\u7528<code>HEAD</code>\u8868\u793a\u5f53\u524d\u7248\u672c\uff0c\uff0c\u4e0a\u4e00\u4e2a\u7248\u672c\u5c31\u662f<code>HEAD^</code>\uff0c\u4e0a\u4e0a\u4e00\u4e2a\u7248\u672c\u5c31\u662f<code>HEAD^^</code>\uff0c\u5f53\u7136\u5f80\u4e0a100\u4e2a\u7248\u672c\u5199100\u4e2a<code>^</code>\u6bd4\u8f83\u5bb9\u6613\u6570\u4e0d\u8fc7\u6765\uff0c\u6240\u4ee5\u5199\u6210<code>HEAD~100</code>\u3002</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u8981\u628a\u5f53\u524d\u7248\u672c<code>append GPL</code>\u56de\u9000\u5230\u4e0a\u4e00\u4e2a\u7248\u672c<code>add distributed</code>\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528<code>git reset</code>\u547d\u4ee4\uff1a</p> <pre><code>$ git reset --hard HEAD^\nHEAD is now at e475afc add distributed\n</code></pre> <p>\u5173\u4e8e<code>git reset</code>\u56de\u9000\u64cd\u4f5c\u7684\u53c2\u6570</p> <ul> <li><code>--hard</code>\u4f1a\u56de\u9000\u5230\u4e0a\u4e2a\u7248\u672c\u7684\u5df2\u63d0\u4ea4\u72b6\u6001</li> <li><code>--soft</code>\u4f1a\u56de\u9000\u5230\u4e0a\u4e2a\u7248\u672c\u7684\u672a\u63d0\u4ea4\u72b6\u6001</li> <li><code>--mixed</code>\u4f1a\u56de\u9000\u5230\u4e0a\u4e2a\u7248\u672c\u5df2\u6dfb\u52a0\u4f46\u672a\u63d0\u4ea4\u7684\u72b6\u6001\u3002</li> </ul> <p>Git\u4e0d\u4ec5\u80fd\u591f\u56de\u9000\u5386\u53f2\u64cd\u4f5c\uff0c\u8fd8\u80fd\u6062\u590d\u64cd\u4f5c</p> <pre><code>$ git reset --hard &lt;commit_id&gt; #commit_id\u4e0d\u7528\u5199\u5168\uff0c\u53ef\u4ee5\u5199\u524d\u51e0\u4f4d\uff0c\u80fd\u548c\u5176\u4ed6commit_id\u533a\u5206\u5c31\u884c\n</code></pre> <p>\u5982\u679c\u4e0d\u77e5\u9053commit_id\u600e\u4e48\u529e</p> <ul> <li>Git\u63d0\u4f9b\u4e86\u4e00\u4e2a\u547d\u4ee4<code>git reflog</code>\u7528\u6765\u8bb0\u5f55\u4f60\u7684\u6bcf\u4e00\u6b21\u547d\u4ee4</li> <li>\u901a\u8fc7\u8be5\u547d\u4ee4\u53ef\u83b7\u53d6commit_id</li> </ul>"},{"location":"computer_basic/Linux/","title":"Linux","text":""},{"location":"computer_basic/Linux/#_1","title":"\u5e38\u7528\u547d\u4ee4","text":""},{"location":"computer_basic/Linux/#netstat","title":"netstat","text":"<p>\u67e5\u770b\u6574\u4e2aLinux\u7cfb\u7edf\u7684\u7f51\u7edc\u60c5\u51b5</p> <pre><code>-a   \u6216\u2013all                             \u663e\u793a\u6240\u6709\u8fde\u7ebf\u4e2d\u7684Socket\u3002\n-A                                       &lt;\u7f51\u7edc\u7c7b\u578b&gt;\u6216\u2013&lt;\u7f51\u7edc\u7c7b\u578b&gt; \u5217\u51fa\u8be5\u7f51\u7edc\u7c7b\u578b\u8fde\u7ebf\u4e2d\u7684\u76f8\u5173\u5730\u5740\u3002\n-c   \u6216\u2013continuous               \u6301\u7eed\u5217\u51fa\u7f51\u7edc\u72b6\u6001\u3002\n-C \u6216\u2013cache                       \u663e\u793a\u8def\u7531\u5668\u914d\u7f6e\u7684\u5feb\u53d6\u4fe1\u606f\u3002\n-e  \u6216\u2013extend                     \u663e\u793a\u7f51\u7edc\u5176\u4ed6\u76f8\u5173\u4fe1\u606f\u3002\n-F  \u6216 \u2013fib                          \u663e\u793aFIB\u3002\n-g  \u6216\u2013groups                     \u663e\u793a\u591a\u91cd\u5e7f\u64ad\u529f\u80fd\u7fa4\u7ec4\u7ec4\u5458\u540d\u5355\u3002\n-h  \u6216\u2013help                        \u5728\u7ebf\u5e2e\u52a9\u3002\n-i   \u6216\u2013interfaces                 \u663e\u793a\u7f51\u7edc\u754c\u9762\u4fe1\u606f\u8868\u5355\u3002\n-l  \u6216\u2013listening                    \u663e\u793a\u76d1\u63a7\u4e2d\u7684\u670d\u52a1\u5668\u7684Socket\u3002\n-M   \u6216\u2013masquerade           \u663e\u793a\u4f2a\u88c5\u7684\u7f51\u7edc\u8fde\u7ebf\u3002\n-n  \u6216\u2013numeric                   \u76f4\u63a5\u4f7f\u7528IP\u5730\u5740\uff0c\u800c\u4e0d\u901a\u8fc7\u57df\u540d\u670d\u52a1\u5668\u3002\n-N   \u6216\u2013netlink\u6216\u2013symbolic  \u663e\u793a\u7f51\u7edc\u786c\u4ef6\u5916\u56f4\u8bbe\u5907\u7684\u7b26\u53f7\u8fde\u63a5\u540d\u79f0\u3002\n-o  \u6216\u2013timers                      \u663e\u793a\u8ba1\u65f6\u5668\u3002\n-p   \u6216\u2013programs                \u663e\u793a\u6b63\u5728\u4f7f\u7528Socket\u7684\u7a0b\u5e8f\u8bc6\u522b\u7801\u548c\u7a0b\u5e8f\u540d\u79f0\u3002\n-r  \u6216\u2013route                        \u663e\u793a Routing Table\u3002\n-s  \u6216\u2013statistice \u663e\u793a\u7f51\u7edc\u5de5\u4f5c\u4fe1\u606f\u7edf\u8ba1\u8868\u3002\n-t  \u6216\u2013tcp \u663e\u793aTCP \u4f20\u8f93\u534f\u8bae\u7684\u8fde\u7ebf\u72b6\u51b5\u3002\n-u\u6216\u2013udp \u663e\u793aUDP\u4f20\u8f93\u534f\u8bae\u7684\u8fde\u7ebf\u72b6\u51b5\u3002\n-v\u6216\u2013verbose \u663e\u793a\u6307\u4ee4\u6267\u884c\u8fc7\u7a0b\u3002\n-V \u6216\u2013version \u663e\u793a\u7248\u672c\u4fe1\u606f\u3002\n-w\u6216\u2013raw \u663e\u793aRAW\u4f20\u8f93\u534f\u8bae\u7684\u8fde\u7ebf\u72b6\u51b5\u3002\n-x\u6216\u2013unix \u6b64\u53c2\u6570\u7684\u6548\u679c\u548c\u6307\u5b9a\u201d-A unix\u201d\u53c2\u6570\u76f8\u540c\u3002\n\u2013ip\u6216\u2013inet \u6b64\u53c2\u6570\u7684\u6548\u679c\u548c\u6307\u5b9a\u201d-A inet\u201d\u53c2\u6570\u76f8\u540c\u3002\n</code></pre> <p>\u5e38\u7528\u547d\u4ee4\u5982\u4e0b\uff1a</p> <pre><code>netstat -ntlp //\u67e5\u770b\u5f53\u524d\u6240\u6709tcp\u7aef\u53e3\u4f7f\u7528\u60c5\u51b5 \n\nnetstat -ntulp | grep 80 //\u67e5\u770b\u6240\u670980\u7aef\u53e3\u7684\u4f7f\u7528\u60c5\u51b5    \n\nnetstat -an | grep 3306   //\u67e5\u770b\u6240\u67093306\u7aef\u53e3\u4f7f\u7528\u60c5\u51b5\n\nnetstat -nlp | grep LISTEN   //\u67e5\u770b\u5f53\u524d\u6240\u6709\u76d1\u542c\u7aef\u53e3\n</code></pre> <p>\u89e3\u91ca\u4e00\u4e0b\u72b6\u6001\uff08state\uff09\u4e86</p> <ul> <li>LISTEN\uff1a(Listening for a connection.)\u4fa6\u542c\u6765\u81ea\u8fdc\u65b9\u7684TCP\u7aef\u53e3\u7684\u8fde\u63a5\u8bf7\u6c42</li> <li>SYN-SENT\uff1a(Active; sent SYN. Waiting for a matching connection request after having sent a connection request.)\u518d\u53d1\u9001\u8fde\u63a5\u8bf7\u6c42\u540e\u7b49\u5f85\u5339\u914d\u7684\u8fde\u63a5\u8bf7\u6c42</li> <li>SYN-RECEIVED\uff1a(Sent and received SYN. Waiting for a confirming connection request acknowledgment after having both received and sent connection requests.)\u518d\u6536\u5230\u548c\u53d1\u9001\u4e00\u4e2a\u8fde\u63a5\u8bf7\u6c42\u540e\u7b49\u5f85\u5bf9\u65b9\u5bf9\u8fde\u63a5\u8bf7\u6c42\u7684\u786e\u8ba4</li> <li>ESTABLISHED\uff1a(Connection established.)\u4ee3\u8868\u4e00\u4e2a\u6253\u5f00\u7684\u8fde\u63a5</li> <li>FIN-WAIT-1\uff1a(Closed; sent FIN.)\u7b49\u5f85\u8fdc\u7a0bTCP\u8fde\u63a5\u4e2d\u65ad\u8bf7\u6c42\uff0c\u6216\u5148\u524d\u7684\u8fde\u63a5\u4e2d\u65ad\u8bf7\u6c42\u7684\u786e\u8ba4</li> <li>FIN-WAIT-2\uff1a(Closed; FIN is acknowledged; awaiting FIN.)\u4ece\u8fdc\u7a0bTCP\u7b49\u5f85\u8fde\u63a5\u4e2d\u65ad\u8bf7\u6c42</li> <li>CLOSE-WAIT\uff1a(Received FIN; waiting to receive CLOSE.)\u7b49\u5f85\u4ece\u672c\u5730\u7528\u6237\u53d1\u6765\u7684\u8fde\u63a5\u4e2d\u65ad\u8bf7\u6c42</li> <li>CLOSING\uff1a(Closed; exchanged FIN; waiting for FIN.)\u7b49\u5f85\u8fdc\u7a0bTCP\u5bf9\u8fde\u63a5\u4e2d\u65ad\u7684\u786e\u8ba4</li> <li>LAST-ACK\uff1a(Received FIN and CLOSE; waiting for FIN ACK.)\u7b49\u5f85\u539f\u6765\u7684\u53d1\u5411\u8fdc\u7a0bTCP\u7684\u8fde\u63a5\u4e2d\u65ad\u8bf7\u6c42\u7684\u786e\u8ba4</li> <li>TIME-WAIT\uff1a(In 2 MSL (twice the maximum segment length) quiet wait after close. )\u7b49\u5f85\u8db3\u591f\u7684\u65f6\u95f4\u4ee5\u786e\u4fdd\u8fdc\u7a0bTCP\u63a5\u6536\u5230\u8fde\u63a5\u4e2d\u65ad\u8bf7\u6c42\u7684\u786e\u8ba4</li> <li>CLOSED\uff1a(Connection is closed.)\u6ca1\u6709\u4efb\u4f55\u8fde\u63a5\u72b6\u6001</li> </ul> <p>route </p> <p>arp</p> <p>top</p> <p>\u4e0b\u9762\u8fd9\u4e2a\u547d\u4ee4\u53ef\u4ee5\u5b9a\u4f4d\u50f5\u5c38\u8fdb\u7a0b\u4ee5\u53ca\u8be5\u50f5\u5c38\u8fdb\u7a0b\u7684\u7236\u8fdb\u7a0b\uff1a</p> <pre><code>ps -A -ostat,ppid,pid,cmd |grep -e '^[Zz]'\n</code></pre>"},{"location":"computer_basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/","title":"\u8ba1\u7b97\u673a\u7f51\u7edc","text":""},{"location":"computer_basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/#_2","title":"\u603b\u89c8","text":""},{"location":"computer_basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/#tcpip","title":"TCP/IP\u6a21\u578b","text":"<ul> <li>\u5e94\u7528\u5c42\uff1a</li> <li>\u63d0\u4f9b\u5e94\u7528\u670d\u52a1</li> <li>HTTP/FTP\u534f\u8bae</li> <li>\u4f20\u8f93\u5c42\uff1a</li> <li>\u4e3a\u5e94\u7528\u63d0\u4f9b\u6570\u636e\u4f20\u8f93\u670d\u52a1\uff0c\u5e94\u7528\uff08\u7aef\uff09\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u901a\u8fc7\u7aef\u53e3\u533a\u5206\u5e94\u7528</li> <li>TCP/UDP\u534f\u8bae</li> <li>\u7f51\u7edc\u5c42\uff1a</li> <li>\u8bbe\u5907\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u901a\u8fc7ip\u5730\u5740\u6807\u8bc6\u4e3b\u673a\uff08\u8bbe\u5907\uff09</li> <li>ip\u5730\u5740\u5305\u542b\u4fe1\u606f\uff1a\u5b50\u7f51\u53f7 + \u4e3b\u673a\u53f7\uff0c\u5b50\u7f51\u53f7\u901a\u8fc7\u5b50\u7f51\u63a9\u7801\u8ba1\u7b97\u5f97\u5230</li> <li>IP\u534f\u8bae\uff1a\u5bfb\u5740 + \u8def\u7531<ul> <li>\u5bfb\u5740\uff1a\u901a\u8fc7ip\u5730\u5740\u627e\u5230\u5bf9\u5e94\u7684\u5b50\u7f51\u548c\u4e3b\u673a\uff0c\u786e\u8ba4\u76ee\u7684\u5730</li> <li>\u8def\u7531\uff1a\u8def\u7531\u5668\u6839\u636eip\u5730\u5740\u786e\u8ba4\u8f6c\u53d1\u8def\u5f84</li> </ul> </li> <li>\u6570\u636e\u94fe\u8def\u5c42\uff1a</li> <li>\u7269\u7406\u94fe\u8def\u4e4b\u95f4\u901a\u4fe1\uff08\u8fd9\u91cc\u7684\u7aef\u6307\uff1a\u4ee5\u592a\u7f51\u63a5\u53e3\uff0c\u4e00\u53f0\u8bbe\u5907\u62e5\u6709\u591a\u4e2a\u63a5\u53e3\uff0c\u800c\u4e00\u53f0\u8bbe\u5907\u53ea\u6709\u4e00\u4e2aip\u5730\u5740\uff0c\u9700\u8981MAC\u5730\u5740\u533a\u5206\u63a5\u540c\u4e00\u8bbe\u5907\u7684\u4e0d\u540c\u63a5\u53e3\uff09</li> <li>ARP\u534f\u8bae\uff1a\u6839\u636eIP\u5730\u5740\u786e\u8ba4MAC\u5730\u5740</li> </ul>"},{"location":"computer_basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/#_3","title":"\u952e\u5165\u7f51\u5740\u5230\u7f51\u9875\u663e\u793a\uff0c\u671f\u95f4\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f","text":"<p>\u6d4f\u89c8\u5668\u8f93\u5165URL\u540e\uff1a</p> <ol> <li>\u6d4f\u89c8\u5668\u8bfb\u53d6URL\uff0c\u901a\u8fc7URL\u83b7\u53d6\u4ee5\u4e0b\u4fe1\u606f</li> <li>\u534f\u8bae\uff1ahttp / https</li> <li>\u670d\u52a1\u5668\u540d\u5b57\uff08\u57df\u540d\uff09</li> <li>\u670d\u52a1\u5668\u4e0a\u7684\u8d44\u6e90\u8def\u5f84</li> <li>\u5e94\u7528\u7a0b\u5e8f\u6253\u5305http\u8bf7\u6c42\u62a5\u6587</li> <li>DNS\u57df\u540d\u89e3\u6790</li> <li>\u5e94\u7528\u7a0b\u5e8f\u6253\u5305http\u8bf7\u6c42\u62a5\u6587\u540e\uff0c\u9700\u8981\u5c06\u5176\u4ea4\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u534f\u8bae\u6808\uff0c\u534f\u8bae\u6808\u9664\u4e86\u9700\u8981http\u8bf7\u6c42\u62a5\u6587\uff0c\u8fd8\u9700\u8981ip\u5730\u5740</li> <li>DNS\u57df\u540d\u89e3\u6790\u7684\u4f5c\u7528\u5c31\u662f\u5c06\u57df\u540d\u89e3\u6790\u4e3a\u5bf9\u5e94\u7684ip\u5730\u5740</li> <li>\u534f\u8bae\u6808\u5de5\u4f5c\uff1a\u751f\u6210\u7f51\u7edc\u5305</li> <li>\u534f\u8bae\u6808\u5305\u542b\u4e86TCP/UDP\u534f\u8bae\u3001IP\u534f\u8bae\u3001ICMP\u534f\u548cARP\u534f\u8bae\uff08http\u62a5\u6587\u4f7f\u7528TCP\u534f\u8bae\uff09\u3002\u4e5f\u5c31\u662f\u8bf4\u534f\u8bae\u6808\u5305\u542b\u4e86\u4f20\u8f93\u5c42\u548c\u7f51\u7edc\u5c42</li> <li>TCP/UDP\u534f\u8bae\uff1a\u6dfb\u52a0TCP/UDP\u5934\u90e8\uff0c\u5728TCP\u4e2d\u5982\u679chttp\u62a5\u6587\u8d85\u51faMSS\uff0c\u4f1a\u5bf9\u5176\u8fdb\u884c\u5207\u5272</li> <li>IP\u534f\u8bae\uff1a\u6dfb\u52a0IP\u5934\u90e8\uff0c\u5982\u679c\u7f51\u7edc\u5305\u8d85\u8fc7MTU\uff08\u901a\u5e38\u4e3a1500\u5b57\u8282\uff09\uff0c\u4f1a\u5728\u7f51\u7edc\u5c42\u5206\u7247\u3002<ul> <li>\u7ef4\u62a4\u4e00\u4e2a\u8def\u7531\u8868\uff08Linux <code>route -n</code>\u67e5\u770b\uff09</li> <li>\u8def\u7531\u8868\u8bb0\u5f55\uff1a\u76ee\u6807ip\u5730\u5740\uff08\u5b50\u7f51\uff09+ \u7f51\u5173\u5730\u5740 + \u5b50\u7f51\u63a9\u7801 + \u8def\u7531\u5668\u8f6c\u53d1\u7aef\u53e3 + \u7f51\u5361\u540d<ul> <li>\u76ee\u6807ip\u5730\u5740\uff08\u5b50\u7f51\uff09\u548c\u5b50\u7f51\u63a9\u7801\u5747\u4e3a0.0.0.0\u4e3a\u9ed8\u8ba4\u7f51\u5173\uff0c\u9ed8\u8ba4\u7f51\u5173ip\u5730\u5740\u4e3a \u7f51\u5173\u5730\u5740\u5217\u4e0b\u7684 ip\u5730\u5740\u3002\u5339\u914d\u9ed8\u8ba4\u7f51\u5173\u4f1a\u5c06\u7f51\u7edc\u5305\u8f6c\u53d1\u5230\u9ed8\u8ba4\u7f51\u5173\u5730\u5740</li> <li>\u5982\u679c\u5339\u914d\u7684\u4e0d\u662f\u9ed8\u8ba4\u7f51\u5173</li> <li>\u5982\u679c\u7f51\u5173\u5730\u5740\u4e3a\u7a7a\uff0c\u8bf4\u660e\u5f53\u524d\u8def\u7531\u5668\u5c31\u5728ip\u5305\u4e2d\u7684\u5b50\u7f51\u5730\u5740\uff0c\u4e0d\u9700\u8def\u7531\u5668\u8f6c\u53d1\uff0c\u63a5\u4e0b\u6765\u4ea4\u7ed9mac</li> <li>\u5982\u679c\u7f51\u5173\u5730\u5740\u4e0d\u4e3a\u7a7a\uff0c\u8bf4\u660e\u5f53\u524d\u8def\u7531\u5668\u4e0d\u5728ip\u5305\u4e2d\u7684\u5b50\u7f51\u5730\u5740\uff0c\u9700\u8981\u8def\u7531\u5668\u7ee7\u7eed\u8f6c\u53d1\u5230\u5176\u4ed6\u5b50\u7f51</li> </ul> </li> </ul> </li> <li>\u6dfb\u52a0MAC\u5934\u90e8\uff0c\u901a\u8fc7ARP\u7f13\u5b58\u83b7\u53d6MAC\u5730\u5740\uff0c\u5982\u679c\u4e0d\u77e5\u9053\u63a5\u6536\u65b9\u7684MAC\u5730\u5740\uff0c\u901a\u8fc7ARP\u534f\u8bae\u83b7\u53d6<ul> <li>\u7ef4\u62a4\u4e00\u4e2aarp\u7f13\u5b58\uff08Linux <code>arp -a</code>\u67e5\u770b\uff09</li> <li>arp\u7f13\u5b58\u8bb0\u5f55\uff1aip\u5730\u5740 + mac\u5730\u5740 + \u4ee5\u592a\u7f51\u63a5\u53e3</li> </ul> </li> <li>\u751f\u6210\u7f51\u7edc\u5305</li> <li>\u7f51\u5361\u9a71\u52a8\u548c\u7f51\u5361\uff1a\u5c06\u7f51\u7edc\u5305\u8f6c\u6362\u6210\u7535\u4fe1\u53f7\u5728\u7f51\u7ebf\u4e0a\u53d1\u51fa</li> <li>\u7f51\u5361\u9a71\u52a8\u63a7\u5236\u7f51\u5361\uff0c\u5c06\u7f51\u7edc\u5305\u62f7\u8d1d\u5230\u7f51\u5361\u7f13\u5b58\u533a\uff0c\u5f00\u5934\u52a0\u4e0a\u62a5\u5934\u548c\u8d77\u59cb\u5e27\u5206\u754c\u7b26\uff0c\u5728\u672b\u5c3e\u52a0\u4e0a\u7528\u4e8e\u68c0\u6d4b\u9519\u8bef\u7684\u5e27\u6821\u9a8c\u5e8f\u5217\u3002</li> <li>\u7f51\u5361\u5c06\u5305\u8f6c\u6362\u6210\u7535\u4fe1\u53f7\u53d1\u9001\u51fa\u53bb</li> </ol> <p>\u4ea4\u6362\u673a</p> <p>\u4e24\u5c42\u4ea4\u6362\u8bbe\u5907\uff0c\u6ca1\u6709ip\u5730\u5740\u548cmac\u5730\u5740</p> <p>\u63a5\u6536\u6240\u6709mac\u5730\u5740\u7684\u5305</p> <p>\u7ef4\u62a4mac\u5730\u5740\u8868</p> <ul> <li>\u4e00\u4e2a\u662f\u8bbe\u5907\u7684 MAC \u5730\u5740\uff0c</li> <li>\u53e6\u4e00\u4e2a\u662f\u8be5\u8bbe\u5907\u8fde\u63a5\u5728\u4ea4\u6362\u673a\u7684\u54ea\u4e2a\u7aef\u53e3\u4e0a</li> </ul> <p>\u6839\u636emac\u5730\u5740\u8868\u5224\u65ad\u8f6c\u53d1\u5230\u4ea4\u6362\u673a\u7684\u54ea\u4e2a\u7aef\u53e3</p> <p>\u5982\u679cmac\u5730\u5740\u8868\u627e\u4e0d\u5230\u5bf9\u5e94\u6761\u76ee\uff0c\u5219\u5e7f\u64ad\uff08\u9664\u4e86\u6e90\u7aef\u53e3\uff0c\u5c06\u4ee5\u592a\u7f51\u5305\u8f6c\u53d1\u5230\u5176\u4ed6\u7aef\u53e3\uff09\uff0c\u76ee\u6807\u4e3b\u673a\u63a5\u6536\u5230\u540e\u4f1a\u53d1\u9001\u54cd\u5e94\u5305\uff0c\u4ece\u800c\u66f4\u65b0mac\u5730\u5740\u8868</p> <p>\u8def\u7531\u5668</p> <p>\u4e09\u5c42\u4ea4\u6362\u8bbe\u5907\uff0c\u6bcf\u4e2a\u8def\u7531\u5668\u7aef\u53e3\u90fd\u6709\u81ea\u5df1\u7684ip\u5730\u5740\u548cmac\u5730\u5740</p> <p>\u548c\u81ea\u5df1mac\u5730\u5740\u4e0d\u7b26\u7684\u5305\u4e22\u5f03</p> <p>\u7ef4\u62a4\u8def\u7531\u8868\u548carp\u7f13\u5b58</p> <ul> <li>\u6839\u636e\u8def\u7531\u8868\u5224\u65ad\u8f6c\u53d1\u5230\u8def\u7531\u5668\u7684\u54ea\u4e2a\u7aef\u53e3</li> <li>\u5982\u679c\u5f53\u524d\u8def\u7531\u5668\u5728\u76ee\u6807\u5b50\u7f51\uff0c\u5219\u901a\u8fc7arp\u7f13\u5b58\u67e5\u8be2\u76ee\u6807mac\u5730\u5740\uff0c\u627e\u4e0d\u5230\u5219\u901a\u8fc7\u5e7f\u64ad\u83b7\u53d6mac\u5730\u5740</li> </ul>"},{"location":"computer_basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/#http","title":"HTTP","text":""},{"location":"computer_basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/#_4","title":"\u7b80\u4ecb","text":"<p>HTTP\uff08HyperText Transfer Protocol\uff0c\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff09</p> <ul> <li>\u8d85\u6587\u672c\uff1a\u8d85\u8d8a\u6587\u672c\u7684\u6587\u672c\uff0c\u5982\u56fe\u7247\u3001\u6587\u5b57\u3001\u89c6\u9891\u4ee5\u53ca\u8d85\u94fe\u63a5</li> <li>\u4f20\u8f93\uff1a\u53cc\u5411\u4f20\u64ad</li> <li>\u534f\u8bae\uff1a\u9075\u5b88\u7684\u884c\u4e3a\u89c4\u8303</li> </ul> <p>HTTP\u662f\u8ba1\u7b97\u673a\u4e4b\u95f4\u4f20\u8f93\u8d85\u6587\u672c\u4e4b\u95f4\u7684\u53cc\u5411\u884c\u4e3a\u89c4\u8303</p>"},{"location":"computer_basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/#_5","title":"\u72b6\u6001\u7801","text":"<p>\u5e38\u7528\u72b6\u6001\u7801\uff1a</p> <ul> <li><code>2xx</code></li> <li><code>200 OK</code> \u6700\u5e38\u89c1\u7684\u6210\u529f\u72b6\u6001\u7801</li> <li><code>204 No Content</code>\u54cd\u5e94\u6ca1\u6709body\u6570\u636e</li> <li><code>206 Partial Content</code>\u8fd4\u56de\u7684body\u4e3a\u90e8\u5206\u6570\u636e\uff0c\u4e0d\u662f\u5168\u90e8\uff08\u5e38\u89c1\u4e8eHTTP\u5206\u5757\u4e0a\u4f20\u6216\u65ad\u70b9\u7eed\u4f20\uff09</li> <li><code>3xx</code>\u91cd\u5b9a\u5411\uff1a \u5ba2\u6237\u7533\u8bf7\u7684\u8d44\u6e90\u53d1\u751f\u4e86\u53d8\u52a8\uff0c\u9700\u8981\u4f7f\u7528\u65b0\u7684URL\u8bf7\u6c42\u83b7\u53d6\u8d44\u6e90</li> <li><code>301 Moved Permanently</code>\u6c38\u4e45\u91cd\u5b9a\u5411\uff0c\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u5b58\u5728\u4e86\uff0c\u9700\u8981\u7528\u65b0\u7684URL\u8bf7\u6c42\u8bbf\u95ee</li> <li><code>302 Found</code>\u6682\u65f6\u91cd\u5b9a\u5411\uff0c\u8bf7\u6c42\u7684\u8d44\u6e90\u8fd8\u5728\uff0c\u4f46\u9700\u8981\u7528\u65b0\u7684URL\u8bf7\u6c42\u8bbf\u95ee</li> <li><code>304 Not Modified</code>\u4f7f\u7528\u7f13\u5b58</li> </ul>"},{"location":"computer_basic/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/#tcp","title":"TCP","text":""},{"location":"math/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/","title":"\u7ebf\u6027\u4ee3\u6570","text":""},{"location":"math/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_2","title":"\u5f15\u8bba","text":"<p>\u7ebf\u6027\uff1a</p> <ul> <li>f(ax) = af(x)</li> <li>f(x + y) = f(x) + f(y)</li> </ul> <p>\u4ee3\u6570\uff1a\u4f7f\u7528\u5b57\u6bcd\u8fd0\u7b97\u4ee3\u66ff\u6570\u5b57</p>"},{"location":"math/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_3","title":"\u7ebf\u6027\u65b9\u7a0b\u7ec4","text":""},{"location":"math/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_4","title":"\u57fa\u7840\u6982\u5ff5","text":"<p>\u7ebf\u6027\u65b9\u7a0b</p> <p>\\(a_1x_1 + a_2x_2 + ... + a_nx_n = b\\)</p> <p>\u7ebf\u6027\u65b9\u7a0b\u7ec4</p> <p>\u6240\u6709\u53d8\u91cf\u653e\u7b49\u53f7\u5de6\u8fb9\uff0c\u5e38\u6570\u653e\u7b49\u53f7\u53f3\u8fb9</p> <ul> <li>\u9f50\u6b21\u65b9\u7a0b\u7ec4</li> <li>\u7b49\u53f7\u53f3\u8fb9\u5e38\u6570\u4e3a0</li> <li>\u89e3\u7684\u4e2a\u6570<ul> <li>\u552f\u4e00\u89e3</li> <li>\u65e0\u6570\u4e2a\u89e3</li> </ul> </li> <li>\u975e\u9f50\u6b21\u65b9\u7a0b\u7ec4</li> <li>\u7b49\u53f7\u53f3\u8fb9\u5e38\u6570\u4e0d\u4e3a0</li> <li>\u89e3\u7684\u4e2a\u6570<ul> <li>\u552f\u4e00\u89e3</li> <li>\u65e0\u6570\u4e2a\u89e3</li> <li>\u65e0\u89e3</li> </ul> </li> </ul> <p>\u89e3\u7684\u4e2a\u6570\u5982\u4f55\u5224\u65ad\uff1a\u6709\u6548\u7684\u65b9\u7a0b\u4e2a\u6570\u548c\u53d8\u91cf\u4e2a\u6570\u7684\u5927\u5c0f</p> <ul> <li>\u6709\u6548\u7684\u65b9\u7a0b\u4e2a\u6570 = \u53d8\u91cf\u4e2a\u6570\u7684\u5927\u5c0f -&gt; \u552f\u4e00\u89e3</li> <li>\u6709\u6548\u7684\u65b9\u7a0b\u4e2a\u6570 &lt; \u53d8\u91cf\u4e2a\u6570\u7684\u5927\u5c0f -&gt; \u65e0\u6570\u89e3</li> <li>\u6ca1\u6709\u6709\u6548\u7684\u65b9\u7a0b -&gt; \u65e0\u89e3</li> </ul>"},{"location":"math/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_5","title":"\u5982\u4f55\u5feb\u901f\u6c42\u591a\u4e2a\u53d8\u91cf\u7684\u65b9\u7a0b\u7ec4","text":"<p>\u4e3a\u4e86\u7b80\u5316\u65b9\u7a0b\u7ec4\u7684\u8868\u793a\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u77e9\u9635\u7684\u6982\u5ff5\uff1a</p> <ul> <li>\u7cfb\u6570\u77e9\u9635</li> <li>\u589e\u5e7f\u77e9\u9635</li> </ul> <p>\u5982\u4f55\u7528\u6700\u5c11\u7684\u8fd0\u7b97\u5316\u7b80\u65b9\u7a0b\u7ec4\uff1a</p> <ul> <li>\u9636\u68af\u5f62\u5316\u7b80</li> </ul> <p>\u5982\u4f55\u505a\u5230\u9636\u68af\u5f62\u5316\u7b80\uff1a</p> <ul> <li>\u521d\u7b49\u884c\u53d8\u6362</li> </ul>"},{"location":"math/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_6","title":"\u77e9\u9635\u7684\u79e9","text":"<p>\u9636\u68af\u5f62\u5316\u7b80\u540e\uff0c\u5982\u679c\u51fa\u73b0\u5168\u4e3a0\u7684\u884c\uff0c\u8bf4\u660e\u8fd9\u4e2a\u65b9\u7a0b\u662f\u65e0\u7528\u7684</p> <p>\u6211\u4eec\u5b9a\u4e49\uff1a\u7ecf\u8fc7\u9636\u68af\u5f62\u5316\u7b80\u540e\uff0c\u77e9\u9635\u4e2d\u4e0d\u5168\u4e3a0\u7684\u884c\u6570\uff08\u6709\u6548\u65b9\u7a0b\u7684\u4e2a\u6570\uff09\u4e3a\u79e9\uff0c\u77e9\u9635A\u7684\u79e9\u8bb0\u4e3ar(A)</p> <p>\u62e5\u6709\u79e9\u4e4b\u540e\uff0c\u6211\u4eec\u80fd\u591f\u5feb\u901f\u5224\u65ad\u65b9\u7a0b\u7ec4\u662f\u5426\u6709\u89e3</p> <ul> <li>\u7cfb\u6570\u77e9\u9635\u7684\u79e9 &lt; \u589e\u5e7f\u77e9\u9635\u7684\u79e9\uff0c\u5219\u8be5\u65b9\u7a0b\u7ec4\u65e0\u89e3</li> </ul> <p></p> <ul> <li> <p>\u7cfb\u6570\u77e9\u9635\u7684\u79e9 &lt; \u589e\u5e7f\u77e9\u9635\u7684\u79e9\uff0c\u5219\u8be5\u65b9\u7a0b\u7ec4\u6709\u89e3</p> </li> <li> <p>\u9f50\u6b21\u65b9\u7a0b\u7ec4\u4e00\u5b9a\u6709\u89e3\uff08\u96f6\u89e3\uff09</p> </li> </ul> <p>\u5177\u4f53\u89c1\u4e0b\u56fe</p> <p>\u6ee1\u79e9\uff1a\u79e9\u7684\u4e2a\u6570\u7b49\u4e8e\u53d8\u91cf\u4e2a\u6570</p> <p></p> <p>\u4e3b\u5143\uff1a\u9636\u68af\u5316\u7b80\u540e\uff0c\u6bcf\u884c\u7b2c\u4e00\u4e2a\u975e\u96f6\u5143\u7d20</p> <ul> <li>\u975e\u4e3b\u5143\u4e0d\u552f\u4e00\uff0c\u4f7f\u7528\u81ea\u7531\u53d8\u91cf\u8868\u793a</li> <li>\u4e3b\u5143\u552f\u4e00\uff0c\u4f7f\u7528\u975e\u4e3b\u5143\u8868\u793a</li> <li>\u81ea\u7531\u53d8\u91cf\uff08\u975e\u4e3b\u5143\uff09\u4e2a\u6570 = \u53d8\u91cf\u4e2a\u6570 - \u7cfb\u6570\u77e9\u9635\u7684\u79e9</li> </ul>"},{"location":"math/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_7","title":"\u9f50\u6b21\u65b9\u7a0b\u4e0e\u975e\u9f50\u6b21\u65b9\u7a0b\u7684\u5173\u7cfb","text":"<ul> <li>\u76f8\u540c\u7cfb\u6570\u77e9\u9635\uff0c\u975e\u9f50\u6b21\u65b9\u7a0b\u7ec4\u7684\u89e3 = \u9f50\u6b21\u65b9\u7a0b\u7ec4\u7684\u89e3 + \u7cfb\u6570\u5411\u91cf</li> </ul> <ul> <li> <p>\u9f50\u6b21\u89e3 \u52a0\u6216\u51cf \u9f50\u6b21\u89e3 \u8fd8\u662f\u9f50\u6b21\u89e3</p> </li> <li> <p>\u975e\u9f50\u6b21\u89e3 \u52a0\u6216\u51cf \u9f50\u6b21\u89e3 \u8fd8\u662f\u975e\u9f50\u6b21\u89e3</p> </li> <li> <p>\u975e\u9f50\u6b21\u89e3 \u51cf \u975e\u9f50\u6b21\u89e3 \u662f\u9f50\u6b21\u89e3</p> </li> </ul>"},{"location":"software_development/backend/Kafka/","title":"Kafka","text":"<p>\u4e8b\u4ef6\uff1a\u5df2\u7ecf\u53d1\u751f\u7684\u4e1c\u897f</p>"},{"location":"software_development/backend/MessageQueue/","title":"\u6d88\u606f\u961f\u5217","text":""},{"location":"software_development/backend/MySQL/","title":"MySQL","text":""},{"location":"software_development/backend/MySQL/#_1","title":"\u9501","text":""},{"location":"software_development/backend/MySQL/#_2","title":"\u5168\u5c40\u9501","text":"<p>\u7528\u4e8e\u5168\u5c40\u903b\u8f91\u5907\u4efd\uff0c \u907f\u514d\u56e0\u4e3a\u6570\u636e\u7684\u66f4\u65b0\u5bfc\u81f4\u5907\u4efd\u6587\u4ef6\u7684\u6570\u636e\u4e0e\u9884\u671f\u7684\u4e0d\u4e00\u6837</p> <p>\u7f3a\u70b9\uff1a\u6574\u4e2a\u6570\u636e\u90fd\u662f\u53ea\u8bfb\u72b6\u6001</p> <p>\u907f\u514d\u65b9\u5f0f\uff1a\u5907\u4efd\u6570\u636e\u5e93\u524d\u5f00\u542f\u4e8b\u52a1\uff0c\u5728MVCC\u652f\u6301\u4e0b\uff0c\u8be5\u4e8b\u52a1\u6267\u884c\u671f\u95f4\u90fd\u5728\u4f7f\u7528\u8fd9\u4e2aRead View\uff0c\u5176\u4ed6\u4e8b\u52a1\u80fd\u591f\u7ee7\u7eed\u66f4\u65b0\u6570\u636e\uff0c\u4e92\u4e0d\u5f71\u54cd</p>"},{"location":"software_development/backend/MySQL/#_3","title":"\u8868\u7ea7\u9501","text":""},{"location":"software_development/backend/MySQL/#_4","title":"\u8868\u9501","text":"<ul> <li>\u5171\u4eab\u9501\uff08\u8bfb\uff09</li> <li>\u72ec\u5360\u9501\uff08\u5199\uff09</li> </ul> <p>\u52a0\u4e86\u5171\u4eab\u8868\u9501\uff0c\u4e4b\u540e\u6267\u884c\u5199\u64cd\u4f5c\u4f1a\u88ab\u963b\u585e</p>"},{"location":"software_development/backend/MySQL/#mdl","title":"\u5143\u6570\u7ec4\u9501\uff08MDL\uff09","text":"<ul> <li>\u5bf9\u4e00\u5f20\u8868\u8fdb\u884cCRUD\uff0c\u52a0MDL\u8bfb\u9501</li> <li>\u5bf9\u4e00\u5f20\u8868\u8868\u7ed3\u6784\u8fdb\u884c\u4fee\u6539\uff0c\u52a0MDL\u5199\u9501</li> </ul> <p>\u7533\u8bf7MDL\u9501\u4f1a\u5f62\u6210\u4e00\u4e2a\u961f\u5217\uff0c\u961f\u5217\u4e2d\u5199\u9501\u83b7\u53d6\u4f18\u5148\u7ea7\u9ad8\u4e8e\u8bfb\u9501\uff0c\u4e00\u65e6\u51fa\u73b0MDL\u5199\u9501\u963b\u585e\uff0c\u4f1a\u963b\u585e\u5176\u4ed6\u8bfb\u9501\uff0c\u4ece\u800c\u963b\u585e\u5176\u4ed6CRUD\u64cd\u4f5c</p> <p>\u4e3a\u4e86\u5b89\u5168\u5bf9\u8868\u8fdb\u884c\u53d8\u66f4\uff0c\u8868\u7ed3\u6784\u53d8\u66f4\u524d\uff0c\u5148\u770b\u770b\u6570\u636e\u5e93\u4e2d\u7684\u957f\u4e8b\u52a1\u662f\u5426\u52a0\u4e86MDL\u8bfb\u9501\uff0c\u53ef\u4ee5\u8003\u8651kill\u6389\u8fd9\u4e2a\u957f\u4e8b\u52a1\u518d\u505a\u8868\u7ed3\u6784\u7684\u53d8\u66f4</p>"},{"location":"software_development/backend/MySQL/#_5","title":"\u610f\u5411\u9501","text":"<p>\u610f\u5411\u9501\u662f\u4e3a\u4e86\u5feb\u901f\u5224\u65ad\u8868\u91cc\u662f\u5426\u6709\u8bb0\u5f55\u88ab\u52a0\u9501</p> <p>\u5982\u679c\u6ca1\u6709\u610f\u5411\u9501\uff0c\u52a0\u72ec\u5360\u8868\u9501\u65f6\uff0c\u9700\u8981\u904d\u5386\u6240\u6709\u8bb0\u5f55\uff0c\u770b\u662f\u5426\u5b58\u5728\u72ec\u5360\u9501</p> <ul> <li>\u5bf9\u67d0\u6761\u8bb0\u5f55\u52a0\u4e0a\u5171\u4eab\u8868\u9501\u4e4b\u524d\uff0c\u5148\u8981\u52a0\u4e0a\u8868\u7ea7\u610f\u5411\u5171\u4eab\u9501</li> <li>\u5bf9\u67d0\u6761\u8bb0\u5f55\u52a0\u4e0a\u72ec\u5360\u8868\u9501\u4e4b\u524d\uff0c\u5148\u8981\u52a0\u4e0a\u8868\u7ea7\u610f\u5411\u72ec\u5360\u9501</li> </ul>"},{"location":"software_development/backend/MySQL/#auto-inc","title":"AUTO-INC \u9501","text":"<p>\u8be5\u9501\u4fdd\u8bc1\u4e3b\u952e\u9012\u589e</p> <p>\u63d2\u5165\u6570\u636e\u65f6\u52a0\u4e0aAUTO-INC\u9501\uff0c\u6267\u884c\u5b8c\u63d2\u5165\u8bed\u53e5\u540e\u7acb\u5373\u91ca\u653e</p> <p>\u5927\u91cf\u63d2\u5165\u8bed\u53e5\u65f6\u4f1a\u5bfc\u81f4\u963b\u585e</p> <p>\u6709\u8f7b\u91cf\u7ea7\u9501\uff0c\u4fdd\u8bc1\u66f4\u65b0\u5b8c\u4e3b\u952e\u503c\u7acb\u523b\u91ca\u653e\uff0c\u4e0d\u9700\u8981\u7b49\u63d2\u5165\u8bed\u53e5\u6267\u884c\u5b8c</p>"},{"location":"software_development/backend/MySQL/#_6","title":"\u884c\u7ea7\u9501","text":"<p>\u666e\u901aselect\u662f\u5feb\u7167\u8bfb</p> <p>select for update\uff08\u52a0\u72ec\u5360\u9501\uff09\u548cselect ... lock in share mode\uff08\u52a0\u5171\u4eab\u9501\uff09\u662f\u9501\u5b9a\u8bfb\uff0c\u9501\u5b9a\u8bfb\u9700\u8981\u5728\u4e8b\u52a1\u4e2d\u8fdb\u884c</p>"},{"location":"software_development/backend/MySQL/#_7","title":"\u8bb0\u5f55\u9501","text":"<p>\u9501\u4e00\u6761\u8bb0\u5f55\uff0c\u4e5f\u662f\u5206\u4e3a\u5171\u4eab\u9501(S)\u548c\u72ec\u5360\u9501(X)</p>"},{"location":"software_development/backend/MySQL/#_8","title":"\u95f4\u9699\u9501","text":"<p>\u89e3\u51b3\u53ef\u91cd\u590d\u8bfb\u9694\u79bb\u7ea7\u522b\u4e0b\u7684\u5e7b\u8bfb</p> <p>\u52a0\u4e0a\u95f4\u9699\u9501\u540e\uff0c\u5176\u4ed6\u4e8b\u52a1\u65e0\u6cd5\u5728\u8be5\u8303\u56f4\u63d2\u5165\u6570\u636e\uff0c\u907f\u514d\u4e86\u5e7b\u8bfb</p> <p>\u4e24\u4e2a\u4e8b\u52a1\u53ef\u540c\u65f6\u6301\u6709\u5305\u542b\u5171\u540c\u95f4\u9699\u8303\u56f4\u7684\u95f4\u9699\u9501</p>"},{"location":"software_development/backend/MySQL/#next-key-lock","title":"Next-key lock","text":"<p>\u8bb0\u5f55\u9501 + \u95f4\u9699\u9501</p> <p>\u9501\u5b9a\u8bb0\u5f55\uff08\u8bb0\u5f55\u9501\uff09 + \u9501\u5b9a\u8303\u56f4\uff08\u95f4\u9699\u9501\uff09</p> <p>\u5373\u4e0d\u80fd\u63d2\u5165\u6570\u636e\uff0c\u4e5f\u4e0d\u80fd\u66f4\u65b0\u6570\u636e</p> <p>\u4e24\u4e2a\u4e8b\u52a1\u4e0d\u80fd\u540c\u65f6\u62e5\u6709\u540c\u4e00\u8303\u56f4\u7684X\u578b\u7684Next-key lock</p>"},{"location":"software_development/backend/MySQL/#_9","title":"\u63d2\u5165\u610f\u5411\u9501","text":"<p>\u4e0d\u662f\u610f\u5411\u9501\uff0c\u662f\u7279\u6b8a\u7684\u95f4\u9699\u9501\uff08\u9501\u4f4f\u67d0\u4e2a\u70b9\uff09\uff0c\u662f\u884c\u7ea7\u522b\u9501</p> <p>\u5f53\u67d0\u4e2a\u8303\u56f4\u88ab\u52a0\u4e0a\u4e86\u95f4\u9699\u9501\uff0c\u67d0\u4e8b\u52a1\u60f3\u8981\u5728\u8be5\u8303\u56f4\u63d2\u5165\u6570\u636e\uff0c\u9700\u8981\u7b49\u5f85\uff0c\u5373\u963b\u585e\u3002</p> <p>\u8fd9\u65f6\u5019\u4f1a\u7ed9\u4ed6\u5206\u914d\u4e00\u4e2a\u63d2\u5165\u610f\u5411\u9501\uff0c\u8868\u793a\u5904\u4e8e\u63d2\u5165\u7b49\u5f85\u72b6\u6001</p> <p>\u63d2\u5165\u610f\u5411\u9501\u7684\u4f5c\u7528\u5728\u4e8e\uff1a\u591a\u4e2a\u4e8b\u52a1\u60f3\u5f80\u95f4\u9699\u9501\u6240\u5728\u533a\u95f4\u63d2\u5165\u6570\u636e\u4f1a\u963b\u585e\uff0c\u800c\u83b7\u5f97\u63d2\u5165\u610f\u5411\u9501\u540e\u4e8b\u52a1\u4e4b\u95f4\u4e0d\u4f1a\u963b\u585e\uff08\u53ea\u8981\u63d2\u5165\u7684\u4e0d\u662f\u540c\u4e00\u4e2a\u5730\u65b9\uff09</p>"},{"location":"software_development/backend/Redis/","title":"Redis","text":"<p>Remote Dictionary Server \u8fdc\u7a0b\u5b57\u5178\u670d\u52a1\u5668</p>"},{"location":"software_development/backend/Redis/#_1","title":"\u7279\u70b9","text":"<ul> <li>Key-value(KV)</li> <li>\u547d\u4ee4\u539f\u5b50\u6027</li> <li>\u4f4e\u5ef6\u8fdf\uff0c\u901f\u5ea6\u5feb\uff08\u57fa\u4e8e\u5185\u5b58\u3001IO\u591a\u8def\u590d\u7528\uff09</li> <li>\u652f\u6301\u6570\u636e\u6301\u4e45\u5316</li> <li>\u652f\u6301\u4e3b\u4ece\u96c6\u7fa4\u3001\u5206\u7247\u96c6\u7fa4</li> </ul>"},{"location":"software_development/backend/Redis/#sql-vs-nosql","title":"SQL vs NoSQL","text":"<p>SQL(Structured Query Language)-&gt;\u5173\u7cfb\u578b\u6570\u636e\u5e93</p> <ul> <li>\u7ed3\u6784\u5316</li> <li>\u5b9a\u4e49\u8868\u7684\u7ed3\u6784\uff1a\u591a\u5c11\u4e2a\u5b57\u6bb5\uff0c\u6bcf\u4e2a\u5b57\u6bb5\u6709\u4ec0\u4e48\u7ea6\u675f...</li> <li>\u4e00\u65e6\u786e\u5b9a\u4e86\u8868\u7684\u7ed3\u6784\uff0c\u5c06\u6765\u63d2\u5165\u7684\u6570\u636e\u90fd\u9700\u8981\u9075\u5faa\u8be5\u7ea6\u675f\uff0c\u5426\u5219\u62a5\u9519</li> <li>\u5173\u8054\u7684</li> <li>\u4f7f\u7528\u5916\u952e\u5c06\u8868\u8fde\u63a5\u8d77\u6765</li> <li>SQL\u67e5\u8be2</li> <li>\u8bed\u6cd5\u7edf\u4e00</li> <li>ACID</li> <li>MySQL\u652f\u6301ACID</li> </ul> <p>NoSQL-&gt;\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93</p> <ul> <li>\u975e\u7ed3\u6784\u5316</li> <li>KV  (\u5982Redis)</li> <li>Document \u6570\u636e\u4ee5json\u5f62\u5f0f\u5b58\u50a8 \uff08\u5982MonogoDB\uff0cElasticsearch)</li> <li>Graph \u6570\u636e\u4ee5\u8282\u70b9\u5f62\u5f0f\u5b58\u50a8\uff0c\u6570\u636e\u4e4b\u95f4\u4f7f\u7528\u8fb9\u8054\u7cfb\uff08Neo4j\uff09</li> <li>\u975e\u5173\u8054\u7684</li> <li>\u7a0b\u5e8f\u5458\u81ea\u884c\u7ef4\u62a4\u6570\u636e\u5173\u7cfb\uff0c\u4f7f\u7528json\u5d4c\u5957\u5173\u8054\u6570\u636e-&gt;\u4f1a\u91cd\u590d\u6570\u636e\u5b58\u50a8</li> <li>\u975eSQL</li> <li>\u8bed\u6cd5\u4e0d\u7edf\u4e00</li> <li>BASE</li> <li>\u4e0d\u652f\u6301\u4e8b\u52a1\uff0c\u65e0ACID</li> </ul> <p>Other Details</p> MySQL Redis \u5b58\u50a8\u65b9\u5f0f \u78c1\u76d8 \u5185\u5b58 \u6269\u5c55\u6027 \u5782\u76f4\uff08\u5355\u673a\u89c6\u89d2\uff1a\u6269\u5c55\u901a\u8fc7\u52a0CPU\u3001\u5185\u5b58\uff09 \u6c34\u5e73\uff08\u5206\u5e03\u5f0f\u89c6\u89d2\uff0c\u6269\u5c55\u901a\u8fc7\u52a0\u673a\u5668\uff09 \u4f7f\u7528\u573a\u666f \u6570\u636e\u7ed3\u6784\u56fa\u5b9a\uff0c\u8981\u6c42ACID \u6570\u636e\u7ed3\u6784\u4e0d\u56fa\u5b9a\uff0c\u4e0d\u8981\u6c42ACID\uff0c\u6027\u80fd\u8981\u6c42\u9ad8"},{"location":"software_development/backend/Redis/#redis_1","title":"\u5b89\u88c5Redis","text":""},{"location":"software_development/backend/Redis/#ubuntu","title":"ubuntu","text":"<pre><code>apt-get update\napt-get install redis\n</code></pre> <p>\u5b89\u88c5\u540e</p> <p>\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff1a /etc/redis/redis.conf</p>"},{"location":"software_development/backend/Redis/#redis-server","title":"\u542f\u52a8redis-server","text":""},{"location":"software_development/backend/Redis/#_2","title":"\u57fa\u7840\u8fd0\u884c","text":"<p>\u524d\u53f0\u8fd0\u884c</p> <pre><code>redis-server\n</code></pre> <p>\u540e\u53f0\u8fd0\u884c</p> <p>ubuntu apt-install \u540e\u81ea\u5e26</p> <pre><code>service redis-server start # \u540e\u53f0\u542f\u52a8redis\nservice redis-server stop # \u540e\u53f0\u6682\u505credis\nservice redis-server status #\u67e5\u770b\u72b6\u6001\n</code></pre>"},{"location":"software_development/backend/Redis/#redis_2","title":"\u4fee\u6539Redis\u914d\u7f6e\u6587\u4ef6\u542f\u52a8","text":"<p>Tips\uff1avim\u4e2d\u8f93\u5165'/'+\u5b57\u7b26\u4e32\u53ef\u5feb\u901f\u641c\u7d22\u5bf9\u5e94\u8bbe\u7f6e</p> <p>\u4fee\u6539\u76d1\u542c\u5730\u5740</p> <pre><code>bind 127.0.0.1 # \u9ed8\u8ba4\u76d1\u542c\u5730\u5740\uff0c\u53ea\u76d1\u542c\u672c\u673a\nbind 0.0.0.0    # \u76d1\u542c\u4efb\u610f\u4e3b\u673a\n</code></pre> <p>\u8bbe\u7f6e\u5b88\u62a4\u8fdb\u7a0b\u540e\u53f0\u8fd0\u884c</p> <pre><code>daemonize yes #\u4fee\u6539\u4e3ayes\u53ef\u540e\u53f0\u8fd0\u884c\n</code></pre> <p>\u8bbe\u7f6eredis\u767b\u5f55\u5bc6\u7801</p> <pre><code>requirepass \u5bc6\u7801\n</code></pre> <p>\u7aef\u53e3</p> <pre><code>port 6379 #\u81ea\u5df1\u8bbe\u7f6e\u7aef\u53e3\uff0c\u9ed8\u8ba46379\ndir . #\u5de5\u4f5c\u76ee\u5f55\uff08\u5373\u8fd0\u884credis-server\u7684\u5de5\u4f5c\u76ee\u5f55\uff09\uff0c\u9ed8\u8ba4\u5f53\u524d\u76ee\u5f55\ndatabase \u6570\u5b57 #\u6570\u636e\u5e93\u6570\u91cf\uff0c\u9ed8\u8ba416\nmaxmemory 512mb #\u8bbe\u7f6eredis\u4f7f\u7528\u7684\u6700\u5927\u5185\u5b58\nlogfile #\u65e5\u5fd7\u6587\u4ef6\uff0c\u9ed8\u8ba4\u4e3a\u7a7a\u4e0d\u8bb0\u5f55\u65e5\u5fd7\uff0c\u53ef\u6307\u5b9a\u65e5\u5fd7\u6587\u4ef6\u540d\n</code></pre> <p>\u542f\u52a8</p> <pre><code>redis-server redis.conf\u7684\u8def\u5f84\n#\u5982\u679c\u5f53\u524d\u5728/etc/redis\u76ee\u5f55\u4e0b\uff0c\u90a3\u4e48\u76f4\u63a5\nredis-server redis.conf\n#\u5426\u5219\nredis-server /etc/redis/redis.conf\n</code></pre> <p>\u67e5\u770bredis\u72b6\u6001</p> <pre><code>ps -aux | grep redis\n</code></pre> <p>\u7ed3\u675fredis</p> <pre><code>kill -9 \u8fdb\u7a0b\u53f7\uff08pid\uff09\n</code></pre>"},{"location":"software_development/backend/Redis/#_3","title":"\u5f00\u673a\u81ea\u542f","text":"<p>\u8fd9\u90e8\u5206\u9488\u5bf9CentOS</p> <p>https://www.cnblogs.com/miracle-luna/p/16864726.html</p>"},{"location":"software_development/backend/Redis/#redis-cli","title":"\u542f\u52a8redis-cli","text":"<pre><code>redis-cli [option] [command]\n\noption:\n-h : redis-server ip\u5730\u5740\n-p : redis-server \u7aef\u53e3\uff08\u9ed8\u8ba46379)\n-a : \u5bc6\u7801\n</code></pre> <p>\u5982\u679credis-server\u6709\u5bc6\u7801\uff0c\u4f46\u662f\u4e00\u5f00\u59cb\u6ca1\u6709\u4f7f\u7528<code>-a</code></p> <p>\u90a3\u4e48\u8f93\u5165AUTH\u52a0\u4e0a\u7528\u6237\u540d\uff08\u53ef\u9009\uff09\u548c\u5bc6\u7801</p> <pre><code>xxx&gt; AUTH [serverName(optional)] [serverPassward]\n</code></pre>"},{"location":"software_development/backend/Redis/#_4","title":"\u5e2e\u52a9\u6587\u6863","text":"<p>\u5b98\u7f51commands</p> <p>redis-cli \u547d\u4ee4\u884c <code>help@</code></p>"},{"location":"software_development/backend/Redis/#_5","title":"\u5e38\u7528\u547d\u4ee4","text":"<pre><code>keys #\u67e5\u8be2\u6ee1\u8db3pattern\u7684key\uff0c\u4e0d\u5efa\u8bae\u5728\u4e3b\u8282\u70b9\u505a\uff0c\u4f1a\u963b\u585e\ndel #\u5220\u9664\u4e00\u4e2a\u6216\u591a\u4e2akey\nexists #\u5224\u65ad\u67d0\u4e2a/\u591a\u4e2akey\u662f\u5426\u5b58\u5728\nexpire #\u7ed9\u4e00\u4e2akey\u8bbe\u7f6e\u6709\u6548\u671f\uff0c\u6709\u6548\u671f\u5230\u671f\u8be5key\u88ab\u81ea\u52a8\u5220\u9664\nttl #\u67e5\u770b\u5269\u4f59\u5b58\u6d3b\u65f6\u95f4(time to live)\n</code></pre> <p>ttl\u8fd4\u56de-1\u8868\u793a\u6c38\u4e45\u6709\u6548\uff0c-2\u8868\u793a\u8be5key\u4e0d\u5b58\u5728</p>"},{"location":"software_development/backend/Redis/#redis_3","title":"Redis\u6570\u636e\u7c7b\u578b","text":""},{"location":"software_development/backend/Redis/#string","title":"String","text":"<ul> <li>string</li> <li>int</li> <li>float</li> </ul> <p>\u4ee5\u4e0a\u5747\u4ee5\u5b57\u8282\u6570\u7ec4\u65b9\u5f0f\u5b58\u50a8</p>"},{"location":"software_development/backend/Redis/#_6","title":"\u547d\u4ee4","text":"<ul> <li>set</li> <li>get</li> <li>mset</li> <li>mget</li> <li>incr</li> <li>incrby</li> <li>incrbyfloat</li> <li>setnx = set nx</li> <li>setex</li> </ul>"},{"location":"software_development/backend/Redis/#_7","title":"\u539f\u7406","text":"<p>\u5e95\u5c42\u4f7f\u7528\u4e86SDS\uff08\u7b80\u5355\u52a8\u6001\u5b57\u7b26\u4e32\uff09</p> <p>\u4f7f\u7528len\u8bb0\u5f55\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u800c\u4e0d\u662f\u901a\u8fc7'\\0'\u5224\u65ad\u5b57\u7b26\u4e32\u7ed3\u5c3e</p> <ul> <li>\u4e0d\u4ec5\u53ef\u4ee5\u4fdd\u5b58\u6587\u672c\u6570\u636e\uff0c\u8fd8\u53ef\u4ee5\u4fdd\u5b58\u4e8c\u8fdb\u5236\u6570\u636e\uff08\u5982\u89c6\u9891\u3001\u6587\u4ef6\u7b49\uff09</li> <li>\u83b7\u53d6\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)</li> <li>Redis\u5b57\u7b26\u4e32\u7684API\u662f\u5b89\u5168\u7684\uff0c\u62fc\u63a5\u5b57\u7b26\u4e32\u4e0d\u4f1a\u9020\u6210\u7f13\u51b2\u533a\u6ea2\u51fa\uff08\u4f1a\u81ea\u52a8\u6269\u5bb9\uff09</li> </ul>"},{"location":"software_development/backend/Redis/#_8","title":"\u5e94\u7528","text":"<ul> <li>\u7f13\u5b58\u5bf9\u8c61</li> <li>\u5e38\u89c4\u8ba1\u6570\uff08Redis\u6267\u884c\u547d\u4ee4\u662f\u5355\u7ebf\u7a0b\u539f\u5b50\u64cd\u4f5c\uff09</li> <li>\u5206\u5e03\u5f0f\u9501</li> <li>\u5229\u7528SETNX\u547d\u4ee4\uff0ckey\u4e0d\u5b58\u5728\u65f6\u624d\u63d2\u5165<ul> <li>\u5982\u679ckey\u4e0d\u5b58\u5728\uff0c\u5219\u663e\u793a\u63d2\u5165\u6210\u529f\uff0c\u5bf9\u5e94\u52a0\u9501\u6210\u529f</li> <li>\u5982\u679ckey\u5b58\u5728\uff0c\u5219\u663e\u793a\u63d2\u5165\u5931\u8d25\uff0c\u5bf9\u5e94\u52a0\u9501\u5931\u8d25</li> </ul> </li> <li>\u4f7f\u7528EX\u547d\u4ee4\u8bbe\u7f6e\u9501\u7684\u8fc7\u671f\u65f6\u95f4\uff0c\u9632\u6b62\u6b7b\u9501</li> <li>\u4f7f\u7528Lua\u811a\u672c\uff08Redis\u6267\u884cLua\u811a\u672c\u65f6\u53ef\u4ee5\u4ee5\u539f\u5b50\u7684\u65b9\u5f0f\u6267\u884c\uff09\u4fdd\u8bc1\u9501\u91ca\u653e\u64cd\u4f5c\u7684\u539f\u5b50\u6027</li> <li>\u5171\u4eabsession\u4fe1\u606f</li> </ul>"},{"location":"software_development/backend/Redis/#list","title":"list","text":""},{"location":"software_development/backend/Redis/#_9","title":"\u7279\u70b9","text":"<ul> <li>\u6709\u5e8f</li> <li>\u5143\u7d20\u53ef\u4ee5\u91cd\u590d</li> <li>\u63d2\u5165\u548c\u5220\u9664\u5feb</li> <li>\u67e5\u8be2\u901f\u5ea6\u4e00\u822c</li> </ul>"},{"location":"software_development/backend/Redis/#_10","title":"\u547d\u4ee4","text":"<p>l\u8868\u793aleft, r\u8868\u793aright, b\u8868\u793ablock \u963b\u585e</p> <ul> <li>lpush</li> <li>lpop</li> <li>rpush</li> <li>rpop</li> <li>lrange</li> <li>blpop</li> <li>brpop</li> </ul>"},{"location":"software_development/backend/Redis/#_11","title":"\u539f\u7406","text":"<p>\u5e95\u5c42\u4f7f\u7528\u53cc\u5411\u94fe\u8868\u6216\u538b\u7f29\u5217\u8868\u5b9e\u73b0</p> <p>Redis3.2\u7248\u672c\u4e4b\u540e\u4f7f\u7528quicklist</p>"},{"location":"software_development/backend/Redis/#_12","title":"\u5e94\u7528","text":"<p>\u6d88\u606f\u961f\u5217</p> <ul> <li>\u5148\u8fdb\u5148\u51fa\uff1aLPUSH + RPOP or RPUSH + LPOP</li> <li>\u6d88\u8d39\u8005\u65e0\u6cd5\u5f97\u77e5\u751f\u4ea7\u8005\u6709\u65b0\u6570\u636e\u4ea7\u751f\uff0c\u4f7f\u7528RPOP\u6216LPOP\u9700\u8981\u5faa\u73af\u963b\u585e</li> <li>\u4f7f\u7528BRPOP\u975e\u963b\u585e\u5f0f\u8bfb\u53d6\uff0c\u6ca1\u8bfb\u5230\u6570\u636e\u81ea\u52a8\u963b\u585e\uff0c\u6709\u65b0\u6570\u636e\u8fdb\u5165\u8bfb\u5230\u6570\u636e\u5c31\u8fd4\u56de\uff0c\u8282\u7701CPU\u5f00\u9500</li> <li>\u5904\u7406\u91cd\u590d\u6d88\u606f</li> <li>\u6bcf\u4e2a\u6d88\u606f\u9700\u8981\u6709\u4e00\u4e2a\u5168\u5c40ID</li> <li>\u6d88\u8d39\u8005\u9700\u8981\u8bb0\u5f55\u5df2\u7ecf\u5904\u7406\u8fc7\u7684\u6d88\u606fID\uff0c\u4e0e\u5f53\u524d\u6536\u5230\u7684\u6d88\u606fID\u6bd4\u5bf9\uff0c\u5982\u679c\u5904\u7406\u8fc7\u65e0\u9700\u518d\u5904\u7406</li> <li>\u6211\u4eec\u9700\u8981\u81ea\u884c\u4e3a\u6bcf\u6761\u6d88\u606f\u751f\u6210\u4e00\u4e2a\u5168\u5c40\u552f\u4e00ID</li> <li>\u4fdd\u8bc1\u6d88\u606f\u53ef\u9760\u6027</li> <li>\u6d88\u8d39\u8005\u4eceList\u8bfb\u53d6\u4e00\u6761\u6d88\u606f\u540e\uff0cList\u4e0d\u518d\u5b58\u6709\u8fd9\u6761\u6d88\u606f\uff0c\u82e5\u6d88\u8d39\u8005\u5904\u7406\u8fc7\u7a0b\u56e0\u4e3a\u6545\u969c\u6216\u5176\u4ed6\u539f\u56e0\u4e22\u5931\u8fd9\u6761\u6d88\u606f\uff0c\u5219\u6d88\u8d39\u8005\u7a0b\u5e8f\u518d\u6b21\u542f\u52a8\u65f6\uff0c\u5c31\u6ca1\u6cd5\u4eceList\u8bfb\u53d6\u8fd9\u6761\u6d88\u606f</li> <li>\u4f7f\u7528BRPOPLPUSH\u547d\u4ee4\uff0c\u6d88\u8d39\u8005\u7a0b\u5e8f\u4ece\u4e00\u4e2aList\u8bfb\u53d6\u6d88\u606f\uff0c\u540c\u65f6\u5c06\u8fd9\u6761\u6d88\u606f\u63d2\u5165\u5230\u5907\u4efdList\u4e2d\u7559\u5b58</li> <li>\u82e5\u4e22\u5931\u6d88\u606f\u53ef\u4ee5\u4ece\u5907\u4efdList\u4e2d\u8bfb\u53d6</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <p>\u4e0d\u652f\u6301\u591a\u4e2a\u6d88\u8d39\u8005\u6d88\u8d39\u540c\u4e00\u6761\u6d88\u606f\uff0c\u6d88\u8d39\u5b8c\u4e00\u6761\u6d88\u606f\uff0c\u8fd9\u6761\u6d88\u606f\u5c31\u4eceList\u4e2d\u5220\u53bb</p> <p>\u60f3\u8981\u5b9e\u73b0\u591a\u4e2a\u6d88\u8d39\u8005\u6d88\u8d39\u540c\u4e00\u6761\u6d88\u606f\uff0c\u9700\u8981\u5b9e\u73b0\u6d88\u8d39\u7ec4\uff0cList\u4e0d\u652f\u6301\u6d88\u8d39\u7ec4\u7684\u5b9e\u73b0</p> <p>\u800cStream\u7c7b\u578b\u53ef\u4ee5</p>"},{"location":"software_development/backend/Redis/#hash","title":"hash","text":""},{"location":"software_development/backend/Redis/#_13","title":"\u547d\u4ee4","text":"<ul> <li>hset</li> <li>hget</li> <li>hmset</li> <li>hmget</li> <li>hgetall</li> <li>hkeys</li> <li>hvals</li> <li>hincryby</li> <li>hsetnx</li> </ul>"},{"location":"software_development/backend/Redis/#_14","title":"\u539f\u7406","text":"<p>\u538b\u7f29\u5217\u8868\u6216\u54c8\u5e0c\u8868</p> <p>Redis7.0\u7531listpack\u5b9e\u73b0</p>"},{"location":"software_development/backend/Redis/#_15","title":"\u5e94\u7528","text":"<p>\u7f13\u5b58\u5bf9\u8c61</p> <p>String + Json \u548c Hash\u90fd\u80fd\u7f13\u5b58\u5bf9\u8c61</p> <p>\u4e00\u822c\u4f7f\u7528String + Json </p> <p>\u53d8\u52a8\u9891\u7e41\u4f7f\u7528Hash</p> <ul> <li>\u8d2d\u7269\u8f66\uff0ckey\u5bf9\u5e94\u7528\u6237id\uff0cfield\u5bf9\u5e94\u5546\u54c1id\uff0cvalue\u5bf9\u5e94\u5546\u54c1\u6570\u91cf</li> </ul>"},{"location":"software_development/backend/Redis/#set","title":"set","text":""},{"location":"software_development/backend/Redis/#_16","title":"\u7279\u70b9","text":"<p>\u7c7b\u4f3c\u4e8e\u54c8\u5e0c\u8868</p> <ul> <li>\u65e0\u5e8f</li> <li>\u5143\u7d20\u4e0d\u53ef\u91cd\u590d</li> <li>\u67e5\u627e\u5feb</li> <li>\u652f\u6301\u96c6\u5408\u8fd0\u7b97</li> </ul>"},{"location":"software_development/backend/Redis/#_17","title":"\u547d\u4ee4","text":"<ul> <li>sadd</li> <li>srem</li> <li>scard \u5143\u7d20\u4e2a\u6570</li> <li>sismember</li> <li>smembers</li> <li>\u96c6\u5408\u8fd0\u7b97</li> <li>sinter \u4ea4\u96c6</li> <li>sdiff \u5dee\u96c6</li> <li>sunion \u5e76\u96c6</li> </ul>"},{"location":"software_development/backend/Redis/#_18","title":"\u539f\u7406","text":"<p>\u54c8\u5e0c\u8868\u6216\u6574\u6570\u96c6\u5408</p>"},{"location":"software_development/backend/Redis/#_19","title":"\u5e94\u7528","text":"<p>\u9002\u5408\u6570\u636e\u53bb\u91cd\u548c\u4fdd\u8bc1\u6570\u636e\u7684\u552f\u4e00\u6027</p> <p>\u9002\u5408\u7edf\u8ba1\u591a\u4e2a\u96c6\u5408\u7684\u4ea4\u96c6\u3001\u9519\u96c6\u548c\u5e76\u96c6\u7b49</p> <ul> <li>\u8ba1\u7b97\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u907f\u514d\u4e3b\u5e93\u963b\u585e\uff0c\u4ea4\u7ed9\u4ece\u5e93\u6216\u5ba2\u6237\u7aef\u8ba1\u7b97</li> </ul> <p>\u70b9\u8d5e\u529f\u80fd\uff08\u4e00\u4e2a\u7528\u6237\u53ea\u80fd\u70b9\u4e00\u4e2a\u8d5e\uff09</p> <p>\u5171\u540c\u5173\u6ce8\uff08\u4ea4\u96c6\u8fd0\u7b97\uff09</p> <p>\u62bd\u5956\u6d3b\u52a8\uff08\u4e00\u4e2a\u7528\u6237\u53ea\u80fd\u4e2d\u4e00\u6b21\u5956\uff09</p>"},{"location":"software_development/backend/Redis/#sortedsetzset","title":"SortedSet/zset","text":""},{"location":"software_development/backend/Redis/#_20","title":"\u7279\u70b9","text":"<ul> <li>\u53ef\u6392\u5e8f</li> <li>\u5143\u7d20\u4e0d\u91cd\u590d</li> <li>\u67e5\u8be2\u901f\u5ea6\u5feb</li> </ul>"},{"location":"software_development/backend/Redis/#_21","title":"\u547d\u4ee4","text":"<p>\u538b\u7f29\u5217\u8868 or \u8df3\u8868</p> <p>Redis7.0\u538b\u7f29\u5217\u8868\u5e9f\u5f03\uff0c\u4ea4\u7ed9listpack</p> <p>\u5728set\u57fa\u7840\u4e0a\u6dfb\u52a0\u4e86score\uff0cscore\u53ef\u4ee5\u91cd\u590d\uff0cvalue\u4e0d\u80fd\u91cd\u590d\uff0c\u901a\u8fc7score\u6392\u5e8f</p>"},{"location":"software_development/backend/Redis/#_22","title":"\u5e94\u7528","text":"<p>\u6392\u884c\u699c</p>"},{"location":"software_development/backend/Redis/#_23","title":"\u5b9e\u6218\u7bc7","text":""},{"location":"software_development/backend/design_patterns/","title":"\u8bbe\u8ba1\u6a21\u5f0f","text":""},{"location":"software_development/backend/interview_experiences/","title":"\u9762\u7ecf","text":""},{"location":"software_development/backend/interview_experiences/#_2","title":"\u817e\u8baf\u4f1a\u8bae\u6691\u671f\u5b9e\u4e60","text":"<p>GET\u548cPOST\u7684\u533a\u522b\uff1f</p> <p>TCP\u4e09\u6b21\u63e1\u624b\u8fc7\u7a0b\uff1f</p> <p>\u8fdb\u7a0b\u95f4\u901a\u4fe1\u65b9\u5f0f\uff1f</p> <p>\u8c03\u5ea6\u7b97\u6cd5\u6709\u54ea\u51e0\u79cd\uff1f</p> <p>\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u533a\u522b\uff1f</p> <p>\u5e38\u7528\u7684Linux\u547d\u4ee4\uff1f</p> <p>MySQL\u9694\u79bb\u7ea7\u522b\u6709\u54ea\u4e9b\uff1f\u4e3e\u4e2a\u4f8b\u5b50\u8bf4\u660e</p> <p>ES\u5012\u6392\u7d22\u5f15\uff1f\u770b\u8fc7\u6e90\u7801\u5417\uff1f</p> <p>\u4f60\u9879\u76ee\u8bf4\u7684\u90a3\u4e2aOrderDict\uff08\u6211\u9879\u76ee\u4e2d\u4f7f\u7528\u4e86LRU\u7b97\u6cd5\uff0c\u901a\u8fc7Python\u7684OrderDict\u5b9e\u73b0\uff09\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f</p> <p>python\u5b9e\u73b0LRU\u7b97\u6cd5_lru python-CSDN\u535a\u5ba2</p> <p>\u5fae\u4fe1\u626b\u7801\u767b\u5f55\u7684\u8fc7\u7a0b\uff1f</p> <p>\u7a0b\u5e8f\u90e8\u7f72\u5230Linux\u4e2d\uff0c\u53d1\u751f\u4e86CPU\u5360\u7528\u5f88\u9ad8\u7684\u60c5\u51b5\uff0c\u5982\u4f55\u6392\u67e5\uff1f</p> <p>https://blog.csdn.net/yingchao_yuan/article/details/109199868#:~:text=\u8fd9\u4e2a\u975e\u5e38\u7b80\u5355\uff0c\u4e00\u6761\u547d\u4ee4\u641e\u5b9a\uff0ctop,-p%20\u8fdb\u7a0bpid\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\uff1a\u8fd9\u6837\u5c31\u53ef\u4ee5\u6301\u7eed\u7684\u89c2\u5bdf\u4f60\u7684\u7a0b\u5e8f\u7684cpu\u5360\u7528\u60c5\u51b5\uff0c\u5982\u679c\u4e00\u76f4\u5c45\u9ad8\u4e0d\u4e0b\uff0c\u5c31\u53ef\u80fd\u662f\u6709\u95ee\u9898\u4e86%E3%80%82</p>"},{"location":"software_development/backend/interview_experiences/#ai","title":"\u7f8e\u56e2AI\u9762","text":"<p>cookie\u548csession\u7684\u533a\u522b\uff1f</p> <p>\u5982\u4f55\u67e5\u770b\u7cfb\u7edf\u8fdb\u7a0b\uff1f\u5982\u4f55\u7ed3\u675f\u8be5\u8fdb\u7a0b\uff1f</p> <p>\u6570\u636e\u5e93\u5206\u533a\u8868\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f</p> <p>C++\u7684\u5f15\u7528\u662f\u4ec0\u4e48\uff1f\u5f15\u7528\u548c\u6307\u9488\u7684\u533a\u522b\uff1f</p> <p>\u5982\u4f55\u8bbe\u8ba1\u4e00\u4e2a\u5728\u7ebf\u6e38\u620f\u6392\u884c\u699c\u529f\u80fd\uff0c\u5e94\u8be5\u4f7f\u7528\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\u548c\u66f4\u65b0\u673a\u5236\uff1f</p> <p>\u4f60\u662f\u5982\u4f55\u5173\u6ce8\u8f6f\u4ef6\u5f00\u53d1\u9886\u57df\u7684\u524d\u6cbf\u8fdb\u5c55\uff1f</p> <p>\u8bf7\u4ecb\u7ecd\u4e00\u4e0b\u4f60\u66fe\u53d1\u73b0\u8fc7\u7684\u4e00\u4e2a\u6f5c\u5728\u7684\u95ee\u9898\uff0c\u4f60\u662f\u5982\u4f55\u9884\u89c1\u5e76\u89e3\u51b3\u5b83\u7684\uff1f</p> <ul> <li>\u6211\uff1a\u63d0\u5230\u4e86\u67d0\u9879\u76ee\u7684api\u4e0d\u7a33\u5b9a\uff0c\u6211\u4eec\u901a\u8fc7\u6d4b\u8bd5\u53d1\u73b0\u4e86</li> <li>AI\uff1a\u4f60\u662f\u5982\u4f55\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u8fd9\u4e2aapi\u7684\u7a33\u5b9a\u6027\uff0c\u4f7f\u7528\u4e86\u4ec0\u4e48\u65b9\u6cd5\u548c\u5de5\u5177\uff1f</li> </ul>"},{"location":"software_development/backend/interview_experiences/#tme","title":"TME\u4e00\u9762\u3010\u79d2\u6302\u3011","text":"<p>\u8c08\u5b9e\u4e60\u7ecf\u5386</p> <ul> <li>\u9762\u8bd5\u5b98\u8bc4\u4ef7\u5de5\u7a0b\u91cf\u4e0d\u5927</li> </ul> <p>\u5171\u4eab\u5c4f\u5e55\u672c\u5730ide\u5199\u7b97\u6cd5\u9898\uff0c\u81ea\u5df1\u8f93\u5165\u6d4b\u8bd5\u7528\u4f8b</p> <ul> <li>\u4e8c\u5206\u67e5\u627e</li> <li>\u5b57\u7b26\u4e32\u5168\u6392\u5217</li> </ul> <p>\u8bf4\u4e00\u4e0bmalloc\u548cnew\u7684\u533a\u522b</p> <p>\u8bf4\u4e00\u4e0b\u534f\u7a0b</p> <p>\u8bf4\u4e00\u4e0bmvcc\u7684\u5e95\u5c42\u5b9e\u73b0\u539f\u7406</p> <ul> <li>\u6211\u7b54\u4e86readView\u548cundo log\uff0c\u4f46\u662f\u9762\u8bd5\u5b98\u8981\u6c42\u66f4\u6df1\u5165\u66f4\u8be6\u7ec6\u4e00\u70b9</li> </ul> <p>\u4f60\u662f\u5982\u4f55\u5b66\u4e60C++\u7684</p> <p>\u770b\u4e86\u4ec0\u4e48C++\u7684\u4e66</p> <p>\u4f60\u6709\u505a\u8fc7\u504f\u5e95\u5c42\u7684\u540e\u7aef\u9879\u76ee\u5417</p> <p>\u770b\u4e86\u4ec0\u4e48\u6570\u636e\u5e93\u7684\u4e66</p> <p>\u7b97\u6cd5\u9898\u6ca1\u6709\u5168\u90e8ac\uff0c\u516b\u80a1\u6ca1\u600e\u4e48\u7b54\u51fa\u6765\uff0c\u611f\u89c9\u6302</p>"},{"location":"software_development/backend/interview_experiences/#tp-link","title":"TP-Link \u4e00\u9762","text":"<p>\u4ecb\u7ecd\u5b9e\u4e60\u9879\u76ee</p> <p>\u4e3a\u4ec0\u4e48\u8981\u6709\u591a\u6001\uff0c\u5982\u4f55\u5b9e\u73b0\u591a\u6001</p> <p>mvcc\u5b9e\u73b0\u539f\u7406</p>"},{"location":"software_development/backend/interview_experiences/#tp-link_1","title":"TP-Link \u4e8c\u9762","text":"<p>40\u4ebf\u4e0d\u91cd\u590d\u6570\u5b57\uff0c\u5982\u4f55\u5feb\u901f\u627e\u5230\u5176\u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u662f\u5426\u5b58\u5728</p> <p>20\u4e2a\u5c0f\u7403\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a\u6b21\u54c1\uff0c\u4f7f\u7528\u5929\u5e73\u79e4\u91cf\uff0c\u6700\u5c11\u79e4\u91cf\u6b21\u6570</p> <p>\u82e5\u5e72\u76cf\u706f\uff0c\u4e00\u5f00\u59cb\u90fd\u662f\u706d\u7684\uff0c\u7b2c\u4e00\u6b21\u62e8\u52a8\u6240\u6709\u706f\uff0c\u7b2c\u4e8c\u6b21\u62e8\u52a82\uff0c4\uff0c6...\u53f7\u706f\u7684\u5f00\u5173...\u6c42\u7b2c100\u76cf\u706f\u4eaeor\u6697</p> <p>\u73af\u5f62\u94fe\u8868I</p>"},{"location":"software_development/backend/interview_experiences/#tp-link_2","title":"TP-Link \u4e09\u9762","text":"<p>\u95ee\u5b9e\u4e60</p> <p>\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u662f\u865a\u51fd\u6570\u5417\uff0c\u4e3a\u4ec0\u4e48</p>"},{"location":"software_development/backend/interview_experiences/#_3","title":"\u817e\u8baf\u5e7f\u544a\u4e00\u9762\uff08\u6ee8\u6d77\u7ebf\u4e0b\uff09\u3010\u6302\u3011","text":"<p>\u7b80\u5355\u95ee\u4e86\u4e00\u4e0b\u5b9e\u4e60\u7ecf\u5386\uff0c\u63d0\u95ee\u5982\u4f55\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\uff08\u5373\u662f\u5426\u6709\u505a\u5bf9\u8d26\uff09</p> <ul> <li>\u5bf9\u8d26\u662f\u6211\u8fd9\u4e2a\u5b9e\u4e60\u9879\u76ee\u7684\u4e0a\u6e38\uff0c\u7531\u5176\u4ed6\u5b9e\u4e60\u751f\u8d1f\u8d23</li> </ul> <p>\u65e0\u7b97\u6cd5\u9898</p> <p>\u4ece\u9879\u76ee\u51fa\u53d1\u63d0\u95ee\u516b\u80a1</p> <ul> <li>\u5173\u4e8e\u4f60\u6821\u53cb\u7684\u9879\u76ee\uff0c\u5bf9\u4e8e\u7528\u6237\u8868\uff0c\u6211\u4eec\u5c31\u5047\u8bbe\u5fae\u4fe1\u90a3\u79cd\u91cf\u7ea7\uff0c\u4f60\u5982\u4f55\u8bbe\u8ba1\u6570\u636e\u8868</li> <li>\u67e5\u8be2 -&gt; \u7d22\u5f15</li> <li>\u6570\u636e\u91cf\u5927-&gt;\u5206\u5e93\u5206\u8868</li> <li>\u5047\u8bbe\u6709int64\u7684id\u3001varchar(64)\u7684\u7528\u6237\u540d\u3001\u6027\u522b\u3001\u66f4\u65b0\u65f6\u95f4\u7b49\u5b57\u6bb5\uff0c\u4f60\u4f1a\u5982\u4f55\u8bbe\u8ba1\u7d22\u5f15\u7684</li> <li>\u9009\u552f\u4e00\u7684</li> <li>\u5c3d\u53ef\u80fd\u6709\u5e8f\u7684\uff0c\u6700\u597d\u662f\u9012\u589e\u7684</li> <li>\u4f60\u8bf4\u9009\u552f\u4e00\u7684\uff0c\u90a3\u4e48\u5047\u8bbeint64\u7684id\u3001varchar(64)\u7684\u7528\u6237\u540d\u90fd\u662f\u552f\u4e00\u7684\uff0c\u4f60\u9009\u54ea\u4e2a\uff1f</li> <li>\u8fd9\u91cc\u6211\u8111\u5b50\u62bd\u4e86\u9009\u4e86varchar(64)\u6211\u8bf4\u56e0\u4e3a\u5b57\u8282\u66f4\u5c11\uff0c\u9762\u8bd5\u5b98\u8bf4\u4f60\u662f\u4e0d\u662f\u592a\u7d27\u5f20\u4e86</li> <li>\u6211\u624d\u610f\u8bc6\u8fc7\u6765\u7136\u540e\u9009\u4e86int64\uff0c\u7b97\u9519\u6570\u4e86\uff0c\u9009int64\u4e4b\u540e\u9762\u8bd5\u5b98\u9732\u51fa\u6ee1\u610f\u7684\u5fae\u7b11</li> <li>\u4e3a\u4ec0\u4e48\u5c3d\u91cf\u6709\u5e8f\uff0c\u6700\u597d\u662f\u9012\u589e</li> <li>B+\u6811\uff0c\u9875\u5206\u88c2\u95ee\u9898</li> <li>\u8c08\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u7d22\u5f15\u662fB+\u6811\uff0c\u4e0d\u662f\u4e8c\u53c9\u641c\u7d22\u6811\u3001B\u6811\u7b49\u7b49</li> <li>\u5e38\u89c4\u56de\u7b54\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u4fdd\u8bc1\u78c1\u76d8IO\u6b21\u6570\u5c3d\u53ef\u80fd\u5c11</li> <li>\u9762\u8bd5\u5b98\u8865\u5145\uff0c\u9009B+\u6811\u4e0d\u9009B\u6811\u8fd8\u6709\u4e00\u4e2a\u539f\u56e0\u662f\u5b83\u5f88\u9002\u5408\u8303\u56f4\u67e5\u627e\uff0cB\u6811\u8303\u56f4\u67e5\u627e\u8981\u627e\u591a\u4e2a\u975e\u53f6\u5b50\u8282\u70b9</li> <li>\u6709\u63a5\u89e6\u8fc7\u6162\u67e5\u8be2\u5417\uff0c\u600e\u4e48\u67e5\u770b\u6162\u67e5\u8be2\u5728\u54ea\u4e2a\u8bed\u53e5\u4e0a</li> <li>explain\u67e5\u770b\u6267\u884c\u8ba1\u5212\uff0c\u770b\u7d22\u5f15\u662f\u5426\u88ab\u4f7f\u7528</li> <li>\u4f60\u6709\u8003\u8651\u4f60\u9879\u76ee\u5982\u4f55\u5b9e\u73b0\u9ad8\u53ef\u7528\u5417\uff1f</li> <li>\u6211\u56de\u7b54\u4e86\u7f13\u5b58\u5565\u7684\uff0c\u9762\u8bd5\u5b98\u8bf4\u4ed6\u60f3\u95ee\u7684\u4e0d\u662f\u8fd9\u4e2a\uff0c\u662f\u90a3\u79cd\u9ad8\u5e76\u53d1\u5982\u4f55\u5904\u7406\u5e76\u53d1\u95ee\u9898\uff0c\u4e0d\u662f\u5982\u4f55\u5904\u7406\u6027\u80fd\u95ee\u9898</li> <li>\u6211\u56de\u7b54\u7b2c\u4e00\u53cd\u5e94\u662f\u52a0\u9501\uff0c\u4ed6\u8bf4\u5bf9</li> <li>\u6bd4\u5982\u8bf4mysql \u6709\u4e24\u4e2a\u7528\u6237\u60f3\u8981\u5148\u8bfb\u6570\u636e\uff0c\u5982\u679c\u8bfb\u51fa\u6765\u6709\u8fd9\u6761\u8bb0\u5f55\u5c31\u83b7\u53d6\uff0c\u5982\u679c\u6ca1\u6709\u5c31insert\uff0c\u4f60\u600e\u4e48\u5b9e\u73b0</li> <li>\u9762\u8bd5\u5b98\u63d0\u9192\u76f4\u63a5\u52a0\u9501\u8fd8\u662f\u592a\u9ebb\u70e6\u4e86\uff0c\u6709\u6ca1\u6709\u9ad8\u6548\u7387\u4e00\u70b9\u7684</li> <li>\u6211\u82e6\u601d\u51a5\u60f3\u8fd8\u662f\u4e0d\u77e5\u9053\uff0c\u4ed6\u95ee\u6211mysql\u6709\u54ea\u4e9b\u9501</li> <li>mysql\u6709\u54ea\u4e9b\u9501</li> <li>\u6211\uff1a\u5217\u4e3e</li> <li>mysql\u662f\u5982\u4f55\u5b9e\u73b0\u95f4\u9699\u9501\u7684\uff0c\u6709\u4ec0\u4e48\u8bed\u6cd5<ul> <li>\u6211\uff1aselect for update</li> <li>\u9762\u8bd5\u5b98\u8bf4\u5bf9</li> </ul> </li> <li>\u4f60\u4e86\u89e3\u4e50\u89c2\u9501\u5417\uff0c\u6211\u8bf4\u4e86\u89e3\uff0c\u5927\u6982\u8bb2\u4e86\u4e00\u4e0b\u4e50\u89c2\u9501\u662f\u8bfb\u7684\u65f6\u5019\u4e0d\u52a0\u9501\uff0c\u5199\u7684\u65f6\u5019\u52a0\u9501</li> <li>\u9762\u8bd5\u5b98\u7ea0\u6b63\u5e76\u89e3\u91ca\uff0c\u4e50\u89c2\u9501\u662f\u9ed8\u8ba4\u4e0d\u4f1a\u53d1\u751f\u5e76\u53d1\u95ee\u9898\uff0c\u8bfb\u7684\u65f6\u5019\u653e\u5fc3\u8bfb\uff0c\u5199\u7684\u65f6\u5019\u9700\u8981\u7a0b\u5e8f\u5458\u81ea\u5df1\u5b9a\u4e49\u903b\u8f91\uff0c\u5728\u4e1a\u52a1\u4ee3\u7801\u4e2d\u52a0\u5165while\u5faa\u73af\u5224\u65ad\u67d0\u72b6\u6001or\u67d0\u6761\u4ef6\u662f\u5426\u53d1\u751f\u4e86\u6539\u53d8\uff0c\u5982\u679c\u53d1\u751f\u6539\u53d8\uff0c\u8bf4\u660e\u53d1\u751f\u4e86\u5e76\u53d1\u95ee\u9898\uff0c\u9700\u8981\u8fdb\u884c\u66f4\u65b0\uff0c\u4e5f\u5c31\u662f\u524d\u9762\u8bf4\u7684\u5199\u3002\u8fd9\u79cd\u65b9\u5f0f\u6bd4\u9501\u6027\u80fd\u66f4\u597d\uff0c\u56e0\u4e3a\u9501\u4e0d\u5141\u8bb8\u5176\u4ed6\u4e1a\u52a1\u8bfb\u53d6\uff0c\u4f46\u4e50\u89c2\u9501\u7f3a\u70b9\u662f\u9700\u8981\u7a0b\u5e8f\u5458\u81ea\u5df1\u5728\u4e1a\u52a1\u4ee3\u7801\u4e2d\u5224\u65ad\u6761\u4ef6</li> <li>\u5047\u8bbe\u4e24\u4e2a\u670d\u52a1\u5668\uff0c\u6211\u53d1\u73b0\u4e24\u4e2a\u670d\u52a1\u5668\u4e4b\u95f4\u53d1\u9001\u4e0d\u4e86\u4fe1\u606f\uff0c\u4f60\u5982\u4f55\u6392\u67e5</li> <li>\u6211\uff1a\u5148ping\u4e00\u4e0b</li> <li>\u95ee\uff1aping\u54ea\u4e00\u5c42</li> <li>\u6211\uff1aip\u5c42</li> <li>\u95ee\uff1a\u4f7f\u7528\u7684\u662f\u4ec0\u4e48\u534f\u8bae</li> <li>\u6211\uff1aicmp</li> <li>\u95ee\uff1a\u5982\u679cping\u7684\u901a\uff0c\u4f46\u8fd8\u662f\u53d1\u9001\u4e0d\u4e86\u5462\uff0c\u540e\u9762\u63d0\u793a\u4e86\u4eceip\u5f80\u4e0a\u601d\u8003</li> <li>\u6211\u81ea\u8a00\u81ea\u8bed\uff1atcp\u53d1\u9001\u4e0d\u4e86\u4f1a\u662f\u5565\u95ee\u9898\u5462</li> <li>\u6211\uff1anetstat\u67e5\u770b\u7aef\u53e3\u53ef\u4ee5\u5417</li> <li>\u9762\u8bd5\u5b98\u7b11\uff1a\u4f60\u4e0d\u80fd\u8bbf\u95ee\u6211\u7684\u670d\u52a1\u5668</li> <li>\u60f3\u4e0d\u51fa\u6765\uff0c\u4ed6\u95eetelnet\u7528\u8fc7\u5417\uff0c\u6211\u8bf4\u7528\u8fc7\uff0c\u4ed6\u95ee\u5982\u679c\u7528telnet\u770btcp\uff0c\u600e\u4e48\u5199\u5462\uff0c\u6211\u8fd8\u662f\u4e0d\u4f1a\u3002\u4ed6\u8bf4\u56e0\u4e3atelnet\u662ftcp\u5c42\u7684\uff0c\u6240\u4ee5telnet ip + \u7aef\u53e3\u5c31\u884c</li> <li>\u9762\u8bd5\u5b98\uff1a\u5982\u679ctelnet\u4e5f\u884c\u4e0d\u901a\u5462</li> <li>\u6211\u62a2\u7b54\uff1a\u90a3\u5c31\u662fhttp\u6709\u95ee\u9898\u3002</li> <li>\u9762\u8bd5\u5b98\uff1ahttp\u5982\u4f55\u67e5\u770b\u662f\u54ea\u884c\u4ee3\u7801\u51fa\u95ee\u9898\uff0cLinux\u6709\u7528\u8fc7\u76f8\u5173\u7684\u5de5\u5177\u5417</li> <li>\u6211\uff1atop -&gt; pstack -&gt; gdb</li> <li>\u95ee\uff1apstack\u770b\u7684\u662f\u4ec0\u4e48<ul> <li>\u6211\uff1a\u5806\u6808\u4fe1\u606f</li> </ul> </li> <li>\u95ee\uff1agdb\u4e0d\u592a\u597d\uff0c\u8fd8\u6709\u4ec0\u4e48\u5de5\u5177\u5462</li> <li>\u6211\u5b9e\u5728\u60f3\u4e0d\u51fa\u6765\uff0c\u4ed6\u89e3\u91ca\u8fd8\u6709perf\u548cstrace\uff0c\u7136\u540e\u89e3\u91ca\u4e86\u5b83\u4eec\u7684\u7528\u9014</li> <li>\u5bf9\u4e8eRedis\u54e8\u5175\u673a\u5236\u7684\u539f\u7406\u6709\u4e86\u89e3\u5417\uff1f</li> <li>\u6211\u5b9e\u5728\u6ca1\u6709\uff0c\u6447\u4e86\u6447\u5934</li> <li>\u6709\u81ea\u5df1\u90e8\u7f72\u8fc7Redis\u96c6\u7fa4\u5417</li> <li>\u6211\u5b9e\u5728\u6ca1\u6709\uff0c\u6447\u4e86\u6447\u5934</li> <li>\u597d\uff0c\u90a3\u4e0d\u95eeRedis\u4e86</li> <li>\u5e38\u89c4\u56de\u7b54</li> <li>\u5206\u5e03\u5f0f\u9501\u4e86\u89e3\u5417</li> <li> <p>\u4e0d\u4e86\u89e3</p> </li> <li> <p>\u95ee\u4e09\u6b21\u63e1\u624b</p> </li> <li>\u56db\u6b21\u6325\u624b\u5462</li> <li>\u5e38\u89c4\u56de\u7b54</li> <li>\u4e3a\u4ec0\u4e48\u9700\u89812MSL</li> <li>\u6211\u8bf4\u56e0\u4e3aMSL\u662f\u62a5\u6587\u6700\u5927\u5b58\u6d3b\u65f6\u95f4\uff0c\u9700\u8981\u4fdd\u8bc1\u80fd\u591f\u63a5\u6536\u5230ACK</li> <li>\u9762\u8bd5\u5b98\u8bf4\u5982\u679c\u6211\u4e0d\u63a5\u6536ACK\uff0c\u76f4\u63a5\u5173\u95ed\u5462\uff0c\u4f1a\u600e\u4e48\u6837</li> <li>\u6211\u60f3\u4e86\u5f88\u4e45\uff0c\u9762\u8bd5\u5b98\u63d0\u793a\u8054\u7cfb\u4e00\u4e0b\u524d\u9762\u8bf4\u7684\u5e8f\u5217\u53f7<ul> <li>\u6211\u609f\u4e86\uff0c\u6253\u65ad\u8bf4\uff0c\u662f\u56e0\u4e3a\u8981\u4fdd\u8bc1FIN\u62a5\u6587\u4e0d\u662f\u5386\u53f2\u62a5\u6587\uff0c\u4e5f\u5c31\u662f\u4fdd\u8bc1\u62a5\u6587\u7684\u6709\u5e8f\u6027</li> <li>\u9762\u8bd5\u5b98\u7ec8\u4e8e\u9732\u51fa\u4e86\u6ee1\u610f\u7684\u5fae\u7b11</li> </ul> </li> </ul> <p>\u53cd\u95ee\u73af\u8282</p> <ul> <li>\u60a8\u8fd9\u8fb9\u4e1a\u52a1\u662f\u5565</li> <li>\u89e3\u91ca\u4e8610min\uff0c\u5927\u6982\u662f\u505a\u4e00\u4e2a\u4e2d\u4ecb\u5e73\u53f0\uff0c\u8fde\u63a5\u4f01\u4e1a\u548c\u5fae\u4fe1\u5e7f\u544a\u6295\u9001\uff0c\u6211\u4eec\u5e73\u53f0\u8fdb\u884c\u62bd\u6210\u6765\u76c8\u5229</li> <li>\u6211\u5982\u679c\u8fdb\u5165\u4e86\u60a8\u7684\u90e8\u95e8\uff0c\u9700\u8981\u5b66\u4e60\u4ec0\u4e48\u77e5\u8bc6</li> <li>\u76ee\u524dgo\u4e3a\u4e3b\uff0cC++\u4e3a\u8f85</li> <li>\u4eca\u5929\u6709\u673a\u4f1a\u4e8c\u9762\u5417</li> <li>\u8fd9\u4e2a\u8981\u770b\u9762\u8bd5\u5b98\u7684\u65f6\u95f4\uff0c\u4f46\u4f30\u8ba1\u6ca1\u65f6\u95f4\uff0c\u6211\u4e00\u9762\u90fd\u9762\u4e0d\u8fc7\u6765</li> </ul>"},{"location":"software_development/backend/interview_experiences/#_4","title":"\u817e\u8baf\u5fae\u4fe1\u652f\u4ed8\u4e00\u9762\u3010\u79d2\u6302\u3011","text":"<p>\u95ee\u5b9e\u4e60</p> <ul> <li>mysql\u4fee\u6539\u5b57\u6bb5tdw\u6570\u636e\u4f1a\u600e\u4e48\u529e</li> <li>\u5b57\u6bb5\u91cd\u547d\u540d\u5462\uff0ctdw\u4f1a\u589e\u52a0\u5b57\u6bb5\u8fd8\u662f\u4f1a\u5220\u9664\u5b57\u6bb5\uff0c\u539f\u6765\u7684\u6570\u636e\u4f1a\u600e\u4e48\u6837\u5462</li> <li>\u6709\u8003\u8651\u8fc7mysql\u5206\u5e93\u5206\u8868tdw\u4f1a\u600e\u4e48\u529e\u5417</li> </ul> <p>\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b</p> <ul> <li>\u5df2\u63d0\u4ea4\u8bfb\u662f\u4ec0\u4e48\u610f\u601d</li> <li>\u4e3a\u4ec0\u4e48\u4f1a\u5b58\u5728\u4e0d\u53ef\u91cd\u590d\u8bfb\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u5b58\u5728\u5e7b\u8bfb</li> <li>\u5982\u4f55\u89e3\u51b3\u5e7b\u8bfb</li> </ul> <p>\u9762\u5411\u8fc7\u7a0b\u548c\u9762\u5411\u5bf9\u8c61\u7684\u533a\u522b</p> <p>\u4e3a\u4ec0\u4e48\u9700\u8981\u7c7b\uff0c\u4e3a\u4ec0\u4e48\u9700\u8981\u591a\u6001</p> <p>\u4ecb\u7ecd\u4e00\u4e0b\u667a\u80fd\u6307\u9488</p> <p>read\u662f\u963b\u585e\u8fd8\u662f\u975e\u963b\u585e</p> <p>\u4ecb\u7ecd\u4e00\u4e0bselect\u3001poll\u548cepoll</p> <p>\u8fdb\u7a0b\u95f4\u901a\u4fe1\u65b9\u5f0f</p> <ul> <li>\u7ba1\u9053\u662f\u5355\u5de5\u8fd8\u662f\u53cc\u5de5\u7684\uff0c\u4e3a\u4ec0\u4e48</li> <li>\u5148\u521b\u5efa\u7ba1\u9053\u8fd8\u662f\u5148fork</li> <li>\u8fd9\u4e2a\u6211\u6ca1\u7b54\u51fa\u6765</li> </ul> <p>\u5206\u5e03\u5f0fCAP\u539f\u7406</p> <p>\u4e3a\u4ec0\u4e48\u4f1a\u6709\u7c98\u5305\u95ee\u9898</p> <ul> <li>\u6211\u7b54\u7684\u662f\u56e0\u4e3aTCP\u9762\u5411\u5b57\u8282\u6d41</li> <li>\u9762\u8bd5\u5b98\u8bf4\u60f3\u542c\u5230\u7684\u662f tcp\u5206\u4e0d\u6e05\u6d88\u606f\u7684\u8fb9\u754c</li> </ul> <p>\u4ec0\u4e48\u662f\u6b7b\u9501\uff0c\u5982\u4f55\u907f\u514d\u6b7b\u9501</p> <p>\u53cd\u95ee</p> <ul> <li>\u505a\u4ec0\u4e48\u4e1a\u52a1\uff1ac to b \u5546\u6237\u5fae\u4fe1\u652f\u4ed8</li> <li>\u9700\u8981\u5982\u4f55\u63d0\u5347\uff0c\u80cc\u516b\u80a1\u662f\u6ca1\u7528\u7684\uff0c\u9700\u8981\u77e5\u5176\u6240\u4ee5\u7136\uff0c\u4ee5\u540e\u5de5\u4f5c\u7528\u5230\u89e3\u51b3\u65b9\u6848\u9700\u8981\u5f53\u5e74\u516b\u80a1\u7684\u6df1\u5165\u7406\u89e3</li> </ul> <p>\u79d2\u6302</p>"},{"location":"software_development/backend/interview_experiences/#tencent","title":"Tencent\u6821\u62db\u5206\u4eab&amp;\u5c31\u804c\u8f85\u5bfc","text":""},{"location":"software_development/backend/DevOps/Docker/","title":"Docker","text":"<p>Docker\u5b98\u65b9\u6587\u6863Docker overview | Docker Docs</p>"},{"location":"software_development/backend/DevOps/Docker/#docker_1","title":"\u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60Docker","text":""},{"location":"software_development/backend/DevOps/Docker/#_1","title":"\u73af\u5883(\u5207\u6362/\u914d\u7f6e)\u9ebb\u70e6","text":"<p>\u5982\u679c\u4f60\u95ee\u4e00\u4e2a\u8ba1\u7b97\u673a\u5b66\u751f\uff0c\u5b66\u8ba1\u7b97\u673a\u8fc7\u7a0b\u4e2d\u6700\u75db\u82e6\u7684\u4e8b\u60c5\uff0c\u90a3\u4e48\u4ed6\u4eec\u4e00\u5b9a\u4f1a\u56de\u7b54\uff1a\u914d\u73af\u5883\uff0c\u800c\u4e0d\u662f\u5199\u4ee3\u7801\u3002</p> <p>\u4e3e\u4e24\u4e2a\u6700\u7ecf\u5178\u7684\u4f8b\u5b50\uff1a</p> <ul> <li>\u6bcf\u4e2a\u5927\u4e00\u5b66\u751f\u4e00\u5b9a\u5c1d\u8bd5\u8fc7\u4e3aVScode\u914d\u7f6eC/C++\u73af\u5883\u3002\u5728\u914d\u7f6e\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u4e0d\u4ec5\u9700\u8981\u4e0b\u8f7dGCC\u548cMinGW\uff0c\u8fd8\u8981\u4e3a\u5176\u914d\u7f6e\u73af\u5883\u53d8\u91cf\u624d\u80fd\u8dd1\u8d77\u6765\uff0c\u5bf9\u65b0\u624b\u800c\u8a00\u8fd9\u4e2a\u8fc7\u7a0b\u81f3\u5c11\u8981\u82b1\u4e24\u4e2a\u5c0f\u65f6\u624d\u80fd\u5b8c\u6210\u3002</li> <li>A\u5f00\u53d1\u540e\u7684\u7a0b\u5e8f\u80fd\u591f\u5728A\u7684\u73af\u5883\u4e0a\u8fd0\u884c\uff0c\u800c\u5728B\u7684\u73af\u5883\u4e0a\u4e0d\u80fd\u8fd0\u884c</li> </ul>"},{"location":"software_development/backend/DevOps/Docker/#_2","title":"\u5e94\u7528\u4e4b\u95f4\u9700\u8981\u9694\u79bb","text":"<p>\u5047\u8bbe\u4e24\u4e2a\u5e94\u7528\u90e8\u7f72\u5728\u540c\u4e00\u53f0\u670d\u52a1\u5668\u4e0a\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u95ee\u9898\uff1a</p> <ul> <li>\u5982\u679c\u4e00\u4e2a\u5e94\u7528\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u5bfc\u81f4CPU\u5360100%\u3002\u90a3\u53e6\u4e00\u4e2a\u5e94\u7528\u4e5f\u4f1a\u53d7\u5230\u5173\u8054\u3002</li> <li>\u4e0d\u540c\u5e94\u7528\u7684\u4f9d\u8d56\u5b89\u88c5\u5728\u540c\u4e00\u4e2a\u670d\u52a1\u5668\u4e0a\uff0c\u9020\u6210\u5404\u79cd\u51b2\u7a81/\u65e0\u6cd5\u517c\u5bb9\u3002\u4f8b\u5982\u7b14\u8005\u4eb2\u81ea\u7ecf\u5386\u8fc7\u7684PyQt5\u4e0eQt\u51b2\u7a81\u3002</li> <li>\u5e94\u7528\u4e4b\u95f4\u7aef\u53e3\u51b2\u7a81\uff0c\u8fd9\u662f\u56e0\u4e3a\u4e00\u53f0\u8bbe\u5907\u4e0a\u7684\u4e0d\u540c\u5e94\u7528\u4e0d\u80fd\u4f7f\u7528\u76f8\u540c\u7aef\u53e3\u3002</li> </ul> <p>\u5173\u4e8e\u7aef\u53e3\uff1a</p> <ul> <li>\u5f53\u8bbe\u5907\u4f5c\u4e3a\u63a5\u6536\u65b9\u65f6\uff0c\u4f20\u8f93\u5c42\u5219\u8981\u8d1f\u8d23\u628a\u6570\u636e\u5305\u4f20\u7ed9\u5e94\u7528\uff0c\u4f46\u662f\u4e00\u53f0\u8bbe\u5907\u4e0a\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u5e94\u7528\u5728\u63a5\u6536\u6216\u8005\u4f20\u8f93\u6570\u636e\uff0c\u56e0\u6b64\u9700\u8981\u7528\u4e00\u4e2a\u7f16\u53f7\u5c06\u5e94\u7528\u533a\u5206\u5f00\u6765\uff0c\u8fd9\u4e2a\u7f16\u53f7\u5c31\u662f\u7aef\u53e3\u3002</li> <li>\u6bd4\u5982 80 \u7aef\u53e3\u901a\u5e38\u662f Web \u670d\u52a1\u5668\u7528\u7684\uff0c22 \u7aef\u53e3\u901a\u5e38\u662f\u8fdc\u7a0b\u767b\u5f55\u670d\u52a1\u5668\u7528\u7684\u3002\u800c\u5bf9\u4e8e\u6d4f\u89c8\u5668\uff08\u5ba2\u6237\u7aef\uff09\u4e2d\u7684\u6bcf\u4e2a\u6807\u7b7e\u680f\u90fd\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u8fdb\u7a0b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u4e3a\u8fd9\u4e9b\u8fdb\u7a0b\u5206\u914d\u4e34\u65f6\u7684\u7aef\u53e3\u53f7\u3002</li> <li>\u7531\u4e8e\u4f20\u8f93\u5c42\u7684\u62a5\u6587\u4e2d\u4f1a\u643a\u5e26\u7aef\u53e3\u53f7\uff0c\u56e0\u6b64\u63a5\u6536\u65b9\u53ef\u4ee5\u8bc6\u522b\u51fa\u8be5\u62a5\u6587\u662f\u53d1\u9001\u7ed9\u54ea\u4e2a\u5e94\u7528\u3002</li> </ul> <p>\u800cDocker\u5c31\u662f\u89e3\u51b3\u4ee5\u4e0a\u95ee\u9898\u7684\u4e00\u95e8\u5fc5\u5907\u6280\u672f\u3002</p>"},{"location":"software_development/backend/DevOps/Docker/#docker_2","title":"\u521d\u6b65\u8ba4\u8bc6Docker","text":"<p>\u4ecb\u7ecd\u4ec0\u4e48\u662fDocker\u662f\u4e00\u4ef6\u975e\u5e38\u7b80\u5355\u7684\u4e8b\u60c5\uff0c\u7136\u800c\uff0c\u6211\u4eec\u5b66\u4e60\u4e00\u95e8\u6280\u672f\u6700\u91cd\u8981\u7684\u662f\u4e86\u89e3\u8fd9\u9879\u6280\u672f\u80cc\u540e\u7684\u539f\u7406\u548c\u601d\u60f3\uff0c\u800c\u4e0d\u662f\u4e3a\u4e86\u6280\u672f\u800c\u6280\u672f\u3002</p> <p>\u9996\u5148\u6211\u4eec\u8981\u660e\u786e\u4e00\u4e2a\u5173\u7cfb\uff1a</p> <ol> <li>Docker\u662f\u5bb9\u5668\u6280\u672f\u4e2d\u6bd4\u8f83\u51fa\u540d\u7684\u4e00\u79cd\uff0c\u5bb9\u5668\u6280\u672f\u4e0d\u53ea\u6709Docker</li> <li>\u5bb9\u5668\u6280\u672f\u662f\u865a\u62df\u5316\u6280\u672f\u4e2d\u7684\u4e00\u79cd\uff0c\u865a\u62df\u5316\u6280\u672f\u4e0d\u53ea\u6709\u5bb9\u5668\u6280\u672f</li> </ol> <p></p> <p>\u65e2\u7136\u6211\u4eec\u8981\u8ba4\u8bc6\u7684Docker\u5c5e\u4e8e\u865a\u62df\u5316\u6280\u672f\u7684\u4e00\u79cd\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u4f1a\u6709\u865a\u62df\u5316\u6280\u672f\uff1f\u53c8\u662f\u5982\u4f55\u53d1\u5c55\u51fa\u5bb9\u5668\u6280\u672f\u7684\uff1f</p>"},{"location":"software_development/backend/DevOps/Docker/#_3","title":"\u4ec0\u4e48\u662f\u865a\u62df\u5316\uff1f","text":"<p>\u5982\u679c\u4f60\u662f\u4e00\u4e2a\u516c\u53f8\u8001\u603b\uff0c\u8bd5\u60f3\u8fd9\u4e48\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ul> <li>\u4f60\u624b\u4e0a\u6709\u4e00\u53f0\u9ad8\u6027\u80fd\u7684\u670d\u52a1\u5668\uff0c\u4f46\u4f60\u7684\u4e1a\u52a1\u53ea\u80fd\u4f7f\u7528\u8fd9\u53f0\u670d\u52a1\u5668\u768420%\u6027\u80fd\uff0c\u5982\u679c\u7ee7\u7eed\u4f7f\u7528\u8fd9\u53f0\u670d\u52a1\u5668\u8dd1\u5355\u4e00\u4e1a\u52a1\uff0c\u90a3\u4e48\u989d\u5916\u768480%\u6027\u80fd\u5c31\u4f1a\u767d\u767d\u6d6a\u8d39\u3002</li> <li>\u4f60\u624b\u4e0a\u8fd8\u6709\u4e00\u5806\u8001\u65e7\u7684\u670d\u52a1\u5668\uff0c\u5355\u4e2a\u670d\u52a1\u5668\u8fd8\u80fd\u8dd1\uff0c\u4f46\u6027\u80fd\u5e76\u4e0d\u80fd\u652f\u6491\u516c\u53f8\u7684\u4e1a\u52a1\uff0c\u5982\u679c\u4e22\u5f03\u8fd9\u4e9b\u8001\u65e7\u7684\u670d\u52a1\u5668\u53c8\u89c9\u5f97\u53ef\u60dc\u3002</li> </ul> <p>\u90a3\u4e48\u4f60\u4f1a\u600e\u4e48\u89e3\u51b3\u8fd9\u4e24\u4e2a\u95ee\u9898\u5462\uff1f</p> <p>\u7b54\u6848\u975e\u5e38\u660e\u663e\uff1a</p> <ul> <li>\u5bf9\u4e8e\u95ee\u9898\u4e00\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u9009\u62e9\u628a\u591a\u4f59\u7684\u6027\u80fd\u7528\u5728\u5176\u4ed6\u7684\u4e1a\u52a1\u4e0a\u2014\u2014\u5982\u679c\u81ea\u5df1\u516c\u53f8\u4e1a\u52a1\u53ea\u7528\u4e8620%\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c0680%\u7684\u6027\u80fd\u79df\u7ed9\u5176\u4ed6\u7684\u516c\u53f8\u8ba9\u4ed6\u4eec\u8dd1\u81ea\u5df1\u7684\u4e1a\u52a1</li> <li>\u5bf9\u4e8e\u95ee\u9898\u4e8c\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u5c06\u8fd9\u4e9b\u96f6\u788e\u7684\u670d\u52a1\u5668\u8d44\u6e90\u62fc\u51d1\u8d77\u6765\uff0c\u6700\u7ec8\u53d8\u6210\u4e00\u53f0\u6027\u80fd\u8db3\u591f\u4f7f\u7528\u7684\u670d\u52a1\u5668</li> </ul> <p>\u4f46\u65b0\u7684\u95ee\u9898\u4e5f\u968f\u4e4b\u800c\u6765\uff1a\u76f4\u63a5\u4f7f\u7528\u7269\u7406\u673a\u5e76\u4e0d\u80fd\u5b9e\u73b0\u4ee5\u4e0a\u505a\u6cd5\uff0c\u8fd9\u6d89\u53ca\u5230\u6211\u4eec\u4e00\u5f00\u59cb\u6240\u8bb2\u7684\u5e94\u7528\u9694\u79bb\u95ee\u9898\u2014\u2014\u5176\u4ed6\u4eba\u7684\u5e94\u7528\u5982\u679c\u4e0e\u6211\u4eec\u7684\u5e94\u7528\u5171\u4eab\u8d44\u6e90\uff0c\u53ea\u8981\u4ed6\u4eec\u7684\u5e94\u7528\u5d29\u6e83\u6216\u8005\u5360\u7528\u8f83\u591a\u8d44\u6e90\uff0c\u90fd\u4f1a\u5bfc\u81f4\u6211\u4eec\u7684\u5e94\u7528\u5d29\u6e83\u3002\u5bf9\u4e8e\u505a\u6cd5\u4e8c\uff0c\u6211\u4eec\u4e5f\u6bd4\u8f83\u96be\u5c06\u786c\u4ef6\u8d44\u6e90\u76f4\u63a5\u7ec4\u5408\u5728\u4e00\u8d77\u4ece\u800c\u5b9e\u73b0\u8d44\u6e90\u7684\u6574\u5408\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u865a\u62df\u5316\u3002</p> <p>\u4e0a\u8ff0\u63d0\u5230\u7684\u4e24\u79cd\u95ee\u9898\uff0c\u6211\u4eec\u5f52\u7eb3\u4e3a\u9ad8\u6027\u80fd\u786c\u4ef6\u6027\u80fd\u8fc7\u5269\u548c\u8001\u65e7\u4f4e\u6027\u80fd\u786c\u4ef6\u7684\u91cd\u7ec4\u91cd\u7528</p> <p>\u800c\u5bf9\u4e8e\u65b0\u4ea7\u751f\u7684\u95ee\u9898\uff0c\u6211\u4eec\u5f52\u7eb3\u4e3a\u8d44\u6e90\u9694\u79bb\u95ee\u9898</p> <p>\u865a\u62df\u5316\u6b63\u662f\u4e00\u95e8\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u800c\u4ea7\u751f\u7684\u6280\u672f\u3002</p> <p>\u7ef4\u57fa\u767e\u79d1: </p> <p>\u865a\u62df\u5316\uff08\u6280\u672f\uff09\u6216\u865a\u62df\u6280\u672f\uff08\u82f1\u8bed\uff1aVirtualization\uff09\u662f\u4e00\u79cd\u8d44\u6e90\u7ba1\u7406\u6280\u672f\uff0c\u662f\u5c06\u8ba1\u7b97\u673a\u7684\u5404\u79cd\u5b9e\u4f53\u8d44\u6e90\uff08CPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\u7a7a\u95f4\u3001\u7f51\u7edc\u9002\u914d\u5668\u7b49\uff09\uff0c\u4e88\u4ee5\u62bd\u8c61\u3001\u8f6c\u6362\u540e\u5448\u73b0\u51fa\u6765\u5e76\u53ef\u4f9b\u5206\u5272\u3001\u7ec4\u5408\u4e3a\u4e00\u4e2a\u6216\u591a\u4e2a\u7535\u8111\u914d\u7f6e\u73af\u5883\u3002\u7531\u6b64\uff0c\u6253\u7834\u5b9e\u4f53\u7ed3\u6784\u95f4\u7684\u4e0d\u53ef\u5207\u5272\u7684\u969c\u788d\uff0c\u4f7f\u7528\u6237\u53ef\u4ee5\u6bd4\u539f\u672c\u7684\u914d\u7f6e\u66f4\u597d\u7684\u65b9\u5f0f\u6765\u5e94\u7528\u8fd9\u4e9b\u7535\u8111\u786c\u4ef6\u8d44\u6e90\u3002\u8fd9\u4e9b\u8d44\u6e90\u7684\u65b0\u865a\u62df\u90e8\u5206\u662f\u4e0d\u53d7\u73b0\u6709\u8d44\u6e90\u7684\u67b6\u8bbe\u65b9\u5f0f\uff0c\u5730\u57df\u6216\u7269\u7406\u914d\u7f6e\u6240\u9650\u5236\u3002\u4e00\u822c\u6240\u6307\u7684\u865a\u62df\u5316\u8d44\u6e90\u5305\u62ec\u8ba1\u7b97\u80fd\u529b\u548c\u8d44\u6599\u5b58\u50a8\u3002</p> <p>\u7b80\u5355\u6765\u8bf4\uff0c\u865a\u62df\u5316\u5c31\u662f\u5c06\u5b9e\u4f53\u8d44\u6e90\uff08CPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\u7a7a\u95f4\u3001\u7f51\u7edc\u9002\u914d\u5668\u7b49\uff09\u62bd\u8c61\u5316\uff0c\u5c06\u8fd9\u4e9b\u5b9e\u4f53\u7684\u8d44\u6e90\u901a\u8fc7\u62bd\u8c61\u653e\u5165\u4e00\u4e2a\u8d44\u6e90\u6c60\uff0c\u63d0\u4f9b\u7ed9\u5ba2\u6237\u4f7f\u7528\u3002</p> <p>\u6309\u7167\u62bd\u8c61\u7a0b\u5ea6\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5206\u4e3a\u56db\u7c7b\u865a\u62df\u5316</p>"},{"location":"software_development/backend/DevOps/Docker/#_4","title":"\u786c\u4ef6\u62bd\u8c61\u5c42\u7b49\u7ea7\u7684\u865a\u62df\u5316","text":"<p>\u6211\u4eec\u5e38\u8bf4\u7684\u201d\u865a\u62df\u673a\u201c\u3002</p> <p>\u8fd9\u4e00\u6b21\u5c42\u7ea7\u7684\u865a\u62df\u5316\u5212\u5206\u7684\u5b9e\u4f53\u8d44\u6e90\u4e3a\u786c\u4ef6\u8d44\u6e90\uff0c\u5c06\u4e0d\u540c\u786c\u4ef6\u8d44\u6e90\u7ec4\u4ea4\u7ed9\u4e0d\u540c\u7684\u865a\u62df\u673a\u4f7f\u7528\uff0c\u4ece\u800c\u5b9e\u73b0\u4e00\u53f0\u5bbf\u4e3b\u673a\u80fd\u591f\u8fd0\u884c\u591a\u53f0\u865a\u62df\u673a\u3002</p> <p>\u901a\u8fc7\u8f6f\u4ef6\uff08\u4f8b\u5982VMWare\uff09\u5c06\u5bbf\u4e3b\u673a\u7684\u786c\u4ef6\u8d44\u6e90\uff08\u4f8b\u5982\u786c\u4ef6\u548c\u5185\u5b58\uff09\u8fdb\u884c\u5212\u5206\uff0c\u5212\u5206\u540e\u7684\u4e0d\u540c\u8d44\u6e90\u7ec4\u7528\u6765\u6a21\u62df\u4e00\u53f0\u7269\u7406\u673a\u7684\u786c\u4ef6\uff0c\u5305\u62ec\u4e0d\u540c\u67b6\u6784\u7684\u5904\u7406\u5668\u3001\u5185\u5b58\u3001\u603b\u7ebf\u3001\u78c1\u76d8IO\u7b49\u786c\u4ef6\u8bbe\u5907\u3002\u6a21\u62df\u5f97\u5230\u7684\u865a\u62df\u673a\u53ef\u4ee5\u5b89\u88c5\u4e0d\u540c\u7684\u7cfb\u7edf\uff0c\u8fd0\u884c\u865a\u62df\u673a\u65f6\uff0c\u8f6f\u4ef6\u4f1a\u5c06\u865a\u62df\u673a\u6240\u53d1\u51fa\u7684\u6307\u4ee4\uff0c\u8f6c\u6362\u4e3a\u5bbf\u4e3b\u673a\u80fd\u591f\u6267\u884c\u7684\u6307\u4ee4\uff0c\u5728\u5bbf\u4e3b\u673a\u4e0a\u6267\u884c\u3002</p>"},{"location":"software_development/backend/DevOps/Docker/#_5","title":"\u64cd\u4f5c\u7cfb\u7edf\u7b49\u7ea7\u7684\u865a\u62df\u5316","text":"<p>\u6211\u4eec\u5e38\u8bf4\u7684\u201d\u5bb9\u5668\u201c\u3002</p> <p>\u8fd9\u4e00\u6b21\u5c42\u7ea7\u7684\u865a\u62df\u5316\u5212\u5206\u7684\u5b9e\u4f53\u8d44\u6e90\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u8d44\u6e90\uff0c\u5c06\u64cd\u4f5c\u7cfb\u7edf\u6240\u7ba1\u7406\u7684\u8ba1\u7b97\u673a\u8d44\u6e90\uff0c\u5305\u62ec\u8fdb\u7a0b\u3001\u6587\u4ef6\u3001\u8bbe\u5907\u3001\u7f51\u7edc\u7b49\u5206\u7ec4\uff0c\u7136\u540e\u4ea4\u7ed9\u4e0d\u540c\u7684\u5bb9\u5668\u4f7f\u7528\uff0c\u4ece\u800c\u5b9e\u73b0\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u8fd0\u884c\u591a\u4e2a\u5bb9\u5668\u3002</p> <p>\u5b9e\u73b0\u64cd\u4f5c\u7cfb\u7edf\u865a\u62df\u5316\u9700\u8981\u7528\u5230Namespace\u53cacgroups\u6280\u672f\u3002</p> <ul> <li>\u547d\u540d\u7a7a\u95f4\uff08Namespace\uff09\uff1a</li> <li>\u4ece\u547d\u540d\u548c\u7f16\u53f7\u7684\u89d2\u5ea6\u8fdb\u884c\u9694\u79bb</li> <li>\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u4e3a\u4e86\u91cd\u7528\u53d8\u91cf\u540d\u6216\u8005\u670d\u52a1\u4f8b\u7a0b\u540d\u3002\u4f8b\u5982\uff0c\u5728\u6ca1\u6709\u64cd\u4f5c\u7cfb\u7edf\u7ea7\u865a\u62df\u5316\u7684Linux\u7cfb\u7edf\u4e2d\uff0c\u7528\u6237\u6001\u8fdb\u7a0b\u4ece1\u5f00\u59cb\u7f16\u53f7(PID)\u3002\u5f15\u5165\u64cd\u4f5c\u7cfb\u7edf\u865a\u62df\u5316\u4e4b\u540e\uff0c\u4e0d\u540c\u5bb9\u5668\u6709\u7740\u4e0d\u540c\u7684PID\u547d\u540d\u7a7a\u95f4\uff0c\u6bcf\u4e2a\u5bb9\u5668\u4e2d\u7684\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u4ece1\u5f00\u59cb\u7f16\u53f7\u800c\u4e0d\u4ea7\u751f\u51b2\u7a81\u3002</li> <li>\u547d\u540d\u7a7a\u95f4\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\uff08system calls\uff09\u6765\u5b9e\u73b0</li> <li>\u63a7\u5236\u7ec4(Cgroups)\uff1a</li> <li>\u5c06\u8fdb\u7a0b\u8fdb\u884c\u5206\u7ec4\uff0c\u5e76\u771f\u6b63\u7684\u5c06\u5404\u7ec4\u8fdb\u7a0b\u7684\u8ba1\u7b97\u8d44\u6e90\u8fdb\u884c\u9650\u5236\u3001\u9694\u79bb</li> <li>\u63a7\u5236\u7ec4\u662f\u4e00\u79cd\u5185\u6838\u673a\u5236\uff0c\u5b83\u53ef\u4ee5\u5bf9\u8fdb\u7a0b\u8fdb\u884c\u5206\u7ec4\u3001\u8ddf\u8e2a\u9650\u5236\u5176\u4f7f\u7528\u7684\u8ba1\u7b97\u8d44\u6e90\u3002\u5bf9\u4e8e\u6bcf\u4e00\u7c7b\u8ba1\u7b97\u8d44\u6e90\uff0c\u63a7\u5236\u7ec4\u901a\u8fc7\u6240\u8c13\u7684\u5b50\u7cfb\u7edf(subsystem)\u6765\u8fdb\u884c\u63a7\u5236</li> <li>\u4e0e\u547d\u540d\u7a7a\u95f4\u4e0d\u540c\uff0c\u63a7\u5236\u7ec4\u5e76\u6ca1\u6709\u589e\u52a0\u7cfb\u7edf\u8c03\u7528\uff0c\u800c\u662f\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\uff0c\u901a\u8fc7\u6587\u4ef6\u53ca\u76ee\u5f55\u64cd\u4f5c\u6765\u7ba1\u7406\u63a7\u5236\u7ec4\u3002</li> </ul>"},{"location":"software_development/backend/DevOps/Docker/#_6","title":"\u51fd\u5f0f\u5e93\u7b49\u7ea7\u7684\u865a\u62df\u5316","text":"<p>\u5178\u578b\u5e94\u7528\u5c31\u662fWine\uff08Windows Environment\uff09\uff0c\u4ed6\u80fd\u591f\u5728linux\u4e0a\u8fd0\u884cwindows\u7a0b\u5e8f\u3002</p> <p>Wine\u4e0d\u662f\u6a21\u62dfWindows\u7684\u5de5\u5177\uff0c\u800c\u662f\u8fd0\u7528API\u8f6c\u6362\u6280\u672f\u5b9e\u505a\u51faLinux\u5bf9\u5e94\u5230Windows\u76f8\u5bf9\u5e94\u7684\u51fd\u6570\u6765\u8c03\u7528DLL\uff08\u52a8\u6001\u94fe\u63a5\u5e93\uff09\u4ee5\u8fd0\u884cWindows\u7a0b\u5e8f\u3002</p> <p>\u5e94\u7528\u8f6f\u4ef6\u6700\u7ec8\u90fd\u662f\u4f7f\u7528\u7cfb\u7edf\u5e93\u51fd\u6570\u5b8c\u6210\u529f\u80fd\u7684\uff0c\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e0d\u540c\u7684\u51fd\u6570\u63a5\u53e3\uff0c\u51fd\u6570\u5e93\u7684\u865a\u62df\u5316\u5c31\u662f\u865a\u62df\u64cd\u4f5c\u7cfb\u7edf\u7684\u51fd\u6570\u63a5\u53e3\uff0c \u4ece\u800c\u5b9e\u73b0\u8ba9\u8f6f\u4ef6\u4e0d\u9700\u8981\u4fee\u6539\u5c31\u80fd\u8fd0\u884c\u5728\u539f\u672c\u6ca1\u6709\u5e93\u51fd\u6570\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u3002</p>"},{"location":"software_development/backend/DevOps/Docker/#_7","title":"\u8fdb\u7a0b\u5c42\u9762\u7684\u865a\u62df\u5316","text":"<p>\u5178\u578b\u4ee3\u8868\uff1aJava\u7684JVM\uff0cAndriod\u4e0a\u7684Dailvik\u548cART\u7b49\u3002</p> <p>\u672c\u8d28\u662f\u7cfb\u7edf\u7684\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u8be5\u8fdb\u7a0b\u6a21\u62df\u4e00\u53f0\u62bd\u8c61\u7684\u8ba1\u7b97\u673a\uff08\u5305\u62ec\u5904\u7406\u5668\u3001\u5806\u6808\u3001\u5bc4\u5b58\u5668\u7b49\uff0c\u4f46\u4e0e\u524d\u9762\u6240\u63d0\u5230\u7684\u865a\u62df\u673a\u7684\u6a21\u62df\u786c\u4ef6\u4f53\u7cfb\u7ed3\u6784\u5b8c\u5168\u4e0d\u540c\uff09\uff0c\u7528\u4e8e\u5728\u5e73\u53f0\u65e0\u5173\u7684\u73af\u5883\u4e2d\u6267\u884c\u7a0b\u5e8f\u6307\u4ee4</p>"},{"location":"software_development/backend/DevOps/Docker/#_8","title":"\u865a\u62df\u673a","text":"<p>\u603b\u611f\u89c9\u63d0\u5230\u865a\u62df\u5316\u4e0d\u8be6\u7ec6\u804a\u804a\u865a\u62df\u673a\u597d\u50cf\u5c11\u4e86\u70b9\u4ec0\u4e48</p> <p>\u518d\u56de\u987e\u4e00\u904d\uff1a\u865a\u62df\u673a\u662f\u6307\u901a\u8fc7\u8f6f\u4ef6\u6a21\u62df\u7684\u5177\u6709\u5b8c\u6574\u786c\u4ef6\u7cfb\u7edf\u529f\u80fd\u7684\u3001\u8fd0\u884c\u5728\u4e00\u4e2a\u5b8c\u5168\u9694\u79bb\u73af\u5883\u4e2d\u7684\u5b8c\u6574\u8ba1\u7b97\u673a\u7cfb\u7edf\u3002</p> <p>\u6211\u4eec\u63d0\u5230\u8fc7\uff0c\u786c\u4ef6\u62bd\u8c61\u5c42\u7b49\u7ea7\u7684\u865a\u62df\u5316\u662f\u901a\u8fc7\u4f7f\u7528\u4e00\u4e2a\u8f6f\u4ef6\u6a21\u62df\u786c\u4ef6\u8d44\u6e90\u3002\u8fd9\u4e2a\u8f6f\u4ef6\u771f\u5b9e\u540d\u5b57\u4e3a\u201d\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u201c\uff08\u4e5f\u53eb\u865a\u62df\u673a\u76d1\u89c6\u5668\uff08Virtual Machine Monitor\uff0cVMM\uff09\uff0c\u53c8\u79f0 Hypervisor\uff09</p> <p>Hypervisor\u8fd0\u884c\u5728\u5bbf\u4e3b\u7269\u7406\u673a\u548c\u865a\u62df\u673a\u4e4b\u95f4\uff0c\u5141\u8bb8\u591a\u4e2a\u865a\u62df\u673a\u548c\u5e94\u7528\u5171\u4eab\u4e00\u5957\u57fa\u7840\u7269\u7406\u786c\u4ef6\u3002 Hypervisor\u5bf9\u7269\u7406\u786c\u4ef6\u8fdb\u884c\u5212\u5206\uff0c\u7ed9\u6bcf\u4e00\u53f0\u865a\u62df\u673a\u5206\u914d\u9002\u91cf\u7684\u5185\u5b58\uff0ccpu\uff0c\u7f51\u7edc\u548c\u78c1\u76d8\u8d44\u6e90\uff0c\u5e76\u4e14\u52a0\u8f7d\u6240\u6709\u865a\u62df\u673a\u7684\u5ba2\u6237\u64cd\u4f5c\u7cfb\u7edf\u3002</p> <p>\u7b80\u800c\u8a00\u4e4b\uff0cHypervisor\u4e3a\u865a\u62df\u673a\u64cd\u4f5c\u7cfb\u7edf\u6a21\u62df\u4e00\u4e2a\u7269\u7406\u673a\u7684\u73af\u5883\u3002</p> <p>\u5728Intel\u5904\u7406\u5668\u4e2d\u5212\u5206\u4e86\u56db\u4e2a\u7279\u6743\u7ea7\u522bring 0 ~ ring 3\uff0c\u5176\u4e2dring 0\u662f\u6700\u9ad8\u7ea7\u522b\uff0cring 3\u662f\u6700\u4f4e\u7ea7\u522b\uff0c\u4e00\u822c\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u8fd0\u884c\u5728ring 0\u4e0a\uff0c \u8fd9\u6837\u5c31\u80fd\u8fd0\u884c\u5904\u7406\u5668\u7684\u6240\u6709\u6307\u4ee4\uff0c\u4f46\u662f\u5e94\u7528\u7a0b\u5e8f\u5219\u8fd0\u884c\u5728ring 3\u4e0a\uff0c\u6709\u90e8\u5206\u6307\u4ee4\uff08\u7279\u6743\u6307\u4ee4\uff09\u662f\u8fd0\u884c\u4e0d\u4e86\u7684\u3002</p> <p></p> <p>I \u578b\u865a\u62df\u5316\u548c II \u578b\u865a\u62df\u5316</p> <p>1974\u5e74\u7684\u4e00\u7bc7\u6587\u7ae0 Formal requirements for virtualizable third generation architectures \u5c06Hypervisor\u6309\u5b9e\u73b0\u7ed3\u6784\u5206\u6210\u4e86\u4e24\u79cd\u7c7b\u578b\uff0c \u8fd9\u4e2a\u5212\u5206\u65b9\u6cd5\u5f71\u54cd\u81f3\u4eca\u3002</p> <p>\u7b2c\u4e00\u79cdHypervisor\u662f\u76f4\u63a5\u8dd1\u5728\u5bbf\u4e3b\u673a\u4e0a\u9762\u4f5c\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u7684\uff0c\u7279\u70b9\u662f\u9700\u8981\u786c\u4ef6\u652f\u6301\u3001\u7a0b\u5e8f\u4f5c\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u8fd0\u884c\u3001\u6548\u7387\u9ad8\u3002\u5ba2\u6237\u673a\u64cd\u4f5c\u7cfb\u7edf\u8dd1\u5728\u4e0a\u9762\u5bf9\u5e95\u5c42\u8d44\u6e90\u7684\u8bbf\u95ee\u90fd\u4f1a \u88abHypervisor\u62e6\u622a\uff0c\u7531\u5b83\u4ee3\u4e3a\u64cd\u4f5c\u5e76\u8fd4\u56de\u7ed3\u679c\uff0c\u4ece\u800c\u5b9e\u73b0\u5bf9\u7cfb\u7edf\u8d44\u6e90\u7684\u9694\u79bb\u3002\u91c7\u7528\u8fd9\u79cd\u7c7b\u578b\u7684\u865a\u62df\u673a\u8f6f\u4ef6\u6709VMware ESXi\u3001 Xen\u7b49\u3002</p> <p></p> <p>\u7b2c\u4e8c\u79cdHypervisor\u662f\u4f5c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u8dd1\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7684\uff0c\u5ba2\u6237\u7aef\u673a\u64cd\u4f5c\u7cfb\u7edf\u8dd1\u5728\u4ed6\u4e0a\u9762\u6240\u6709\u8bbf\u95ee\u4e5f\u4f1a\u88ab\u62e6\u622a\uff0c\u7531\u4e8eHypervisor\u4e0d\u76f4\u63a5\u8bbf\u95ee\u786c\u4ef6\u8d44\u6e90\uff0c \u56e0\u6b64\u8fd0\u884c\u6548\u7387\u901a\u5e38\u6bd4\u7b2c\u4e00\u79cd\u4f4e\u3002\u91c7\u7528\u8fd9\u79cd\u7c7b\u578b\u7684\u865a\u62df\u673a\u8f6f\u4ef6\u6709VMware Workstation\u3001VirtualBox\u7b49\u3002</p> <p></p>"},{"location":"software_development/backend/DevOps/Docker/#_9","title":"\u4ec0\u4e48\u662f\u5bb9\u5668\uff1f","text":"<p>\u5bb9\u5668\u662f\u4e00\u79cd\u6c99\u76d2/\u6c99\u7bb1(sandboxing)\u6280\u672f\u3002</p> <p>\u6c99\u7bb1\u6280\u672f\uff08Sandboxing\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u9694\u79bb\u6b63\u5728\u8fd0\u884c\u7a0b\u5e8f\u7684\u5b89\u5168\u673a\u5236\uff0c\u5176\u76ee\u7684\u662f\u9650\u5236\u4e0d\u53ef\u4fe1\u8fdb\u7a0b\u6216\u4e0d\u53ef\u4fe1\u4ee3\u7801\u8fd0\u884c\u65f6\u7684\u8bbf\u95ee\u6743\u9650\u3002</p> <p>\u6c99\u7bb1\u4f1a\u4e3a\u5f85\u6267\u884c\u7684\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u865a\u62df\u73af\u5883\u3002\u8fd9\u4e2a\u865a\u62df\u73af\u5883\u4e2d\u5305\u542b\u4e00\u4e9b\u865a\u62df\u7684\u786c\u4ef6\u548c\u8f6f\u4ef6\u8d44\u6e90\uff0c\u5982\u6587\u4ef6\u7cfb\u7edf\u3001\u7f51\u7edc\u3001\u64cd\u4f5c\u7cfb\u7edf\u7b49\uff0c\u4f7f\u5e94\u7528\u7a0b\u5e8f\u6216\u8fdb\u7a0b\u53ef\u4ee5\u5728\u8be5\u73af\u5883\u4e2d\u8fd0\u884c\u3002</p> <p>\u5728\u6c99\u7bb1\u4e2d\u8fd0\u884c\u7684\u7a0b\u5e8f\u53ea\u80fd\u8bbf\u95ee\u6c99\u7bb1\u7ed9\u5b83\u52a0\u8f7d\u7684\u8d44\u6e90\uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u5230\u5916\u90e8\u7684\u5e94\u7528\u3001\u7cfb\u7edf\u6216\u5e73\u53f0\uff0c\u907f\u514d\u5176\u5bf9\u8ba1\u7b97\u673a\u4e2d\u7684\u5176\u4ed6\u7a0b\u5e8f\u6216\u6570\u636e\u9020\u6210\u6c38\u4e45\u7684\u66f4\u6539\u3002</p> <p>\u6211\u4eec\u5df2\u7ecf\u63d0\u5230\u4e86\u865a\u62df\u5316\u4e3b\u6d41\u6280\u672f\u4e4b\u4e00\uff1a\u865a\u62df\u673a\uff0c\u5b83\u80fd\u6a21\u62df\u4e00\u5957\u5b8c\u6574\u7684\u786c\u4ef6\uff0c\u901a\u8fc7\u5728\u865a\u62df\u673a\u4e0a\u5b89\u88c5\u4e00\u5957\u5b8c\u6574\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u8fd0\u884c\u5404\u79cd\u5e94\u7528\u7a0b\u5e8f</p> <p>\u4f46\u5728\u5b9e\u9645\u751f\u4ea7\u5f00\u53d1\u73af\u5883\u4e2d\uff0c\u7a0b\u5e8f\u5458\u4eec\u53d1\u73b0\uff0c\u4ed6\u4eec\u53ea\u5173\u6ce8\u81ea\u5df1\u9700\u8981\u90e8\u7f72\u7684\u5e94\u7528\uff0c\u4f46\u6bcf\u6b21\u90e8\u7f72\u53d1\u5e03\u90fd\u9700\u8981\u5728\u76ee\u7684\u670d\u52a1\u5668\u6784\u5efa\u4e00\u4e2a\u865a\u62df\u673a\uff0c\u610f\u5473\u7740\u6bcf\u6b21\u90fd\u8981\u4e0b\u8f7d\u4e00\u4e2a\u5b8c\u6574\u7684\u64cd\u4f5c\u7cfb\u7edf\u548c\u9644\u5e26\u7684\u4f9d\u8d56\u73af\u5883\uff0c\u4e3a\u90e8\u7f72\u5e26\u6765\u4e86\u6781\u5927\u7684\u4e0d\u4fbf\u3002\u6709\u6ca1\u6709\u4e00\u79cd\u65b9\u6cd5\uff0c\u4e0d\u9700\u8981\u5b89\u88c5\u64cd\u4f5c\u7cfb\u7edf\uff0c\u53ea\u9700\u8981\u63d0\u4f9b\u7a0b\u5e8f\u8fd0\u884c\u7684\u6700\u57fa\u672c\u73af\u5883\uff0c\u5c31\u80fd\u8fd0\u884c\u7a0b\u5e8f\u5462\uff1f</p> <p>Linux Container\uff08\u7b80\u79f0LXC\uff09\u5bb9\u5668\u6280\u672f\u7684\u8bde\u751f\uff082008\u5e74\uff09\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u5bb9\u5668\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u865a\u62df\u5316\u6280\u672f\uff0c\u5b83\u5141\u8bb8\u5c06\u5e94\u7528\u7a0b\u5e8f\u53ca\u5176\u4f9d\u8d56\u9879\u6253\u5305\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u4e00\u4e2a\u72ec\u7acb\u3001\u53ef\u79fb\u690d\u7684\u8fd0\u884c\u73af\u5883\u3002\u5bb9\u5668\u5728\u64cd\u4f5c\u7cfb\u7edf\u5c42\u9762\u4e0a\u5b9e\u73b0\u4e86\u8d44\u6e90\u7684\u9694\u79bb\u548c\u9650\u5236\uff0c\u4f7f\u5f97\u591a\u4e2a\u5bb9\u5668\u53ef\u4ee5\u5728\u540c\u4e00\u53f0\u4e3b\u673a\u4e0a\u5171\u4eab\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\uff0c\u540c\u65f6\u53c8\u80fd\u72ec\u7acb\u8fd0\u884c\uff0c\u4e92\u4e0d\u5e72\u6270\u3002</p> <p>AWS\uff1a\u521b\u5efa\u5bb9\u5668\u662f\u4e3a\u4e86\u5728\u591a\u4e2a\u73af\u5883\u4e2d\u4ee5\u53ef\u9884\u6d4b\u548c\u53ef\u91cd\u590d\u7684\u65b9\u5f0f\u6253\u5305\u548c\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u3002\u60a8\u4e0d\u5fc5\u91cd\u5efa\u73af\u5883\uff0c\u53ea\u9700\u5c06\u5e94\u7528\u7a0b\u5e8f\u6253\u5305\uff0c\u4ee5\u4fbf\u5728\u6240\u6709\u7c7b\u578b\u7684\u7269\u7406\u6216\u865a\u62df\u73af\u5883\u4e2d\u8fd0\u884c\u3002\u8fd9\u7c7b\u4f3c\u4e8e\u8ba9\u5b87\u822a\u5458\u7a7f\u4e0a\u5b87\u822a\u670d\uff0c\u800c\u4e0d\u662f\u5728\u53e6\u4e00\u4e2a\u661f\u7403\u4e0a\u4e3a\u4ed6\u4eec\u91cd\u5efa\u5730\u7403\u5927\u6c14\u5c42\u3002</p> <p>\u5982\u679c\u8bfb\u5230\u8fd9\u91cc\u4f60\u8fd8\u89c9\u5f97\u6709\u70b9\u6a21\u7cca\uff0c\u4e0d\u59a8\u518d\u4eceContainer\u8fd9\u4e2a\u5355\u8bcd\u7406\u89e3\u3002</p> <p>Container\u662f\u96c6\u88c5\u7bb1\u7684\u610f\u601d\uff0c\u6211\u4eec\u5c06\u4e00\u4e2a\u670d\u52a1\u6d89\u53ca\u7684\u7a0b\u5e8f\u548c\u4f9d\u8d56\u6253\u5305\u8fdb\u5bb9\u5668\u5c31\u597d\u6bd4\u5c06\u8d27\u7269\u88c5\u5165\u96c6\u88c5\u7bb1\u3002\u6253\u5305\u540e\uff0c\u96c6\u88c5\u7bb1\u53ef\u4ee5\u968f\u610f\u8fd0\u8f93\uff0c\u5e76\u4e14\u8fd0\u8f93\u8fc7\u7a0b\u4e0d\u4f1a\u53d7\u5230\u4efb\u4f55\u635f\u574f\uff08\u6587\u4ef6\u4e0d\u4f1a\u635f\u574f\uff09\u3002\u8fd0\u8f93\u540e\uff0c\u65e0\u8bba\u5728\u8d27\u8f6e\u4e0a\uff0c\u8fd8\u662f\u5728\u7801\u5934\u4e0a\uff0c\u6253\u5f00\u96c6\u88c5\u7bb1\u90fd\u80fd\u591f\u83b7\u5f97\u5bf9\u5e94\u7684\u8d27\u7269\uff08\u65e0\u8bba\u662fWindows\u8fd8\u662fLinux\u8fd8\u662f\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5bb9\u5668\u90fd\u80fd\u591f\u6b63\u5e38\u542f\u52a8\u670d\u52a1\uff09</p>"},{"location":"software_development/backend/DevOps/Docker/#vs","title":"\u5bb9\u5668VS\u865a\u62df\u673a","text":"<p>\u6211\u4eec\u5df2\u7ecf\u63d0\u5230\uff0c\u5bb9\u5668\u6bd4\u865a\u62df\u673a\u66f4\u4e3a\u8f7b\u4fbf\uff0c\u8868\u73b0\u5728\uff1a</p> <p>\u5bb9\u5668\u6280\u672f\u5c5e\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u7b49\u7ea7\u7684\u865a\u62df\u5316\uff0c\u800c\u865a\u62df\u673a\u5c5e\u4e8e\u786c\u4ef6\u62bd\u8c61\u5c42\u7b49\u7ea7\u7684\u865a\u62df\u5316\u3002</p> <p>\u6362\u53e5\u8bdd\u8bf4\uff0c\u5bb9\u5668\u6280\u672f\u5171\u4eab\u5bbf\u4e3b\u673a\u7684\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\uff0c\u6bcf\u4e2a\u5bb9\u5668\u53ea\u9700\u5305\u542b\u7a0b\u5e8f\u4ee5\u53ca\u7a0b\u5e8f\u5141\u8bb8\u9700\u8981\u7684\u4f9d\u8d56\uff1b\u865a\u62df\u673a\u6280\u672f\u5171\u4eab\u5bbf\u4e3b\u673a\u7684\u786c\u4ef6\u8bbe\u5907\uff0c\u4f46\u6bcf\u4e2a\u865a\u62df\u673a\u9700\u8981\u5305\u542b\u5b8c\u6574\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002</p> <p></p> <p>\u6211\u4eec\u5728\u6b64\u8be6\u7ec6\u8c08\u8c08\u5bb9\u5668\u548c\u865a\u62df\u673a\u7684\u5f02\u540c\u70b9\uff1a</p> <ul> <li>\u76f8\u540c\u70b9\uff1a</li> <li>\u5bb9\u5668\u548c\u865a\u62df\u673a\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u5b8c\u5168\u9694\u79bb\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u5728\u591a\u4e2a\u73af\u5883\u4e2d\u8fd0\u884c\u3002\u5728\u6211\u770b\u6765\uff0c\u8fd9\u4e2a\u76f8\u540c\u70b9\u5b9e\u9645\u4e0a\u4e5f\u662f\u865a\u62df\u5316\u6280\u672f\u7684\u5171\u540c\u7279\u70b9\u3002</li> <li>\u4e3b\u8981\u4e0d\u540c\u70b9\uff1a</li> <li>\u5de5\u4f5c\u539f\u7406\u4e0d\u540c\uff1a<ul> <li>\u865a\u62df\u673a\u6280\u672f\u6d89\u53ca\u5728\u7269\u7406\u670d\u52a1\u5668\u6216\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5\u865a\u62df\u5316\u8f6f\u4ef6\u3002\u7269\u7406\u8ba1\u7b97\u673a\u79f0\u4e3a\u4e3b\u673a\uff0c\u865a\u62df\u673a\u79f0\u4e3a\u5ba2\u6237\u673a\u3002\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u9700\u8981\u914d\u7f6e\u548c\u66f4\u65b0\u5ba2\u6237\u673a\u64cd\u4f5c\u7cfb\u7edf\u53ca\u5176\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u4e3b\u673a\u64cd\u4f5c\u7cfb\u7edf\u3002</li> <li>\u5bb9\u5668\u6280\u672f\u6d89\u53ca\u6784\u5efa\u81ea\u7ed9\u81ea\u8db3\u7684\u8f6f\u4ef6\u5305\uff0c\u65e0\u8bba\u8fd9\u4e9b\u8f6f\u4ef6\u5305\u5728\u54ea\u4e9b\u673a\u5668\u4e0a\u8fd0\u884c\uff0c\u6027\u80fd\u90fd\u59cb\u7ec8\u5982\u4e00\u3002\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u521b\u5efa\u548c\u90e8\u7f72\u5bb9\u5668\u6620\u50cf\uff0c\u5373\u5305\u542b\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u6240\u9700\u4fe1\u606f\u7684\u6587\u4ef6\u3002\u5bb9\u5668\u6620\u50cf\u4e3a\u53ea\u8bfb\uff0c\u8ba1\u7b97\u673a\u7cfb\u7edf\u65e0\u6cd5\u66f4\u6539\u3002</li> </ul> </li> <li>\u6838\u5fc3\u6280\u672f\u4e0d\u540c\uff1a<ul> <li>\u865a\u62df\u673a\u4f7f\u7528\u865a\u62df\u673a\u76d1\u63a7\u5668\u5728\u5ba2\u6237\u673a\u64cd\u4f5c\u7cfb\u7edf\u548c\u4e3b\u673a\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u3002\u865a\u62df\u673a\u76d1\u63a7\u5668\u534f\u8c03\u8d44\u6e90\u5171\u4eab\uff0c\u56e0\u6b64\u865a\u62df\u673a\u4e0e\u540c\u4e00\u786c\u4ef6\u4e0a\u7684\u5176\u4ed6\u51e0\u4e2a\u865a\u62df\u673a\u5206\u5f00\u8fd0\u884c\u3002</li> <li>\u5bb9\u5668\u4f7f\u7528\u5bb9\u5668\u5f15\u64ce\u6216\u5bb9\u5668\u8fd0\u884c\u65f6\u4f5c\u4e3a\u5bb9\u5668\u548c\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u95f4\u7684\u4e2d\u95f4\u4ee3\u7406\uff0c\u63d0\u4f9b\u548c\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\u6240\u9700\u7684\u7cfb\u7edf\u8d44\u6e90\u3002</li> </ul> </li> <li>\u5927\u5c0f\u4e0d\u540c\uff1a<ul> <li>\u865a\u62df\u673a\u6620\u50cf\u6587\u4ef6\u8f83\u5927\uff08\u6570 GB\uff09\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6587\u4ef6\u5305\u542b\u81ea\u5df1\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\u8d44\u6e90\u589e\u52a0\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u590d\u5236\u3001\u62c6\u5206\u3001\u62bd\u8c61\u548c\u6a21\u62df\u6574\u4e2a\u670d\u52a1\u5668\u3001\u6570\u636e\u5e93\u3001\u684c\u9762\u548c\u7f51\u7edc\u3002</li> <li>\u5bb9\u5668\u6587\u4ef6\u66f4\u8f7b\u91cf\uff0c\u53ef\u4ee5\u7528 MB \u5355\u4f4d\u8fdb\u884c\u8861\u91cf\u3002\u5bb9\u5668\u53ea\u6253\u5305\u8fd0\u884c\u5355\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6240\u9700\u7684\u8d44\u6e90\u3002</li> </ul> </li> <li>\u542f\u52a8\u901f\u5ea6\u4e0d\u540c<ul> <li>\u5bb9\u5668\u542f\u52a8\u66f4\u5feb</li> </ul> </li> </ul> <p>\u5dee\u522b\u6458\u8981\uff1a</p> \u7279\u6027 \u5bb9\u5668 \u865a\u62df\u673a \u5b9a\u4e49 \u8f6f\u4ef6\u4ee3\u7801\u5305\u5305\u542b\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u3001\u4ee3\u7801\u5e93\u548c\u7ec4\u6210\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u73af\u5883\u7684\u5176\u4ed6\u4f9d\u8d56\u9879\u3002 \u7269\u7406\u8ba1\u7b97\u673a\u7684\u6570\u5b57\u526f\u672c\u3002\u5c06\u7269\u7406\u786c\u4ef6\u5212\u5206\u4e3a\u591a\u4e2a\u73af\u5883\u3002 \u865a\u62df\u5316 \u865a\u62df\u5316\u64cd\u4f5c\u7cfb\u7edf\u3002 \u865a\u62df\u5316\u5e95\u5c42\u7269\u7406\u57fa\u7840\u8bbe\u65bd\u3002 \u5c01\u88c5 \u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u6216\u5e94\u7528\u7a0b\u5e8f\u7ec4\u4ef6\u6240\u9700\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u4e0a\u7684\u8f6f\u4ef6\u5c42\u3002 \u64cd\u4f5c\u7cfb\u7edf\uff0c\u7cfb\u7edf\u4e4b\u4e0a\u7684\u6240\u6709\u8f6f\u4ef6\u5c42\uff0c\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002 \u6280\u672f \u5bb9\u5668\u5f15\u64ce\u4e0e\u5e95\u5c42\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u8d44\u6e90\u534f\u8c03\u3002 \u865a\u62df\u673a\u76d1\u63a7\u5668\u4e0e\u5e95\u5c42\u64cd\u4f5c\u7cfb\u7edf\u6216\u786c\u4ef6\u8fdb\u884c\u534f\u8c03\u3002 \u5927\u5c0f \u8f7b\u91cf\u7ea7\uff08\u4ee5 MB \u4e3a\u5355\u4f4d\uff09\u3002 \u91cd\u91cf\u7ea7\uff08\u4ee5 GB \u4e3a\u5355\u4f4d\uff09\u3002 \u63a7\u5236 \u4e0d\u6613\u4e8e\u63a7\u5236\u5bb9\u5668\u5916\u90e8\u7684\u73af\u5883\u3002 \u66f4\u6613\u4e8e\u63a7\u5236\u6574\u4e2a\u73af\u5883\u3002 \u7075\u6d3b\u6027 \u66f4\u7075\u6d3b\u3002\u60a8\u53ef\u4ee5\u5728\u672c\u5730\u73af\u5883\u548c\u4ee5\u4e91\u4e3a\u4e2d\u5fc3\u7684\u73af\u5883\u4e4b\u95f4\u5feb\u901f\u8fc1\u79fb\u3002 \u4e0d\u591f\u7075\u6d3b\u3002\u8fc1\u79fb\u56f0\u96be\u3002 \u53ef\u6269\u5c55\u6027 \u9ad8\u5ea6\u53ef\u6269\u5c55\u3002\u5fae\u670d\u52a1\u53ef\u4ee5\u5b9e\u73b0\u7cbe\u7ec6\u7684\u53ef\u6269\u5c55\u6027\u3002 \u6269\u5c55\u6210\u672c\u9ad8\u6602\u3002\u9700\u8981\u4ece\u672c\u5730\u5b9e\u4f8b\u5207\u6362\u5230\u4e91\u5b9e\u4f8b\u4ee5\u5b9e\u73b0\u7ecf\u6d4e\u9ad8\u6548\u7684\u6269\u5c55\u3002"},{"location":"software_development/backend/DevOps/Docker/#or","title":"\u5982\u4f55\u9009\u62e9\u5bb9\u5668or\u865a\u62df\u673a\uff1f","text":"<ul> <li>\u5e94\u7528\u7a0b\u5e8f\u8981\u6c42\uff1a\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u66f4\u5f3a\u7684\u9694\u79bb\u6027\uff0c\u6216\u8005\u9700\u8981\u8fd0\u884c\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u865a\u62df\u673a\u53ef\u80fd\u66f4\u5408\u9002\u3002</li> <li>\u8d44\u6e90\u9650\u5236\uff1a\u5982\u679c\u60a8\u6709\u4e25\u683c\u7684\u8d44\u6e90\u9650\u5236\uff0c\u5bb9\u5668\u53ef\u4ee5\u66f4\u6709\u6548\u5730\u5229\u7528\u8d44\u6e90\u3002</li> <li>\u90e8\u7f72\u73af\u5883\uff1a\u8003\u8651\u60a8\u7684\u90e8\u7f72\u73af\u5883\uff0c\u5bb9\u5668\u5728\u4e91\u8ba1\u7b97\u548c\u5fae\u670d\u52a1\u67b6\u6784\u4e2d\u66f4\u5e38\u89c1\uff0c\u800c\u865a\u62df\u673a\u9002\u7528\u4e8e\u4f20\u7edf\u90e8\u7f72\u73af\u5883\u3002</li> <li>\u7ba1\u7406\u590d\u6742\u6027\uff1a\u5bb9\u5668\u901a\u5e38\u66f4\u5bb9\u6613\u7ba1\u7406\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u8f7b\u677e\u6269\u5c55\u548c\u66f4\u65b0\uff0c\u800c\u865a\u62df\u673a\u7ba1\u7406\u53ef\u80fd\u9700\u8981\u66f4\u591a\u7684\u624b\u52a8\u5e72\u9884\u3002</li> </ul> <p>\u5f53\u7136\u5bb9\u5668\u548c\u865a\u62df\u673a\u5e76\u4e0d\u662f\u4e92\u65a5\u7684\u6280\u672f\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u878d\u5408\u4f7f\u7528</p>"},{"location":"software_development/backend/DevOps/Docker/#docker_3","title":"\u4ec0\u4e48\u662fDocker\uff1f","text":"<p>\u9996\u5148\u8981\u8bf4\u660e\u4e00\u70b9\u7684\u662f\uff0c\u5bb9\u5668\u6280\u672f\u4e0d\u53ea\u6709Docker\u4e00\u79cd\u3002\u5bb9\u5668\u6280\u672f\u9075\u5faa\u540c\u4e00\u4e2a OCI\uff08OpenContainer Initiative\uff0c\u5f00\u653e\u5bb9\u5668\u8ba1\u5212\uff09\u89c4\u8303\u3002OCI \u5305\u62ec\u5bb9\u5668\u8fd0\u884c\u65f6\u3001\u5bb9\u5668\u5206\u53d1\u548c\u5bb9\u5668\u955c\u50cf\u7684\u89c4\u8303\uff0c\u6db5\u76d6\u4e86\u4f7f\u7528\u5bb9\u5668\u6240\u9700\u7684\u6240\u6709\u529f\u80fd\u3002\u6240\u4ee5\u4e0d\u540c\u5bb9\u5668\u6280\u672f\u80fd\u591f\u5b9e\u73b0\u76f8\u540c\u7684\u529f\u80fd\u3002</p> <p>\u6211\u4eec\u4f7f\u7528Docker\u4e00\u4e2a\u6700\u4e3b\u8981\u7684\u539f\u56e0\uff1aDocker\u529f\u80fd\u9f50\u5168\u4e14\u7b80\u5355\u6613\u5b66\uff0c\u662f\u5f53\u524d\u5bb9\u5668\u6280\u672f\u7684\u4ee3\u8868\uff0c\u4e5f\u662f\u5e02\u9762\u4e0a\u6700\u4e3b\u6d41\u7684\u5bb9\u5668\u6280\u672f\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5176\u4ed6\u5e94\u7528\u5bf9Docker\u5177\u6709\u826f\u597d\u7684\u652f\u6301\uff0c\u5982\u679c\u4f7f\u7528\u5176\u4ed6\u5bb9\u5668\u6280\u672f\uff0c\u53ef\u80fd\u4f1a\u9762\u4e34\u6280\u672f\u6587\u6863\u4e0d\u5168/\u5176\u4ed6\u5e94\u7528\u4e0d\u517c\u5bb9\u7b49\u98ce\u9669</p> <p>Docker\uff0c\u5bf9\u5e94\u4e2d\u6587\u540d\u4e3a\u201d\u7801\u5934\u5de5\u4eba\u201c\uff0c\u5b83\u5f62\u8c61\u5730\u63cf\u8ff0\u4e86Docker\u7684\u672c\u8d28\u2014\u2014Docker\u662f\u4e00\u4e2a\u7528Go\u8bed\u8a00\u5b9e\u73b0\u7684\u5f00\u6e90\u7684\u5e94\u7528\u5bb9\u5668\u5f15\u64ce\u3002</p> <p>Docker\u5c06\u5e94\u7528\u7a0b\u5e8f\u4e0e\u57fa\u7840\u67b6\u6784\uff08\u64cd\u4f5c\u7cfb\u7edf\u7b49\uff09\u76f8\u5206\u79bb\uff0c\u5c06\u5e94\u7528\u7a0b\u5e8f\u6253\u5305\u5e76\u8fd0\u884c\u5728\u4e00\u4e2a\u79f0\u4e3a\u201c\u5bb9\u5668\u201d\u7684\u72ec\u7acb\u7684\u73af\u5883\u4e2d\uff0c\u4ece\u800c\u5b9e\u73b0\u4e00\u53f0\u5bbf\u4e3b\u673a\u4e0a\u53ef\u4ee5\u8fd0\u884c\u591a\u4e2a\u5bb9\u5668\u3002</p> <p>\u5bb9\u5668\u5305\u62ec\u4e86\u7a0b\u5e8f\u672c\u8eab\u4ee5\u53ca\u7a0b\u5e8f\u8fd0\u884c\u9700\u8981\u7684\u4f9d\u8d56\uff0c\u4e0e\u865a\u62df\u673a\u4e0d\u540c\uff0c\u5bb9\u5668\u662f\u8f7b\u91cf\u7ea7\u7684\u3002</p> <p>\u4f7f\u7528Docker\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0DevOps\uff08\u5f00\u53d1\u5373\u8fd0\u7ef4\uff09\uff0c\u5b9e\u73b0\u5f00\u53d1\u4ee3\u7801\u548c\u90e8\u7f72\u4e0a\u7ebf\u4e00\u4f53\u5316</p> <p>DevOps\uff08\u5f00\u53d1\u5373\u8fd0\u7ef4\uff09\uff1aDev\u6307\u7684\u662fDevelopment\uff08\u5f00\u53d1\uff09\uff0cOps\u6307\u7684\u662fOperations\uff08\u8fd0\u7ef4\uff09\u3002DevOps\u5c31\u662f\u6253\u901a\u5f00\u53d1\u8fd0\u7ef4\u7684\u58c1\u5792\uff0c\u5b9e\u73b0\u5f00\u53d1\u8fd0\u7ef4\u4e00\u4f53\u5316\u3002</p>"},{"location":"software_development/backend/DevOps/Docker/#docker_4","title":"\u8fdb\u5165Docker\u7684\u4e16\u754c","text":"<p>\u4ece\u73b0\u5728\u5f00\u59cb\uff0c\u6211\u4eec\u5c31\u8981\u6b63\u5f0f\u5f00\u59cb\u4e86\u89e3Docker\u4e86</p>"},{"location":"software_development/backend/DevOps/Docker/#docker_5","title":"Docker\u6982\u5ff5\u4ecb\u7ecd","text":"<p>Docker\u7684\u4e09\u5927\u57fa\u672c\u6982\u5ff5\u4e3a\uff1a</p> <ul> <li>\u955c\u50cf\uff08Image\uff09</li> <li>\u5bb9\u5668\uff08Container\uff09</li> <li>\u4ed3\u5e93\uff08Repository\uff09</li> </ul> <p>\u6211\u4eec\u5148\u4eceImage\uff08\u955c\u50cf\uff09\u8c08\u8d77\u3002</p>"},{"location":"software_development/backend/DevOps/Docker/#docker-image","title":"Docker Image","text":"<p>\u6211\u4eec\u7ecf\u5e38\u4f1a\u5728\u5404\u79cd\u8ba1\u7b97\u673a\u573a\u666f\u542c\u5230Image\u8fd9\u4e2a\u8bcd\uff0c\u6709System Image\uff0cDisk Image\u8fd8\u6709Process Image\u7b49\u7b49\u3002\u5176\u5b9eImage\u610f\u601d\u975e\u5e38\u7b80\u5355\uff0c\u5c31\u662f\u5bf9\u76ee\u6807\u5bf9\u8c61\u7684\u4e00\u4e2a\u6620\u5c04\uff08a copy of sth)\uff0c\u6620\u5c04\u7ed3\u679c\u5c31\u662fImage\uff0c\u4e2d\u6587\u5e38\u79f0\u4e3a\u201d\u6620\u50cf\u201c\u3002</p> <p>\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u6587\u4ef6\u6765\u5b58\u50a8\u5bf9\u76ee\u6807\u5bf9\u8c61\u7684\u62f7\u8d1d\uff0c\u8fd9\u79cd\u6587\u4ef6\u79f0\u4e3a\u201d\u6620\u50cf\u6587\u4ef6\u201c\uff0c\u5b83\u5c06\u53ef\u6267\u884c\u6587\u4ef6\u4ece\u865a\u62df\u5185\u5b58\u6620\u5c04\u4e3a\u7269\u7406\u5185\u5b58\u3002\u5e38\u89c1\u7684ISO\u6620\u50cf\u6587\u4ef6\uff0c\u5c31\u662f\u5305\u542b\u4e86\u6574\u4e2aCD\u5185\u5bb9\u7684\u62f7\u8d1d\u7684\u6587\u4ef6\uff08\u5c5e\u4e8eDisk Image\uff09\u3002</p> <p>\u800cDocker\u7684Image\u4e0e\u8fd9\u79cd\u901a\u7528\u7684Image\u6982\u5ff5\u7565\u6709\u4e0d\u540c</p> <p>From Docker Document\uff1a</p> <p>An image is a read-only template with instructions for creating a Docker container. </p> <p>\u5728\u5b98\u65b9\u6587\u6863\u4e2d\uff0c\u6211\u4eec\u8bfb\u5230\uff1aDocker Image\u662f\u521b\u5efaDocker\u5bb9\u5668\u7684\u6307\u4ee4\u96c6\u7684\u53ea\u8bfb\u6a21\u677f\u3002Docker Image\u50cf\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u9664\u4e86\u63d0\u4f9b\u5bb9\u5668\u8fd0\u884c\u65f6\u6240\u9700\u7684\u7a0b\u5e8f\u3001\u5e93\u3001\u8d44\u6e90\u3001\u914d\u7f6e\u7b49\u6587\u4ef6\u5916\uff0c\u8fd8\u5305\u542b\u4e86\u4e00\u4e9b\u4e3a\u8fd0\u884c\u65f6\u51c6\u5907\u7684\u914d\u7f6e\u53c2\u6570\u3002</p> <p>\u5f53\u4f60\u8bfb\u5230\u8fd9\u91cc\u7684\u65f6\u5019\uff0c\u4e0d\u77e5\u9053\u4f60\u4f1a\u4e0d\u4f1a\u548c\u6211\u4e00\u6837\uff0c\u89c9\u5f97Docker Image\u53ea\u662f\u5e26\u6709Image\uff0c\u548c\u6211\u4eec\u63d0\u5230\u7684\u672c\u8d28\u4e3acopy\u7684\u901a\u7528\u7684Image\u6982\u5ff5\u6ca1\u6709\u5173\u7cfb\u3002</p> <p>\u4f46\u6211\u5728wikipedia\u627e\u5230\u4e86\u8fd9\u53e5\u8bdd\uff1a</p> <ul> <li>A Docker image is a read-only template used to build containers. Images are used to store and ship applications.[21] It is a process image.</li> </ul> <p>Docker Image\u5c5e\u4e8eProcess Image\uff01</p> <p>A process image is a copy of a given process's state at a given point in time. It is often used to create persistence within an otherwise volatile system. A common example is a database management system (DBMS).</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6709\u8fd9\u4e48\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u5b83\u80fd\u591f\u4ea7\u751f\u65b0\u7684Docker\u3002\u800cDocker Image\u5c31\u662f\u8fd9\u4e2a\u8fdb\u7a0b\u7684\u62f7\u8d1d\u3002\u800cDockerfile\u5c31\u662f\u6307\u6325\u8fd9\u4e2a\u8fdb\u7a0b\u6267\u884c\u4ec0\u4e48\u6b65\u9aa4\u7684\u5927\u7eb2\u3002</p> <p>Docker Document\u8fd8\u63d0\u5230\uff1a</p> <p>Often, an image is based on another image, with some additional customization. </p> <p>\u8fd9\u6307\u7684\u662fDocker Image\u91c7\u7528\u4e86UnionFS\uff08\u8054\u5408\u6587\u4ef6\u7cfb\u7edf\uff09\uff0cUnionFS\u662fDocker\u7684\u6838\u5fc3\u6280\u672f\u4e4b\u4e00\uff0c\u6211\u4eec\u5c06\u5728\u540e\u9762\u7684\u7ae0\u8282\uff08Docker\u539f\u7406\uff09\u4e2d\u63d0\u5230\u3002</p>"},{"location":"software_development/backend/DevOps/Docker/#container","title":"Container","text":"<p>From Docker document :</p> <p>A container is a runnable instance of an image. You can create, start, stop, move, or delete a container using the Docker API or CLI. You can connect a container to one or more networks, attach storage to it, or even create a new image based on its current state.</p> <p>By default, a container is relatively well isolated from other containers and its host machine. You can control how isolated a container's network, storage, or other underlying subsystems are from other containers or from the host machine.</p> <p>A container is defined by its image as well as any configuration options you provide to it when you create or start it. When a container is removed, any changes to its state that aren't stored in persistent storage disappear.</p> <p>\u7b80\u5355\u6765\u8bf4\uff1a</p> <ul> <li>Docker\u5bb9\u5668\u662fDocker\u955c\u50cf\u7684\u5b9e\u4f8b</li> <li>Docker\u5bb9\u5668\u4e4b\u95f4\u76f8\u4e92\u9694\u79bb\uff0c\u5bb9\u5668\u4e5f\u4e0e\u5bbf\u4e3b\u673a\u9694\u79bb\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5355\u4e2a\u5bb9\u5668\u7684\u8fd0\u884c\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5230\u5176\u4ed6\u5bb9\u5668\u4e43\u81f3\u5bbf\u4e3b\u673a</li> <li>Docker\u5bb9\u5668\u7531Docker\u955c\u50cf\u5b9a\u4e49\uff0c\u5982\u679c\u79fb\u9664Docker\u5bb9\u5668\uff0c\u90a3\u4e9b\u5728Docker\u5bb9\u5668\u8fd0\u884c\u8fc7\u7a0b\u4ea7\u751f\u7684\u672a\u6301\u4e45\u5316\u7684\u6570\u636e\u5c06\u6d88\u5931</li> </ul>"},{"location":"software_development/backend/DevOps/Docker/#docker-registries","title":"Docker Registries","text":"<p>A Docker registry stores Docker images. Docker Hub is a public registry that anyone can use, and Docker looks for images on Docker Hub by default. You can even run your own private registry.</p> <p>When you use the <code>docker pull</code> or <code>docker run</code> commands, Docker pulls the required images from your configured registry. When you use the <code>docker push</code> command, Docker pushes your image to your configured registry.</p> <p>Docker\u4ed3\u5e93\u5b58\u50a8Docker\u955c\u50cf\uff0c\u5e38\u89c1\u7684Docker\u4ed3\u5e93\u4e3aDocker Hub\uff08\u56fd\u5916\uff09\uff0c\u963f\u91cc\u4e91\u955c\u50cf\u7ad9\uff08\u56fd\u5185\uff09\uff0c\u5f53\u7136\u4f60\u4e5f\u80fd\u62e5\u6709\u81ea\u5df1\u7684Docker \u4ed3\u5e93</p> <p>\u6211\u4eec\u80fd\u591f\u50cf\u4f7f\u7528Git\u4e00\u6837\u5c06Docker\u955c\u50cf\u4ece\u4ed3\u5e93\u4e0b\u8f7d\u5230\u672c\u5730\uff08docker pull\uff09\uff0c\u4e5f\u53ef\u4ee5\u5c06\u81ea\u5236\u7684Docker\u955c\u50cf\u4ece\u672c\u5730\u4e0a\u4f20\u5230\u4ed3\u5e93\uff08docker push\uff09</p>"},{"location":"software_development/backend/DevOps/Docker/#docker_6","title":"Docker\u57fa\u672c\u67b6\u6784\u4e0e\u539f\u7406","text":"<p>Docker\u91c7\u7528client-server\uff08\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\uff09\u67b6\u6784\uff0cDocker client\u548cDocker server\u4e4b\u95f4\u91c7\u7528\u57fa\u4e8eUNIX sockets\u6216\u8005\u5176\u4ed6\u7f51\u7edc\u63a5\u53e3\u7684REST API\u8fdb\u884c\u4fe1\u606f\u4f20\u8f93</p> <p></p> <p>Docker client\u6709\u4e24\u79cd\uff1a</p> <ol> <li>\u666e\u901a\u7528\u6237\uff08docker pull, docker push...) </li> <li>Docker Compose\uff08\u5b9a\u4e49\u548c\u8fd0\u884c\u591a\u5bb9\u5668 Docker \u5e94\u7528\u7a0b\u5e8f\u7684\u5de5\u5177\uff09</li> </ol> <p>Docker server\u6709\u4e24\u79cd\uff1a</p> <ol> <li>\u672c\u5730Docker server</li> <li>\u8fdc\u7a0bDocker server</li> </ol>"},{"location":"software_development/backend/DevOps/Docker/#docker-server","title":"Docker Server","text":"<p>\u4ece\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230Docker Host\u7531\u4e09\u4e2a\u90e8\u5206\u6784\u6210\uff1aDocker daemon\uff08<code>dockerd</code>\uff09\uff0cImages\u548cContainers\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u5bb9\u5668\u548c\u955c\u50cf\u90fd\u5b58\u50a8\u5728Docker Host\u4e2d\uff0c\u800c\u4e0d\u662f\u5728Docker client\u3002</p> <p>\u8ba1\u7b97\u673a\u4e2d\u7684Engine\u901a\u5e38\u6307\u6838\u5fc3\u4ee3\u7801\u6a21\u5757</p> <p>\u5b89\u88c5Docker\u65f6\uff0c\u5b98\u65b9\u9ed8\u8ba4\u5b89\u88c5Docker Engine\uff0c\u5176\u4e2d\u5305\u62ec\u4e86Docker\u7684CLI\uff08\u4e5f\u5c31\u662fClient\uff09\u548cDocker\u7684daemon\uff08\u4e5f\u5c31\u662fServer\uff09 </p> <p>\u6211\u4eec\u901a\u5e38\u7684Docker \u64cd\u4f5c\u90fd\u662f\u901a\u8fc7\u4f7f\u7528Docker client\u4e0e\u672c\u5730\u7684Docker daemon\u4ea4\u4e92\u6267\u884c\uff0c\u5982\u679c\u60f3\u4f7f\u7528Client\u7aef\u8fdc\u7a0b\u8fde\u63a5Server\uff0c\u4e0d\u80fd\u5b89\u88c5\u5b98\u7f51\u63d0\u4f9b\u7684\u6807\u51c6\u5b89\u88c5\u5305\u3002</p> <p>Docker Host\u5373Docker server\u3002Docker Host\u53ef\u4ee5\u548cDocker client\u5728\u540c\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\uff08\u5373\u672c\u673a\u540c\u65f6\u8fd0\u884cclient\u7aef\u548cserver\u7aef\uff09\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7client\u7aef\u8fdc\u7a0b\u8fde\u63a5\u53e6\u4e00\u53f0\u8bbe\u5907\u7684Docker server\u3002</p> <p>daemon\uff08\u5b88\u62a4\u8fdb\u7a0b\uff09\uff1a\u5c31\u662f\u4e00\u76f4\u5728\u540e\u53f0\u8fd0\u884c\u7684\u8fdb\u7a0b</p> <p>\u5176\u4e2d\u7684Docker daemon\u4f5c\u4e3aDocker server\u7684\u5b88\u62a4\u8fdb\u7a0b\u3002Docker daemon\u662fDocker server\u7684\u6838\u5fc3\u5de5\u4f5c\u8fdb\u7a0b\uff0c\u8d1f\u8d23\u63a5\u6536Docker client\u7684\u8bf7\u6c42\u5e76\u4e14\u5bf9Images\u548cContainers\u8fdb\u884c\u7ba1\u7406\uff08Images\u548cContainers\u7edf\u79f0\u4e3aDocker objects\uff09\u3002\u56e0\u6b64\u5b98\u65b9\u5e38\u5e38\u4f7f\u7528\u7c92\u5ea6\u66f4\u7ec6\u7684Docker daemon\u4ee3\u79f0Docker server\u3002</p>"},{"location":"software_development/backend/DevOps/Docker/#_10","title":"\u5206\u5c42\u6587\u4ef6\u7cfb\u7edf","text":"<p>\u6587\u4ef6\u7cfb\u7edf\u662f\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u7528\u4e8e\u7ec4\u7ec7\u548c\u5b58\u50a8\u6587\u4ef6\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u7ed3\u6784\u5316\u7684\u65b9\u5f0f\u6765\u7ba1\u7406\u5b58\u50a8\u8bbe\u5907\u4e0a\u7684\u6570\u636e\uff0c\u5e76\u4f7f\u7528\u6237\u80fd\u591f\u4ee5\u903b\u8f91\u65b9\u5f0f\u8bbf\u95ee\u548c\u64cd\u4f5c\u6587\u4ef6\u3002</p> <p>\u5206\u5c42\u6587\u4ef6\u7cfb\u7edf\uff08Layered File System\uff09\u662f Docker \u5bb9\u5668\u7684\u6838\u5fc3\u7ec4\u6210\u90e8\u5206\u4e4b\u4e00\u3002Docker \u5206\u5c42\u6587\u4ef6\u7cfb\u7edf\u7684\u539f\u7406\u57fa\u4e8e\u8054\u5408\u6587\u4ef6\u7cfb\u7edf\uff08UnionFS\uff09\u3002</p> <p>Union\u6587\u4ef6\u7cfb\u7edf\uff08UnionFS)\u662f\u4e00\u79cd\u5206\u5c42\u3001\u8f7b\u91cf\u7ea7\u5e76\u4e14\u9ad8\u6027\u80fd\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u5b83\u652f\u6301\u5bf9\u6587\u4ef6\u7cfb\u7edf\u7684\u4fee\u6539\u4f5c\u4e3a\u4e00\u6b21\u63d0\u4ea4\u6765\u4e00\u5c42\u5c42\u7684\u53e0\u52a0\uff0c\u540c\u65f6\u53ef\u4ee5\u5c06\u4e0d\u540c\u76ee\u5f55\u6302\u8f7d\u5230\u540c\u4e00\u4e2a\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u4e0b\u3002</p> <p>Docker\u955c\u50cf\u4f7f\u7528\u5206\u5c42\u6587\u4ef6\u7cfb\u7edf\uff08Layered File System\uff09\u6765\u6784\u5efa\uff0c\u6784\u5efa\u65b9\u6cd5\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5728\u57fa\u7840\u955c\u50cf\u57fa\u7840\u4e0a\uff0c\u6bcf\u6dfb\u52a0\u4e00\u4e2a\u4fee\u6539\uff0c\u5c31\u4f1a\u5728\u65b0\u4e00\u5c42\u6dfb\u52a0\u65b0\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u6700\u7ec8\u6784\u5efa\u4e3a\u591a\u4e0d\u540c\u5c42\u6587\u4ef6\u7cfb\u7edf\u53e0\u52a0\u5728\u4e00\u8d77\u7684\u5b8c\u6574\u955c\u50cf\u3002\u5177\u4f53\u6784\u5efa\u65b9\u6cd5\u89c1Dockerfile\u3002</p> <p>\u5206\u5c42\u6587\u4ef6\u7cfb\u7edf\u7684\u597d\u5904\uff1a</p> <ol> <li>\u8282\u7701\u5b58\u50a8\u7a7a\u95f4\uff1a\u7531\u4e8e\u5206\u5c42\u6587\u4ef6\u7cfb\u7edf\u7684\u7279\u6027\uff0c\u5f53\u591a\u4e2a\u5bb9\u5668\u5171\u4eab\u76f8\u540c\u6587\u4ef6\u5c42\u65f6\uff0c\u53ea\u9700\u5728\u78c1\u76d8\u4e2d\u4fdd\u5b58\u4e00\u4efd\uff0c\u4ece\u800c\u5927\u5927\u51cf\u5c11\u4e86\u5b58\u50a8\u7a7a\u95f4\u7684\u5360\u7528\u3002</li> <li>\u5feb\u901f\u90e8\u7f72\u548c\u66f4\u65b0\uff1a\u5f53\u5bb9\u5668\u9700\u8981\u66f4\u65b0\u65f6\uff0cDocker \u53ea\u9700\u4e0b\u8f7d\u548c\u5e94\u7528\u65b0\u7684\u6587\u4ef6\u5c42\uff0c\u800c\u4e0d\u5fc5\u91cd\u65b0\u6784\u5efa\u6574\u4e2a\u5bb9\u5668\u3002\u8fd9\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u90e8\u7f72\u548c\u66f4\u65b0\u7684\u6548\u7387\u3002</li> <li>\u63d0\u9ad8\u955c\u50cf\u7684\u53ef\u590d\u7528\u6027\uff1a\u5206\u5c42\u6587\u4ef6\u7cfb\u7edf\u4f7f\u5f97\u5bb9\u5668\u7684\u6bcf\u4e2a\u5c42\u90fd\u53ef\u4ee5\u88ab\u5176\u4ed6\u5bb9\u5668\u6216\u955c\u50cf\u6240\u5171\u4eab\uff0c\u4ece\u800c\u8ba9\u5bb9\u5668\u955c\u50cf\u7684\u91cd\u7528\u66f4\u52a0\u5bb9\u6613\u3002</li> <li>\u66f4\u597d\u7684\u9694\u79bb\u6027\uff1a\u6bcf\u4e2a\u5bb9\u5668\u7684\u4fee\u6539\u53ea\u4f1a\u5f71\u54cd\u5230\u8be5\u5bb9\u5668\u81ea\u8eab\u7684\u6587\u4ef6\u5c42\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u5bb9\u5668\u751a\u81f3\u5bbf\u4e3b\u673a\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u63d0\u4f9b\u4e86\u826f\u597d\u7684\u9694\u79bb\u6027\u3002</li> </ol>"},{"location":"software_development/backend/DevOps/Docker/#docker_7","title":"Docker\u521d\u9636\u4f7f\u7528","text":""},{"location":"software_development/backend/DevOps/Docker/#docker_8","title":"\u5b89\u88c5Docker","text":"<p>\u5b98\u65b9\u7ed9\u51fa\u4e86Docker DeskTop\u548cDocker Engine\u4e24\u79cd\u7248\u672c</p> <ul> <li> <p>docker desktop\u5305\u542b\u865a\u62df\u673a\u3001\u56fe\u5f62\u754c\u9762\u53ca\u5176\u4ed6\u7279\u6027\u6bd4\u5982\u5e26\u4e86\u4e00\u4e2a\u5355\u8282\u70b9\u7684kubernetes\u96c6\u7fa4\uff0c\u865a\u62df\u673a\u91cc\u6709\u4e00\u4e2aDocker CE (Docker Community Edition)\u5b88\u62a4\u8fdb\u7a0b\u3002</p> </li> <li> <p>docker engine\uff0c\u6839\u636e\u5b98\u65b9\u6587\u6863\u5305\u542b\u4e09\u90e8\u5206\uff0c</p> </li> <li>\u5b88\u62a4\u8fdb\u7a0bdockerd</li> <li>api\uff0c\u7a0b\u5e8f\u53ef\u901a\u8fc7api\u4e0edockerd\u4ea4\u4e92</li> <li>\u547d\u4ee4\u884c\u5de5\u5177\u5ba2\u6237\u7aefdocker\uff0c\u547d\u4ee4docker command\u4e2d\u7684docker</li> </ul> <p>\u6211\u4eec\u901a\u5e38\u5b89\u88c5Docker Engine</p> <p>\u8fd9\u662f\u7b14\u8005\u7684\u914d\u7f6e</p> <p></p> <p>\u5b89\u88c5\u6559\u7a0b\u53c2\u8003</p> <p>Install Docker Engine on Ubuntu | Docker Docs</p> <ol> <li>\u5378\u8f7d\u65e7Docker\u914d\u7f6e\u5305</li> </ol> <pre><code>for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done\n</code></pre> <ol> <li>\u9009\u62e9\u5b89\u88c5\u65b9\u6cd5\uff1a\u4f7f\u7528\u4ed3\u5e93\u5b89\u88c5</li> </ol> <p></p> <p>\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4</p> <pre><code># Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n\n# Add the repository to Apt sources:\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo \"$VERSION_CODENAME\") stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update\n</code></pre> <ol> <li>\u4e0b\u8f7dDocker\u5305</li> </ol> <pre><code>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre> <p>\u8f93\u5165docker version\u51fa\u73b0\u4ee5\u4e0b\u7ed3\u679c</p> <p></p> <ol> <li>\u6d4b\u8bd5hello-world\u955c\u50cf</li> </ol> <pre><code>sudo docker run hello-world\n</code></pre> <p>\u51fa\u73b0\u4ee5\u4e0b\u7ed3\u679c\u5219\u6210\u529f</p> <p></p>"},{"location":"software_development/backend/DevOps/Docker/#_11","title":"\u914d\u7f6e\u955c\u50cf\u6e90","text":"<p>\u5f53\u524d\u955c\u50cf\u6e90\u5730\u5740\u9ed8\u8ba4\u4e3a\u56fd\u5916\u7684docker hub\u5730\u5740</p> <p>\u6539\u4e3a\u56fd\u5185\u955c\u50cf\u6e90\u5730\u5740\u80fd\u591f\u5927\u5e45\u52a0\u901f\u955c\u50cf\u4e0b\u8f7d</p> <p>docker \u8bbe\u7f6e\u56fd\u5185\u955c\u50cf\u6e90 - \u708e\u9ec4\u5b50\u5b59\uff0c\u9f99\u7684\u4f20\u4eba - \u535a\u5ba2\u56ed (cnblogs.com)</p>"},{"location":"software_development/backend/DevOps/Docker/#_12","title":"\u955c\u50cf\u6307\u4ee4","text":""},{"location":"software_development/backend/DevOps/Docker/#_13","title":"\u67e5\u770b\u955c\u50cf","text":"<pre><code>[root@localhost ~]# docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nhello-world         latest              bf756fb1ae65        7 months ago        13.3kB\n</code></pre> <ul> <li><code>REPOSITORY</code>\uff1a\u955c\u50cf\u5728\u4ed3\u5e93\u4e2d\u7684\u540d\u79f0\uff0c\u672c\u6587\u4e2d\u4ee5\u540e\u90fd\u7b80\u79f0\u955c\u50cf\u540d\u79f0</li> <li><code>TAG</code>\uff1a\u955c\u50cf\u6807\u7b7e</li> <li><code>IMAGE ID</code>\uff1a\u955c\u50cf ID</li> <li><code>CREATED</code>\uff1a\u955c\u50cf\u7684\u521b\u5efa\u65e5\u671f\uff08\u4e0d\u662f\u83b7\u53d6\u8be5\u955c\u50cf\u7684\u65e5\u671f\uff09</li> <li><code>SIZE</code>\uff1a\u955c\u50cf\u5927\u5c0f</li> </ul> <p>\u8fd9\u4e9b\u955c\u50cf\u90fd\u662f\u5b58\u50a8\u5728 Docker \u5bbf\u4e3b\u673a\u7684 <code>/var/lib/docker</code> \u76ee\u5f55\u4e0b\u3002</p> <pre><code>docker images\n</code></pre> <ul> <li><code>-a</code> \u5c55\u793a\u6240\u6709\u955c\u50cf</li> <li><code>-q</code> \u4ec5\u5c55\u793a\u955c\u50cf\u7684ID</li> <li><code>-aq</code> \u5c55\u793a\u6240\u6709\u955c\u50cf\u7684ID</li> </ul>"},{"location":"software_development/backend/DevOps/Docker/#_14","title":"\u641c\u7d22\u955c\u50cf","text":"<pre><code>docker search \u955c\u50cf\u540d\u79f0\n</code></pre>"},{"location":"software_development/backend/DevOps/Docker/#_15","title":"\u62c9\u53d6\u955c\u50cf","text":"<pre><code>docker pull \u955c\u50cf\u540d\u79f0\ndocker pull centos #\u62c9\u53d6\u6700\u65b0\u7248\u672c\ndocker pull centos:7 #\u62c9\u53d6\u6307\u5b9a\u7248\u672c\n</code></pre> <p>\u4e0d\u58f0\u660etag\u955c\u50cf\u6807\u7b7e\u4fe1\u606f\u9ed8\u8ba4\u62c9\u53d6latest\u7248\u672c</p> <p>\u4e5f\u53ef\u4ee5\u901a\u8fc7\uff1ahttps://hub.docker.com/ \u641c\u7d22\u8be5\u955c\u50cf\uff0c\u67e5\u770b\u652f\u6301\u7684 tag \u4fe1\u606f\u3002</p> <p>\u53e6\u5916\uff0c\u5728\u62c9\u53d6\u7ed3\u679c\u4e2d\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230\u5206\u5c42\u6587\u4ef6\u7cfb\u7edf\u7684\u5b58\u5728\uff1a</p> <p>\u5982\u4e0b\u56fe\uff0c\u7ea2\u6846\u5185\u5bb9\u5373\u4e3a\u5206\u5c42\u6587\u4ef6\u7cfb\u7edf</p> <p></p>"},{"location":"software_development/backend/DevOps/Docker/#_16","title":"\u5220\u9664\u955c\u50cf","text":"<pre><code># \u5220\u9664\u5355\u4e2a\u955c\u50cf\ndocker rmi \u955c\u50cfID\n# \u5220\u9664\u591a\u4e2a\u955c\u50cf\ndocker rmi \u955c\u50cfID \u955c\u50cfID \u955c\u50cfID\n# \u5220\u9664\u6240\u6709\u955c\u50cf\ndocker rmi $(docker images -aq)\n</code></pre> <p>\u6ce8\u610f\uff1a\u5982\u679c\u901a\u8fc7\u67d0\u4e2a\u955c\u50cf\u521b\u5efa\u4e86\u5bb9\u5668\uff0c\u5219\u8be5\u955c\u50cf\u65e0\u6cd5\u5220\u9664\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a\u5148\u5220\u9664\u955c\u50cf\u4e2d\u7684\u5bb9\u5668\uff0c\u518d\u5220\u9664\u8be5\u955c\u50cf\u3002</p>"},{"location":"software_development/backend/DevOps/Docker/#_17","title":"\u5bb9\u5668\u6307\u4ee4","text":""},{"location":"software_development/backend/DevOps/Docker/#_18","title":"\u67e5\u770b\u5bb9\u5668","text":"<pre><code>[root@localhost ~]# docker ps\nCONTAINER ID        IMAGE        COMMAND        CREATED        STATUS        PORTS        NAMES\n</code></pre> <ul> <li><code>CONTAINER ID</code>\uff1a\u5bb9\u5668 ID</li> <li><code>IMAGE</code>\uff1a\u6240\u5c5e\u955c\u50cf</li> <li><code>COMMAND</code>\uff1a</li> <li><code>CREATED</code>\uff1a\u521b\u5efa\u65f6\u95f4</li> <li><code>STATUS</code>\uff1a\u5bb9\u5668\u72b6\u6001</li> <li><code>PORTS</code>\uff1a\u7aef\u53e3</li> <li><code>NAMES</code>\uff1a\u5bb9\u5668\u540d\u79f0</li> </ul> <p>\u67e5\u770b\u505c\u6b62\u7684\u5bb9\u5668\u3002</p> <pre><code>docker ps -f status=exited\n</code></pre> <p>\u67e5\u770b\u6240\u6709\u5bb9\u5668\uff08\u5305\u62ec\u8fd0\u884c\u548c\u505c\u6b62\uff09\u3002</p> <pre><code>docker ps -a\n</code></pre> <p>\u67e5\u770b\u6700\u540e\u4e00\u6b21\u8fd0\u884c\u7684\u5bb9\u5668\u3002</p> <pre><code>docker ps -l\n</code></pre>"},{"location":"software_development/backend/DevOps/Docker/#_19","title":"\u521b\u5efa\u4e0e\u542f\u52a8\u5bb9\u5668","text":"<pre><code>docker run [OPTIONS] IMAGE [COMMAND] [ARG...]\n</code></pre> <ul> <li> <p><code>-i</code>\uff1a\u8868\u793a\u8fd0\u884c\u5bb9\u5668\uff1b</p> </li> <li> <p><code>-t</code>\uff1a\u8868\u793a\u5bb9\u5668\u542f\u52a8\u540e\u4f1a\u8fdb\u5165\u5176\u547d\u4ee4\u884c\u3002\u52a0\u5165\u8fd9\u4e24\u4e2a\u53c2\u6570\u540e\uff0c\u5bb9\u5668\u521b\u5efa\u5c31\u80fd\u767b\u5f55\u8fdb\u53bb\u3002\u5373\u5206\u914d\u4e00\u4e2a\u4f2a\u7ec8\u7aef\uff1b</p> </li> <li> <p><code>--name</code>\uff1a\u4e3a\u521b\u5efa\u7684\u5bb9\u5668\u547d\u540d\uff1b</p> </li> <li> <p><code>-v</code>\uff1a\u8868\u793a\u76ee\u5f55\u6620\u5c04\u5173\u7cfb\uff08\u524d\u8005\u662f\u5bbf\u4e3b\u673a\u76ee\u5f55\uff0c\u540e\u8005\u662f\u6620\u5c04\u5230\u5bbf\u4e3b\u673a\u4e0a\u7684\u76ee\u5f55\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2a -v \u505a\u591a\u4e2a\u76ee\u5f55\u6216\u6587\u4ef6\u6620\u5c04\u3002\u6ce8\u610f\uff1a\u6700\u597d\u505a\u76ee\u5f55\u6620\u5c04\uff0c\u5728\u5bbf\u4e3b\u673a\u4e0a\u505a\u4fee\u6539\uff0c\u7136\u540e\u5171\u4eab\u5230\u5bb9\u5668\u4e0a\uff1b</p> </li> <li> <p><code>-d</code>\uff1a\u5728 run \u540e\u9762\u52a0\u4e0a -d \u53c2\u6570\uff0c\u5219\u4f1a\u521b\u5efa\u4e00\u4e2a\u5b88\u62a4\u5f0f\u5bb9\u5668\u5728\u540e\u53f0\u8fd0\u884c\uff08\u8fd9\u6837\u521b\u5efa\u5bb9\u5668\u540e\u4e0d\u4f1a\u81ea\u52a8\u767b\u5f55\u5bb9\u5668\uff0c\u5982\u679c\u53ea\u52a0 -i -t \u4e24\u4e2a\u53c2\u6570\uff0c\u521b\u5efa\u5bb9\u5668\u540e\u5c31\u4f1a\u81ea\u52a8\u8fdb\u5bb9\u5668\u91cc\uff09</p> </li> </ul> <p>\u524d\u53f0\u8fdb\u7a0b\uff1a\u4e0e\u7528\u6237\u4ea4\u4e92\u7684\u8fdb\u7a0b</p> <p>\u540e\u53f0\u8fdb\u7a0b\uff1a\u53c8\u53eb\u5b88\u62a4\u8fdb\u7a0b\uff0c\u4e0d\u548c\u7528\u6237\u4ea4\u4e92</p> <ul> <li> <p><code>-p</code>\uff1a\u8868\u793a\u7aef\u53e3\u6620\u5c04\uff0c\u524d\u8005\u662f\u5bbf\u4e3b\u673a\u7aef\u53e3\uff0c\u540e\u8005\u662f\u5bb9\u5668\u5185\u7684\u6620\u5c04\u7aef\u53e3\u3002\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2a -p \u505a\u591a\u4e2a\u7aef\u53e3\u6620\u5c04\u3002</p> </li> <li> <p><code>-P</code>\uff1a\u968f\u673a\u4f7f\u7528\u5bbf\u4e3b\u673a\u7684\u53ef\u7528\u7aef\u53e3\u4e0e\u5bb9\u5668\u5185\u66b4\u9732\u7684\u7aef\u53e3\u6620\u5c04\u3002</p> </li> </ul>"},{"location":"software_development/backend/DevOps/Docker/#_20","title":"\u521b\u5efa\u5e76\u8fdb\u5165\u5bb9\u5668","text":"<p>\u4e0b\u9762\u8fd9\u884c\u547d\u4ee4\u7684\u610f\u601d\u5c31\u662f\u901a\u8fc7\u955c\u50cf AA \u521b\u5efa\u4e00\u4e2a\u5bb9\u5668 BB\uff0c\u8fd0\u884c\u5bb9\u5668\u5e76\u8fdb\u5165\u5bb9\u5668\u7684 <code>/bin/bash</code>\u3002</p> <pre><code>docker run -it --name \u5bb9\u5668\u540d\u79f0 \u955c\u50cf\u540d\u79f0:\u6807\u7b7e /bin/bash\n</code></pre> <p>\u6ce8\u610f\uff1aDocker \u5bb9\u5668\u8fd0\u884c\u5fc5\u987b\u6709\u4e00\u4e2a\u524d\u53f0\u8fdb\u7a0b\uff0c \u5982\u679c\u6ca1\u6709\u524d\u53f0\u8fdb\u7a0b\u6267\u884c\uff0c\u5bb9\u5668\u8ba4\u4e3a\u662f\u7a7a\u95f2\u72b6\u6001\uff0c\u5c31\u4f1a\u81ea\u52a8\u9000\u51fa\u3002</p> <p>\u9000\u51fa\u5f53\u524d\u5bb9\u5668</p> <pre><code>exit #\u9000\u51fa\u5e76\u505c\u6b62\u5f53\u524d\u5bb9\u5668\nCtrl+P\u548cCtrl+Q\u5206\u522b\u6309\uff0c\u53ef\u4ee5\u9000\u51fa\u5bb9\u5668\uff0c\u8ba9\u5bb9\u5668\u4ecd\u8fd0\u884c\n</code></pre>"},{"location":"software_development/backend/DevOps/Docker/#_21","title":"\u5b88\u62a4\u5f0f\u65b9\u5f0f\u521b\u5efa\u5bb9\u5668","text":"<pre><code>docker run -di --name \u5bb9\u5668\u540d\u79f0 \u955c\u50cf\u540d\u79f0:\u6807\u7b7e\n</code></pre>"},{"location":"software_development/backend/DevOps/Docker/#_22","title":"\u767b\u5f55\u5b88\u62a4\u5f0f\u5bb9\u5668\u65b9\u5f0f","text":"<pre><code>docker exec -it \u5bb9\u5668\u540d\u79f0|\u5bb9\u5668ID /bin/bash\n</code></pre> <p>\u8bed\u6cd5\uff1a</p> <p>docker exec [OPTIONS] CONTAINER COMMAND [ARG...]</p> <p>\u4f5c\u7528\uff1a</p> <p>Execute a command in a running container</p> <p>OPTIONS\u8bf4\u660e\uff1a</p> <ul> <li>-d :\u5206\u79bb\u6a21\u5f0f: \u5728\u540e\u53f0\u8fd0\u884c</li> <li>-i :\u5373\u4f7f\u6ca1\u6709\u9644\u52a0\u4e5f\u4fdd\u6301STDIN \u6253\u5f00</li> <li>-t :\u5206\u914d\u4e00\u4e2a\u4f2a\u7ec8\u7aef</li> </ul>"},{"location":"software_development/backend/DevOps/Docker/#_23","title":"\u505c\u6b62\u4e0e\u542f\u52a8\u5bb9\u5668","text":"<pre><code># \u505c\u6b62\u5bb9\u5668\ndocker stop \u5bb9\u5668\u540d\u79f0|\u5bb9\u5668ID\n# \u542f\u52a8\u5bb9\u5668\ndocker start \u5bb9\u5668\u540d\u79f0|\u5bb9\u5668ID\n</code></pre>"},{"location":"software_development/backend/DevOps/Docker/#_24","title":"\u5176\u4ed6\u547d\u4ee4","text":""},{"location":"software_development/backend/DevOps/Docker/#_25","title":"\u67e5\u770b\u65e5\u5fd7","text":"<pre><code>docker logs\n</code></pre>"},{"location":"software_development/backend/DevOps/Docker/#_26","title":"\u8fdb\u5165\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668","text":"<pre><code># \u65b9\u6cd5\u4e00\uff1a\u5f00\u542f\u4e00\u4e2a\u65b0\u7684\u5bb9\u5668\u7684\u7ec8\u7aef\ndocker exec \u5bb9\u5668id/\u5bb9\u5668\u540d\n\n# \u65b9\u6cd5\u4e8c\uff1a\u8fdb\u5165\u5bb9\u5668\u6b63\u5728\u6267\u884c\u7684\u7ec8\u7aef\ndocker attach \u5bb9\u5668id/\u5bb9\u5668\u540d\n</code></pre>"},{"location":"software_development/backend/DevOps/Docker/#_27","title":"\u4ece\u5bb9\u5668\u5185\u62f7\u8d1d\u6587\u4ef6\u5230\u4e3b\u673a\u4e0a","text":"<pre><code># \u8fdb\u5165\u5bb9\u5668\u540e\ndocker cp \u5bb9\u5668id/\u5bb9\u5668\u540d:\u5bb9\u5668\u5185\u6587\u4ef6\u8def\u5f84 \u4e3b\u673a\u6587\u4ef6\u8def\u5f84\n</code></pre>"},{"location":"software_development/backend/DevOps/Docker/#_28","title":"\u6570\u636e\u7ba1\u7406","text":"<p>\u53c2\u8003\u6587\u732e\uff1a</p> <p>https://docs.docker.com/storage/</p> <p>https://docs.docker.com/storage/volumes/</p> <p>https://docs.docker.com/storage/bind-mounts/</p> <p>https://blog.logrocket.com/docker-volumes-vs-bind-mounts/</p> <p>https://medium.com/@williehung/persisting-data-using-docker-volume-and-bind-mount-52a8cb42f4f0</p> <p>\u5728\u4f7f\u7528\u5bb9\u5668\u65f6\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u5bf9\u4e8e\u4f8b\u5982MySQL\u7684\u5e94\u7528\uff0c\u88c5\u8f7d\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c\uff0c\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u4f1a\u4ea7\u751f\u6570\u636e\uff0c\u800c\u7531\u4e8e\u8fd9\u4e9b\u6570\u636e\u5b58\u50a8\u5728\u5bb9\u5668\u4e2d\uff0c\u5982\u679c\u5bb9\u5668\u88ab\u5220\u9664\uff0c\u90a3\u4e48\u8fd9\u4e9b\u6570\u636e\u4e5f\u4f1a\u6d88\u5931\u2014\u2014\u8fd9\u4e0d\u662f\u6211\u4eec\u6240\u5e0c\u671b\u770b\u89c1\u7684\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u5bb9\u5668\u4ea7\u751f\u7684\u6570\u636e\u6301\u4e45\u5316\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u5220\u9664\u548c\u4ea7\u751f\u65b0\u7684\u5bb9\u5668\uff0c\u800c\u4e0d\u9700\u8981\u62c5\u5fc3\u6570\u636e\u4e22\u5931\u7684\u95ee\u9898\u3002\u8fd9\u5c31\u9700\u8981\u7528\u5230Docker\u7684\u6570\u636e\u7ba1\u7406\u6280\u672f\u3002</p> <p>\u5377\u5c31\u662f\u76ee\u5f55\u6216\u6587\u4ef6\uff0c\u6570\u636e\u5377\u662f\u4e00\u4e2a\u865a\u62df\u76ee\u5f55\uff0c\u6307\u5411\u5bbf\u4e3b\u673a\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u67d0\u4e2a\u76ee\u5f55\uff0c\u5b83\u4eec\u7684\u4fee\u6539\u662f\u53cc\u5411\u540c\u6b65\u7684</p> <p>\u5f53\u524d\u6570\u636e\u7ba1\u7406\u6280\u672f\u6709\u4e24\u79cd\uff1aDocker\u4e3b\u8981\u652f\u6301\u7684\u6570\u636e\u5377\u6280\u672f\u548c\u7ed1\u5b9a\u6302\u8f7d\u6280\u672f\u3002</p> <ul> <li>\u6570\u636e\u5377\u6280\u672f\uff1aDocker\u4e3b\u8981\u652f\u6301\uff08\u5b98\u65b9\u7528\u8bcd\u4e3a\"preferred\"\uff09\u7684\u6301\u4e45\u5316\u6570\u636e\u6280\u672f\u3002</li> <li>\u7ed1\u5b9a\u6302\u8f7d\u6280\u672f\uff1aDocker\u65e9\u671f\u652f\u6301\u7684\u6301\u4e45\u5316\u6570\u636e\u6280\u672f\u3002</li> </ul> <p>\u4ece\u672c\u8d28\u4e0a\u8bb2\uff0c\u8fd9\u4e24\u79cd\u6280\u672f\u90fd\u662f\u9488\u5bf9\u6570\u636e\u5b58\u653e\u76ee\u5f55\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e24\u79cd\u6280\u672f\u7684\u533a\u522b\u5728\u4e8e\uff1a</p> <ul> <li>\u6570\u636e\u5377\u6280\u672f\u9762\u5411\u7684\u4e3b\u4f53\u4e3a\u5bb9\u5668\uff0c\u5bb9\u5668\u521b\u5efa\u5e76\u7ba1\u7406\u6570\u636e\u5377\uff0c\u6570\u636e\u5377\u4ee5\u76ee\u5f55\u7684\u5f62\u5f0f\u5b58\u653e\u5728\u5bb9\u5668\u4e2d\uff0cDocker\u4f1a\u81ea\u52a8\u5728\u5bbf\u4e3b\u673a\u4e0a\u5e2e\u6211\u4eec\u521b\u5efa\u6570\u636e\u5377\u5bf9\u5e94\u7684\u771f\u5b9e\u76ee\u5f55\uff0c\u5e76\u5c06\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u5377\u76ee\u5f55\u4e0e\u5bbf\u4e3b\u673a\u7684\u76ee\u5f55\u76f8\u7ed1\u5b9a\uff08\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u5728\u5bbf\u4e3b\u673a\u4e0a\u521b\u5efa\u6307\u5b9a\u76ee\u5f55\uff09\uff0c\u6570\u636e\u5377\u4e0e\u5bbf\u4e3b\u673a\u5185\u6838\u529f\u80fd\u76f8\u9694\u79bb\u3002</li> <li>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff1a\u5bb9\u5668\u6302\u8f7d\u65f6\u53ea\u9700\u8981\u6302\u8f7d\u5230\u6570\u636e\u5377\u4e0a\uff0c\u800c\u4e0d\u7528\u5173\u5fc3\u6570\u636e\u5377\u6307\u5411\u7684\u771f\u5b9e\u76ee\u5f55\u5728\u54ea\u91cc\u3002\u5373\u4f7f\u5c06\u6765\u5bb9\u5668\u88ab\u5220\u9664\u4e86\uff0c\u6570\u636e\u5377\u4e2d\u6216\u8005\u5bbf\u4e3b\u673a\u6302\u8f7d\u5230\u5bb9\u5668\u7684\u76ee\u5f55\u4e2d\u7684\u5185\u5bb9\u662f\u4e0d\u4f1a\u968f\u7740\u5bb9\u5668\u7684\u5220\u9664\u800c\u4e22\u5931\u7684\u3002\uff08\u53ef\u4ee5\u770b\u4f5c\u6570\u636e\u5377\u662fDocker\u5bb9\u5668\u7ed9\u5bbf\u4e3b\u673a\u67d0\u4e2a\u76ee\u5f55\u53d6\u4e86\u4e00\u4e2a\u522b\u540d\uff0cDocker\u5bb9\u5668\u4e4b\u95f4\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u522b\u540d\uff09</li> <li>\u7ed1\u5b9a\u6302\u8f7d\u6280\u672f\u9762\u5411\u7684\u4e3b\u4f53\u4e3a\u5bbf\u4e3b\u673a\uff0c\u5bbf\u4e3b\u673a\u5c06\u81ea\u5df1\u7684\u6587\u4ef6\u6216\u76ee\u5f55\u7ed1\u5b9a\u5230\u5bb9\u5668\u4e2d\uff08\u5982\u679c\u5bb9\u5668\u4e2d\u4e0d\u5b58\u5728\u8be5\u6587\u4ef6\u6216\u76ee\u5f55\uff0c\u5219\u81ea\u52a8\u521b\u5efa\u6307\u5b9a\u6587\u4ef6\u6216\u76ee\u5f55\uff09</li> </ul> <p>\u518d\u8fdb\u4e00\u6b65\u8c08\u8c08\u4e24\u79cd\u6280\u672f\u7684\u4f18\u7f3a\u70b9\uff1a</p> <ul> <li>\u6570\u636e\u5377\u6280\u672f</li> <li>\u4f18\u70b9\uff1a<ul> <li>volume\u66f4\u52a0\u5bb9\u6613\u8fdb\u884c\u5907\u4efd\u548c\u8fc1\u79fb</li> <li>volume\u53ef\u4ee5\u5728linux\u548cwindows\u5bb9\u5668\u4e2d\u8fd0\u884c</li> <li>\u4e0edocker\u66f4\u4eb2\u548c</li> <li>\u53ef\u4ee5\u901a\u8fc7docker\u5ba2\u6237\u7aef\u547d\u4ee4\u6216\u8005docker api\u6765\u7ba1\u7406volume (\u6bd4\u5982\uff1adocker volume\u547d\u4ee4)</li> <li>volume\u53ef\u4ee5\u66f4\u52a0\u5b89\u5168\u7684\u5728\u591a\u4e2a\u5bb9\u5668\u4e4b\u95f4\u8fdb\u884c\u5171\u4eab</li> <li>\u65b0volume\u7684\u5185\u5bb9\u53ef\u4ee5\u7531\u5bb9\u5668\u9884\u5148\u586b\u5145</li> <li>volume\u9a71\u52a8\u7a0b\u5e8f\u5141\u8bb8\u5728\u8fdc\u7a0b\u4e3b\u673a\u6216\u4e91\u63d0\u4f9b\u5546\u4e0a\u5b58\u50a8\u5377\uff0c\u4ee5\u52a0\u5bc6volume\u7684\u5185\u5bb9\u6216\u6dfb\u52a0\u5176\u4ed6\u529f\u80fd</li> <li>Docker Desktop\u4e0a\u7684\u5377\u6bd4Mac\u548cWindows\u4e3b\u673a\u4e0a\u7684\u7ed1\u5b9a\u6302\u8f7d\u5177\u6709\u66f4\u9ad8\u7684\u6027\u80fd\u3002</li> </ul> </li> <li>\u7f3a\u70b9\uff1a\u771f\u5b9e\u6302\u8f7d\u76ee\u5f55\u7531Docker\u751f\u6210\uff0c\u76ee\u5f55\u8f83\u6df1\uff0c\u4e0d\u65b9\u4fbf\u67e5\u627e\u3002</li> <li>\u7ed1\u5b9a\u6302\u8f7d\u6280\u672f</li> <li>\u4f18\u70b9\uff1a<ul> <li>\u6027\u80fd\u66f4\u597d\uff08\u56e0\u4e3a\u76ee\u5f55\u5728\u5bbf\u4e3b\u673a\u4e0a\uff09</li> <li>\u76ee\u5f55\u548c\u6587\u4ef6\u66f4\u597d\u627e\u4e5f\u66f4\u597d\u7ef4\u62a4\uff0c\u5e76\u4e14\u80fd\u76f4\u63a5\u628a\u76ee\u5f55\u6216\u8005\u6587\u4ef6\u6302\u8f7d\u5230\u5bb9\u5668\u4e0a\u3002</li> </ul> </li> <li>\u7f3a\u70b9\uff1a<ul> <li>\u76f8\u6bd4\u4e8e\u6570\u636e\u5377\u529f\u80fd\u6709\u9650\u3002</li> <li>\u4f9d\u8d56\u4e8e\u5bbf\u4e3b\u673a\u7684\u76ee\u5f55\u7ed3\u6784\u548c\u64cd\u4f5c\u7cfb\u7edf</li> <li>\u5b58\u5728\u5b89\u5168\u9690\u60a3\uff1a\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bb9\u5668\u4e2d\u8fd0\u884c\u7684\u8fdb\u7a0b\u6765\u66f4\u6539\u4e3b\u673a\u6587\u4ef6\u7cfb\u7edf\uff0c\u5305\u62ec\u521b\u5efa\u3001\u4fee\u6539\u6216\u5220\u9664\u91cd\u8981\u7684\u7cfb\u7edf\u6587\u4ef6\u6216\u76ee\u5f55\u3002\u8fd9\u4e2a\u529f\u80fd\u7ed9\u4e88\u5bb9\u5668\u8f83\u5927\u7684\u6743\u9650\uff0c\u5f88\u53ef\u80fd\u5f71\u54cd\u4e3b\u673a\u7cfb\u7edf\u4e0a\u7684\u975e Docker \u8fdb\u7a0b\u3002</li> </ul> </li> </ul> <p>\u6839\u636e\u4ee5\u4e0a\u4f18\u7f3a\u70b9\uff0c\u6211\u4eec\u8fd8\u80fd\u5217\u51fa\u8fd9\u4e24\u79cd\u6280\u672f\u7684\u4f7f\u7528\u573a\u666f\uff1a</p> <ul> <li> <p>\u6570\u636e\u5377\uff08Docker \u5bb9\u5668\u548c\u670d\u52a1\u4e2d\u4fdd\u5b58\u6570\u636e\u7684\u9996\u9009\u65b9\u5f0f\uff09\uff0c\u6570\u636e\u5377\u7684\u4e00\u4e9b\u7528\u4f8b\u5305\u62ec\uff1a</p> </li> <li> <p>\u5728\u591a\u4e2a\u8fd0\u884c\u7684\u5bb9\u5668\u4e4b\u95f4\u5171\u4eab\u6570\u636e\u3002\u5982\u679c\u60a8\u6ca1\u6709\u663e\u5f0f\u521b\u5efa\u5b83\uff0c\u5219\u4f1a\u5728\u7b2c\u4e00\u6b21\u5c06\u5176\u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\u65f6\u521b\u5efa\u4e00\u4e2a\u5377\u3002\u5f53\u8be5\u5bb9\u5668\u505c\u6b62\u6216\u88ab\u5220\u9664\u65f6\uff0c\u8be5\u5377\u4ecd\u7136\u5b58\u5728\u3002\u591a\u4e2a\u5bb9\u5668\u53ef\u4ee5\u540c\u65f6\u6302\u8f7d\u540c\u4e00\u5377\uff0c\u65e0\u8bba\u662f\u8bfb\u5199\u8fd8\u662f\u53ea\u8bfb\u3002\u4ec5\u5f53\u60a8\u660e\u786e\u5220\u9664\u5377\u65f6\uff0c\u5377\u624d\u4f1a\u88ab\u5220\u9664\u3002</p> </li> <li>\u5f53\u4e0d\u4fdd\u8bc1 Docker \u4e3b\u673a\u5177\u6709\u7ed9\u5b9a\u7684\u76ee\u5f55\u6216\u6587\u4ef6\u7ed3\u6784\u65f6\u3002\u5377\u53ef\u5e2e\u52a9\u60a8\u5c06 Docker \u4e3b\u673a\u7684\u914d\u7f6e\u4e0e\u5bb9\u5668\u8fd0\u884c\u65f6\u89e3\u8026\u3002</li> <li>\u5f53\u60a8\u60f3\u8981\u5c06\u5bb9\u5668\u7684\u6570\u636e\u5b58\u50a8\u5728\u8fdc\u7a0b\u4e3b\u673a\u6216\u4e91\u63d0\u4f9b\u5546\u4e0a\uff0c\u800c\u4e0d\u662f\u672c\u5730\u65f6\u3002</li> <li>\u5f53\u60a8\u9700\u8981\u5c06\u6570\u636e\u4ece\u4e00\u53f0 Docker \u4e3b\u673a\u5907\u4efd\u3001\u6062\u590d\u6216\u8fc1\u79fb\u5230\u53e6\u4e00\u53f0\u65f6\uff0c\u5377\u662f\u66f4\u597d\u7684\u9009\u62e9\u3002\u60a8\u53ef\u4ee5\u505c\u6b62\u4f7f\u7528\u8be5\u5377\u7684\u5bb9\u5668\uff0c\u7136\u540e\u5907\u4efd\u8be5\u5377\u7684\u76ee\u5f55\uff08\u4f8b\u5982<code>/var/lib/docker/volumes/&lt;volume-name&gt;</code>\uff09\u3002</li> <li>\u5f53\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u9700\u8981 Docker Desktop \u4e0a\u7684\u9ad8\u6027\u80fd I/O \u65f6\u3002\u5377\u5b58\u50a8\u5728 Linux VM \u4e2d\u800c\u4e0d\u662f\u4e3b\u673a\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u8bfb\u53d6\u548c\u5199\u5165\u5177\u6709\u66f4\u4f4e\u7684\u5ef6\u8fdf\u548c\u66f4\u9ad8\u7684\u541e\u5410\u91cf\u3002</li> <li> <p>\u5f53\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u9700\u8981 Docker Desktop \u4e0a\u5b8c\u5168\u672c\u673a\u6587\u4ef6\u7cfb\u7edf\u884c\u4e3a\u65f6\u3002\u4f8b\u5982\uff0c\u6570\u636e\u5e93\u5f15\u64ce\u9700\u8981\u7cbe\u786e\u63a7\u5236\u78c1\u76d8\u5237\u65b0\u4ee5\u4fdd\u8bc1\u4e8b\u52a1\u7684\u6301\u4e45\u6027\u3002\u5377\u5b58\u50a8\u5728 Linux VM \u4e2d\uff0c\u53ef\u4ee5\u505a\u51fa\u8fd9\u4e9b\u4fdd\u8bc1\uff0c\u800c\u7ed1\u5b9a\u5b89\u88c5\u5219\u8fdc\u7a0b\u5230 macOS \u6216 Windows\uff0c\u5176\u4e2d\u6587\u4ef6\u7cfb\u7edf\u7684\u884c\u4e3a\u7565\u6709\u4e0d\u540c\u3002</p> </li> <li> <p>\u7ed1\u5b9a\u6302\u8f7d\uff1a</p> </li> <li> <p>\u5c06\u914d\u7f6e\u6587\u4ef6\u4ece\u4e3b\u673a\u5171\u4eab\u5230\u5bb9\u5668\u3002\u8fd9\u5c31\u662f Docker \u9ed8\u8ba4\u4e3a\u5bb9\u5668\u63d0\u4f9b DNS \u89e3\u6790\u7684\u65b9\u5f0f\uff0c\u5373 <code>/etc/resolv.conf</code>\u4ece\u4e3b\u673a\u6302\u8f7d\u5230\u6bcf\u4e2a\u5bb9\u5668\u4e2d\u3002</p> </li> <li> <p>\u5728 Docker \u4e3b\u673a\u4e0a\u7684\u5f00\u53d1\u73af\u5883\u548c\u5bb9\u5668\u4e4b\u95f4\u5171\u4eab\u6e90\u4ee3\u7801\u6216\u6784\u5efa\u5de5\u4ef6\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5c06 Maven<code>target/</code> \u76ee\u5f55\u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\uff0c\u6bcf\u6b21\u5728 Docker \u4e3b\u673a\u4e0a\u6784\u5efa Maven \u9879\u76ee\u65f6\uff0c\u5bb9\u5668\u90fd\u53ef\u4ee5\u8bbf\u95ee\u91cd\u5efa\u7684\u5de5\u4ef6\u3002</p> <p>\u5982\u679c\u60a8\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u7528 Docker \u8fdb\u884c\u5f00\u53d1\uff0c\u60a8\u7684\u751f\u4ea7 Dockerfile \u4f1a\u5c06\u751f\u4ea7\u5c31\u7eea\u5de5\u4ef6\u76f4\u63a5\u590d\u5236\u5230\u6620\u50cf\u4e2d\uff0c\u800c\u4e0d\u662f\u4f9d\u8d56\u4e8e\u7ed1\u5b9a\u5b89\u88c5\u3002</p> </li> <li> <p>\u5f53\u4fdd\u8bc1Docker\u4e3b\u673a\u7684\u6587\u4ef6\u6216\u76ee\u5f55\u7ed3\u6784\u4e0e\u5bb9\u5668\u6240\u9700\u7684\u7ed1\u5b9a\u6302\u8f7d\u4e00\u81f4\u65f6\u3002</p> </li> </ul> <p>\u53e6\u5916\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0cDocker\u5bb9\u5668\u5c06\u4ea7\u751f\u7684\u6570\u636e\u5b58\u50a8\u5728\u5bb9\u5668\u7684\u53ef\u5199\u5c42\u4e2d\u3002\u8fd9\u79cd\u9ed8\u8ba4\u5b58\u50a8\u65b9\u5f0f\u4f1a\u589e\u52a0\u5bb9\u5668\u7684\u5927\u5c0f\uff0c\u800c\u4f7f\u7528\u6570\u636e\u5377\uff0c\u7531\u4e8e\u6570\u636e\u5377\u72ec\u7acb\u4e8e\u5bb9\u5668\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u6ee1\u8db3\u5b58\u50a8\u6570\u636e\u529f\u80fd\u7684\u60c5\u51b5\u4e0b\u4e0d\u5f71\u54cd\u5bb9\u5668\u7684\u5927\u5c0f\u3002</p> <p>\u5230\u8fd9\u91cc\u4f60\u5df2\u7ecf\u5bf9\u8fd9\u4e24\u79cd\u6280\u672f\u6709\u4e2a\u5927\u6982\u4e86\u89e3\u4e86\uff0c\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4e3b\u8981\u4ecb\u7ecd\u6570\u636e\u5377\u6280\u672f\u7684\u4f7f\u7528</p>"},{"location":"software_development/backend/DevOps/Docker/#_29","title":"\u7ed1\u5b9a\u6302\u8f7d","text":"<pre><code># \u6307\u5b9a\u5bbf\u4e3b\u673a\u76ee\u5f55\u6302\u8f7d\ndocker run -it -v \u4e3b\u673a\u76ee\u5f55:\u5bb9\u5668\u76ee\u5f55 --name \u5bb9\u5668\u540d \u955c\u50cf\u540d /bin/bash\n</code></pre>"},{"location":"software_development/backend/DevOps/Docker/#volumes","title":"\u6570\u636e\u5377(volumes)\u4f7f\u7528","text":"<p>\u6570\u636e\u5377\u7684\u4f7f\u7528\u6709\u4e24\u79cd\uff1a\u5177\u540d\u6302\u8f7d\uff0c\u533f\u540d\u6302\u8f7d</p> <p>\u53ef\u4e0e\u7ed1\u5b9a\u6302\u8f7d\u6280\u672f\u56fe\u5bf9\u6bd4\uff0cType\u4e0d\u540c\uff1a\u6570\u636e\u5377\u4e3avolume\uff0c\u7ed1\u5b9a\u6302\u8f7d\u4e3abind</p> <p></p>"},{"location":"software_development/backend/DevOps/Docker/#_30","title":"\u5177\u540d\u6302\u8f7d","text":"<pre><code># \u5177\u540d\u6302\u8f7d\ndocker run -it/-d -v \u6570\u636e\u5377\u540d\u5b57:\u5bb9\u5668\u76ee\u5f55 --name \u5bb9\u5668\u540d \u955c\u50cf\u540d /bin/bash\n</code></pre> <p>\u5982\u4e0b\u56fe\uff0c\u5377\u540d\u4e3anginx_dic</p> <p></p>"},{"location":"software_development/backend/DevOps/Docker/#_31","title":"\u533f\u540d\u6302\u8f7d","text":"<pre><code># \u533f\u540d\u6302\u8f7d\ndocker run -it/-d -v \u5bb9\u5668\u76ee\u5f55 --name \u5bb9\u5668\u540d \u955c\u50cf\u540d /bin/bash\n</code></pre> <p>\u5982\u4e0b\u56fe\uff0c\u533f\u540d\u6302\u8f7d\u540e\u51fa\u73b0\u4e86\u957f\u5b57\u7b26\u4e32\u7ec4\u6210\u7684\u5377\u540d</p> <p></p>"},{"location":"software_development/backend/DevOps/Docker/#docker_9","title":"Docker\u8fdb\u9636\u4f7f\u7528","text":""},{"location":"software_development/backend/DevOps/Docker/#dockerfile","title":"Dockerfile","text":"<p>\u4e07\u5b57\u957f\u6587\u5e26\u4f60\u770b\u5168\u7f51\u6700\u8be6\u7ec6Dockerfile\u6559\u7a0b-\u817e\u8baf\u4e91\u5f00\u53d1\u8005\u793e\u533a-\u817e\u8baf\u4e91 (tencent.com)</p>"},{"location":"software_development/backend/Project/project_knowledge/","title":"\u5de5\u7a0b\u95ee\u9898","text":""},{"location":"software_development/backend/Project/project_knowledge/#ab","title":"\u5047\u8bbe\u4e24\u53f0\u670d\u52a1\u5668\uff0c\u4f60\u7a81\u7136\u53d1\u73b0\u670d\u52a1\u5668A\u770b\u4e0d\u5230\u670d\u52a1\u5668B\u7684\u7f51\u9875\uff0c\u4f60\u4f1a\u5982\u4f55\u5904\u7406","text":"<p>https://xiaolincoding.com/interview/network.html#\u7f51\u9875\u975e\u5e38\u6162\u8f6c\u5708\u5708\u7684\u65f6\u5019-\u8981\u5b9a\u4f4d\u95ee\u9898\u9700\u8981\u4ece\u54ea\u4e9b\u89d2\u5ea6</p> <p>\u6211\u4eec\u6309\u7167\u8ba1\u7f51\u56db\u5c42\u6a21\u578b\u8fdb\u884c\u601d\u8003</p> <ul> <li> <p>IP\u5c42\u9762\uff1a\u6d4b\u8bd5\u7f51\u7edc\u662f\u5426\u8fde\u901a\u3002ping\u4e00\u4e0b\u670d\u52a1\u5668B\u7684ip\u5730\u5740</p> </li> <li> <p>TCP\u5c42\u9762\uff1a\u5982\u679c\u80fdping\u901a\uff0c\u8bf4\u660e\u670d\u52a1\u5668\u7f51\u7edc\u8fde\u63a5\u6b63\u5e38\u3002\u63a5\u4e0b\u6765\u6d4b\u8bd5\u7aef\u53e3\uff0c\u4f7f\u7528telnet + ip\u5730\u5740 + \u7aef\u53e3\uff0c\u5982\u679c\u8fde\u4e0d\u4e0a\uff0c\u53ef\u80fd\u662f\u7aef\u53e3\u7684\u95ee\u9898</p> </li> <li> <p>\u67e5\u770b\u670d\u52a1\u5668\u662f\u5426\u6709\u9632\u706b\u5899\u62e6\u622a\uff0c\u5982\u679c\u9632\u706b\u5899\u62e6\u622a\uff0c\u8bf4\u660e\u9700\u8981\u653e\u884c\u7aef\u53e3</p> </li> <li> <p>HTTP\u5c42\u9762\uff1a\u4f7f\u7528wireshark\u6216tcpdump\u6293\u5305\u5206\u6790\uff0c\u4e3b\u8981\u770b\u7684\u662f\u5e8f\u53f7</p> </li> </ul> <p>\u53c2\u8003https://blog.csdn.net/qq_38658567/article/details/108786826</p>"},{"location":"software_development/backend/Project/project_knowledge/#_2","title":"\u6162\u67e5\u8be2\u5b9a\u4f4d\u548c\u4f18\u5316","text":"<p>https://mp.weixin.qq.com/s/sL64uQP0iHKxkMFx1QGLkg</p> <ol> <li>\u5f00\u542f\u6162\u67e5\u8be2\u65e5\u5fd7</li> <li>\u6162\u67e5\u8be2\u65e5\u5fd7\u8bb0\u5f55\u67e5\u8be2\u65f6\u95f4\u8d85\u8fc7\u7ea6\u5b9a\u65f6\u95f4\u7684sql\u8bed\u53e5</li> <li>\u5728\u6162\u67e5\u8be2\u65e5\u5fd7sql\u8bed\u53e5\u524d\u52a0\u4e0aexplain\u67e5\u770b\u6267\u884c\u8ba1\u5212</li> <li>\u5b9a\u4f4dsql\u6027\u80fd\u7684\u4e3b\u8981\u6307\u6807\uff1atype\uff0cpossible_keys, key, key_len,extra</li> </ol>"},{"location":"software_development/backend/Project/project_knowledge/#_3","title":"\u9ad8\u5e76\u53d1","text":""},{"location":"software_development/backend/Project/project_knowledge/#_4","title":"\u5047\u8bbe\u4e24\u4e2a\u7ebf\u7a0b\u60f3\u8981\u8bfb\u53d6\u540c\u4e00\u6761\u8bb0\u5f55\uff0c\u5982\u679c\u8bfb\u53d6\u4e0d\u5230\u5c31\u66f4\u65b0\u8bb0\u5f55\uff0c\u5982\u679c\u8bfb\u53d6\u5230\u5c31\u4e0d\u66f4\u65b0\uff0c\u4f60\u8be5\u5982\u4f55\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u5e76\u53d1","text":"<p>\u901a\u5e38\u6211\u4eec\u7b2c\u4e00\u53cd\u5e94\u662f\u52a0\u9501\uff0c\u4f8b\u5982\u4f7f\u7528select ... for update\u53ef\u4ee5\u7ed9\u67e5\u8be2\u7684\u6570\u636e\u884c\u52a0\u4e0anext-key lock\u8fdb\u884c\u9501\u5b9a\uff0c</p> <p>\u4e50\u89c2\u9501\uff1a\u5047\u8bbe\u6700\u597d\u7684\u60c5\u51b5\uff0c\u8ba4\u4e3a\u5171\u4eab\u8d44\u6e90\u88ab\u8bbf\u95ee\u65f6\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u7ebf\u7a0b\u53ef\u4ee5\u4e0d\u505c\u5730\u6267\u884c\uff0c\u65e0\u9700\u52a0\u9501\uff0c\u4e5f\u65e0\u9700\u7b49\u5f85\uff0c\u53ea\u662f\u5728\u63d0\u4ea4\u4fee\u6539\u7684\u65f6\u5019\u53bb\u9a8c\u8bc1\u5bf9\u5e94\u7684\u8d44\u6e90\u662f\u5426\u88ab\u5176\u4ed6\u7ebf\u7a0b\u4fee\u6539\u4e86\u3002</p> <ul> <li>\u7248\u672c\u53f7\u673a\u5236</li> <li>CAS\u7b97\u6cd5</li> </ul> <p>\u60b2\u89c2\u9501\uff1a\u8ba4\u4e3a\u5171\u4eab\u8d44\u6e90\u6bcf\u6b21\u88ab\u8bbf\u95ee\u65f6\u90fd\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u6240\u4ee5\u6bcf\u6b21\u8bbf\u95ee\u8d44\u6e90\u90fd\u4f1a\u4e0a\u9501\u3002\u5373\uff1a\u5171\u4eab\u8d44\u6e90\u6bcf\u6b21\u53ea\u7ed9\u4e00\u4e2a\u7ebf\u7a0b\u4f7f\u7528\uff0c\u5176\u4ed6\u7ebf\u7a0b\u963b\u585e\uff0c\u7528\u5b8c\u518d\u628a\u8d44\u6e90\u8f6c\u8ba9\u7ed9\u5176\u4ed6\u7ebf\u7a0b</p> <p>\u9ad8\u5e76\u53d1\u7684\u573a\u666f\u4e0b\uff0c\u60b2\u89c2\u9501\u4f1a\u9020\u6210\u7ebf\u7a0b\u963b\u585e\uff0c\u5927\u91cf\u963b\u585e\u7ebf\u7a0b\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u7684\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u800c\u4e14\u8fd8\u53ef\u80fd\u5b58\u5728\u6b7b\u9501\u95ee\u9898</p> <p>\u4e50\u89c2\u9501\u4e0d\u5b58\u5728\u9501\u7ade\u4e89\u9020\u6210\u7ebf\u7a0b\u963b\u585e\uff0c\u4e0d\u4f1a\u6709\u6b7b\u9501\u95ee\u9898\uff0c\u6027\u80fd\u66f4\u597d\u3002\u4f46\u662f\u5982\u679c\u5199\u6b21\u6570\u8f83\u591a\uff0c\u51b2\u7a81\u9891\u7e41\u53d1\u751f\uff0c\u540c\u6837\u4f1a\u5f71\u54cd\u6027\u80fd\uff0c\u5bfc\u81f4CPU\u98d9\u5347</p> <p>\u60b2\u89c2\u9501\u7528\u4e8e\u5199\u6bd4\u8f83\u591a\u7684\u60c5\u51b5</p> <p>\u4e50\u89c2\u9501\u7528\u4e8e\u5199\u6bd4\u8f83\u5c11\u7684\u60c5\u51b5</p>"},{"location":"software_development/backend/Project/%E9%80%B8%E4%BB%99%E4%B8%9C%E5%8D%8E/project_review/","title":"Backend notice","text":"<p>\u672c\u6587\u6863\u4ecb\u7ecd\u540e\u7aef\u5f00\u53d1\u4e2d\u9047\u5230\u7684\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6cd5/\u7ecf\u9a8c</p>"},{"location":"software_development/backend/Project/%E9%80%B8%E4%BB%99%E4%B8%9C%E5%8D%8E/project_review/#topic-1","title":"Topic 1: \u52a0\u6c34\u5370","text":""},{"location":"software_development/backend/Project/%E9%80%B8%E4%BB%99%E4%B8%9C%E5%8D%8E/project_review/#problem-1","title":"Problem 1: \u52a0\u6c34\u5370\u5927\u5c0f\u81ea\u9002\u5e94\u95ee\u9898","text":"<p>\u5b9e\u73b0\u52a0\u6c34\u5370\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\u7528\u6237\u7684\u6587\u4ef6\u9875\u9762\u5927\u5c0f\u4e0d\u4e00\uff08\u6bd4\u5982\u5728\u540c\u4e00\u4e2apdf\u4e2d\uff0c\u5b58\u5728\u9875\u9762\u975e\u5e38\u5927\u7684\u5c01\u9762\u9875\u548c\u9875\u9762\u6b63\u5e38\u7684\u5185\u5bb9\u4e5f\uff09\uff0c\u4e0d\u80fd\u4ec5\u4ec5\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u6c34\u5370\u9875\u9762\u9002\u7528\u4e8e\u6240\u6709\u9875\u9762\uff0c\u5426\u5219\u4f1a\u9020\u6210\u6c34\u5370\u4f4d\u7f6e\u504f\u79fb\u7b49\u6c34\u5370\u6548\u679c\u4e0d\u597d\u7684\u60c5\u51b5</p> <p>\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5c1d\u8bd5\u4e86\u591a\u4e2a\u529e\u6cd5</p>"},{"location":"software_development/backend/Project/%E9%80%B8%E4%BB%99%E4%B8%9C%E5%8D%8E/project_review/#solution-1pdf","title":"Solution 1\uff1a\u5355\u7ebf\u7a0b\u521b\u5efa\u81ea\u9002\u5e94pdf","text":"<p>\u76f8\u5173\u4ee3\u7801\u5728<code>create_watermark_adapted_singleThread</code>\u548c<code>add_watermark_file_singleThread</code></p> <p>\u6211\u4eec\u5c1d\u8bd5\u521b\u5efa\u4e00\u4e2a\u591a\u9875\u7684\u6c34\u5370pdf\uff0c\u8be5pdf\u6bcf\u4e00\u9875\u7684\u5927\u5c0f\u4e0e\u5bf9\u5e94\u8f93\u5165pdf\u7684\u6bcf\u4e00\u9875\u5927\u5c0f\u76f8\u540c\uff0c\u4ece\u800c\u5b9e\u73b0\u81ea\u9002\u5e94</p> <p>\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a</p> <p>\u601d\u8def\u4e3a\uff1a\u5c06\u591a\u4e2a\u6c34\u5370\u9875\u9762\u5408\u5e76\u5728\u4e00\u4e2apdf\u5185</p> <pre><code>    for i in range(pageNum):\n        page = pdf_input.getPage(i)\n        page_width = float(page.mediaBox.getWidth())\n        page_height = float(page.mediaBox.getHeight())\n        pageSize=(page_width,page_height)\n        pdf_watermark_data=create_watermark(content,pageSize)\n        pdf_watermark_singleFile = PdfFileReader(BytesIO(pdf_watermark_data), strict=False)\n        pdf_watermark_singleFilePage = pdf_watermark_singleFile.getPage(0)\n        pdf_watermark_singleFilePage.compressContentStreams()\n        pdf_watermark_file.addPage(pdf_watermark_singleFilePage)\n</code></pre>"},{"location":"software_development/backend/Project/%E9%80%B8%E4%BB%99%E4%B8%9C%E5%8D%8E/project_review/#problem-2","title":"Problem 2\uff1a\u52a0\u6c34\u5370\u8fc7\u6162","text":"<p>\u89e3\u6cd51\u80fd\u89e3\u51b3\u81ea\u9002\u5e94\u6c34\u5370\u9875\u9762\u95ee\u9898\uff0c\u4f46\u4f1a\u9020\u6210\u52a0\u6c34\u5370\u901f\u5ea6\u8fc7\u6162\uff0c\u4e8e\u662f\u6211\u4eec\u60f3\u901a\u8fc7\u591a\u7ebf\u7a0b\u52a0\u901f</p>"},{"location":"software_development/backend/Project/%E9%80%B8%E4%BB%99%E4%B8%9C%E5%8D%8E/project_review/#solution-2pdf","title":"Solution 2\uff1a\u591a\u7ebf\u7a0b\u521b\u5efa\u81ea\u9002\u5e94pdf","text":"<p>\u76f8\u5173\u4ee3\u7801\u5728<code>create_watermark_adapted_multiThread</code>\u548c<code>add_watermark_file_multiThread</code></p> <p>\u6211\u4eec\u901a\u8fc7\u521b\u5efa\u7ebf\u7a0b\u6c60\uff0c\u5bf9\u521b\u5efa\u6c34\u5370\u7684\u884c\u4e3a\u8fdb\u884c\u5e76\u884c\u64cd\u4f5c</p> <pre><code>page_results=pool.map(create_watermark_adapted_multiThread,content_list,page_list)  \n</code></pre> <p>\u9057\u61be\u7684\u662f\uff0c\u6211\u4eec\u53d1\u73b0\u7ebf\u7a0b\u6c60\u5e76\u4e0d\u4f1a\u663e\u8457\u52a0\u901f\u52a0\u6c34\u5370\uff08\u4ec5\u4ec5\u52a0\u901f\u4e863s\uff0c\u5bf9\u4e8e60s\u7684\u603b\u65f6\u95f4\u6765\u8bf4\u663e\u7136\u4e0d\u591f\uff09</p> <p>\u901a\u8fc7\u6d4b\u901f\uff0c\u6211\u4eec\u53d1\u73b0\u65f6\u95f4\u4e3b\u8981\u6d88\u8017\uff1a\u5c06\u6c34\u5370\u6587\u4ef6\u548c\u8f93\u5165\u6587\u4ef6\u5408\u5e76\u7684\u64cd\u4f5c\u4e2d\u7684addPage\u51fd\u6570\uff0c\u7531\u4e8e\u9700\u8981\u4fdd\u969c\u8f93\u51fa\u6587\u4ef6\u7684\u6709\u5e8f\u6027\uff0caddPage\u65e0\u6cd5\u907f\u514d\uff0c\u56e0\u6b64\u6211\u4eec\u4e5f\u653e\u5f03\u4e86\u8fd9\u79cd\u65b9\u6cd5</p>"},{"location":"software_development/backend/Project/%E9%80%B8%E4%BB%99%E4%B8%9C%E5%8D%8E/project_review/#solution-3","title":"Solution 3\uff1a\u53ea\u8003\u8651\u4e24\u79cd\u60c5\u51b5","text":"<p>\u76f8\u5173\u4ee3\u7801\u5728<code>create_watermark</code></p> <p>\u76f8\u6bd4\u4e8e\u4e4b\u524d\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u6700\u540e\u4e3a\u4e86\u7f29\u77ed\u4e0b\u8f7d\u65f6\u95f4\u9009\u62e9\u4e86\u4e0d\u90a3\u4e48\u5168\u9762\u7684\u89e3\u6cd5\uff1a\u6211\u4eec\u6682\u65f6\u53ea\u8003\u8651\u4e24\u79cd\u60c5\u51b5\uff08\u4e66\u7c4dPDF\u548c\u666e\u901aPDF\uff09</p> <p>\u4e66\u7c4dPDF\u6709\u4e2a\u663e\u8457\u7279\u70b9\uff1a\u524d\u4e24\u9875\u4e3a\u5c01\u9762\u9875\uff0c\u9875\u9762\u6bd4\u8f83\u5927\uff1b\u540e\u9762\u4e3a\u5185\u5bb9\u9875\uff0c\u9875\u9762\u6bd4\u8f83\u5c0f</p> <p>\u666e\u901aPDF\u5219\u5168\u90e8\u9875\u9762\u5927\u5c0f\u90fd\u76f8\u540c</p> <p>\u56e0\u6b64\u6211\u4eec\u7528\u4ee5\u4e0b\u4ee3\u7801\u89e3\u51b3\u4ee5\u4e0a\u4e24\u79cd\u60c5\u51b5\uff1a</p> <p>\u6211\u4eec\u53ea\u53d6\u7b2c\u4e00\u9875\u548c\u7b2c\u4e09\u9875\uff0c\u5bf9\u5176\u5927\u5c0f\u8fdb\u884c\u6bd4\u8f83\uff0c\u53d6\u6700\u5c0f\u9875\u9762\u5927\u5c0f\uff0c\u4ece\u800c\u5b9e\u73b0\u6c34\u5370\u517c\u5bb9</p> <p>\u7531\u4e8e\u6c34\u5370\u6587\u4ef6\u53ea\u6709\u4e00\u9875\uff0c\u6240\u4ee5\u5927\u5927\u7f29\u77ed\u4e86\u52a0\u6c34\u5370\u7684\u65f6\u95f4</p> <pre><code># \u83b7\u5f97\u5c01\u9762\u9875\u5c3a\u5bf8\n    page = pdf_input.getPage(0)\n    page_width = float(page.mediaBox.getWidth())\n    page_height = float(page.mediaBox.getHeight())\n    pageSize=(page_width,page_height)\n\n    if pageNum &gt; 3:\n        page = pdf_input.getPage(0)\n        page_width = min(page_width,float(page.mediaBox.getWidth()))\n        page_height = min(page_height,float(page.mediaBox.getHeight()))\n        pageSize=(page_width,page_height)\n</code></pre>"},{"location":"software_development/backend/Project/%E9%80%B8%E4%BB%99%E4%B8%9C%E5%8D%8E/project_review/#solution-4-lru","title":"Solution 4: LRU\u4f18\u5316\u4e0b\u8f7d","text":"<p>\u6211\u4eec\u53d1\u73b0\u4e0b\u8f7d\u6587\u4ef6\u4e5f\u662f\u4e2a\u975e\u5e38\u8017\u65f6\u7684\u8fc7\u7a0b\uff0c\u4f46\u8fd9\u4e2a\u4e3b\u8981\u662f\u56e0\u4e3a\u7f51\u901f\u592a\u6162\u3002\u4e3a\u4e86\u4f18\u5316\u4e0b\u8f7d\u7684\u65f6\u95f4\uff0c\u6211\u4eec\u9009\u62e9\u4f7f\u7528LRU\u7b97\u6cd5\u5b9e\u73b0\u4e0b\u8f7dAPI\u3002</p> <p>LRU\u539f\u7406\u5982\u4e0b\u94fe\u63a5\uff1a</p> <p>\u5168\u9762\u8bb2\u89e3LRU\u7b97\u6cd5-CSDN\u535a\u5ba2</p>"},{"location":"software_development/backend/Project/%E9%80%B8%E4%BB%99%E4%B8%9C%E5%8D%8E/project_review/#solution-5","title":"Solution 5: \u7b49\u4f60\u89e3\u51b3","text":"<p>\u770b\u770b\u540e\u6765\u4eba\u6709\u6ca1\u6709\u529e\u6cd5\u80fd\u591f\u66f4\u597d\u5730\u89e3\u51b3</p>"},{"location":"software_development/backend/Project/%E9%80%B8%E4%BB%99%E4%B8%9C%E5%8D%8E/project_review/#topic-2exception","title":"Topic 2\uff1a<code>Exception</code>","text":""},{"location":"software_development/backend/Project/%E9%80%B8%E4%BB%99%E4%B8%9C%E5%8D%8E/project_review/#problem","title":"Problem\uff1a","text":"<p>\u5982\u679c\u6309\u4e0b\u9762\u4ee3\u7801\u6267\u884c\uff0c\u4f1a\u51fa\u73b0\u76f4\u63a5\u89e6\u53d1<code>except Exception as e</code>\u4e2d\u7684<code>Exception</code>\uff0c\u5bfc\u81f4\u65e0\u6cd5\u663e\u793a\u6b63\u786e\u7684\u62a5\u9519\u4fe1\u606f</p> <pre><code>    try:\n            bucket_name = BUCKET_NAME\n            # \u8bfb\u53d6\u8981\u52a0\u6c34\u5370\u7684\u6587\u4ef6\n            pdf_data = minio_messenger.download(bucket_name, fuuid).read()\n            if pdf_data is None:\n                raise response_400(data='\u4e0b\u8f7d\u6587\u4ef6\u5931\u8d25') \n            pdf_size = len(pdf_data)\n\n            pdf_input = PdfFileReader(BytesIO(pdf_data), strict=False)\n            if pdf_input is None:\n                raise response_400(data='\u4e0b\u8f7d\u6587\u4ef6\u8bfb\u53d6\u5931\u8d25') \n\n            # \u7f16\u8f91\u6c34\u5370\u5185\u5bb9\n            mark_content = current_user.nickName+current_user.phone\n\n            if pdf_size &lt;= ignore_watermark*1024*1024:\n                # \u521b\u5efa\u6c34\u5370\n                create_watermark(pdf_input,mark_content,fuuid,current_user.SNo)                              \n                return response_200(data='\u6c34\u5370\u5df2\u6dfb\u52a0')\n            else:\n                # \u5bf9\u8f93\u51fa\u6587\u4ef6\u547d\u540d\n                output_filename = f'{fuuid}_{current_user.SNo}_output.pdf'\n                output_filepath = os.path.join(os.path.dirname(__file__), f'../../watermark/{output_filename}')\n                with open(output_filepath,'wb') as output_file:\n                    # \u5c06 PdfFileWriter \u4e2d\u7684\u9875\u9762\u5199\u5165\u5230 BytesIO \u5bf9\u8c61\n                    output_file.write(pdf_data)\n                return response_200(data='\u4e0d\u9700\u8981\u6dfb\u52a0\u6c34\u5370')\n    except Exception as e:\n        raise response_400(data = str(e))\n</code></pre> <p>\u4f8b\u5982\uff1a</p> <pre><code>pdf_data = minio_messenger.download(bucket_name, fuuid).read()\n    if pdf_data is None:\n       raise response_400(data='\u4e0b\u8f7d\u6587\u4ef6\u5931\u8d25') \n</code></pre> <p>\u5982\u679cdownload\u5931\u8d25\u4e0d\u4f1a\u8fd4\u56de\u9519\u8bef\u4fe1\u606f'\u4e0b\u8f7d\u6587\u4ef6\u5931\u8d25'\uff0c\u800c\u662f\u76f4\u63a5\u8fd4\u56de\u7cfb\u7edf\u81ea\u5df1\u62a5\u7684\u9519\u8bef\uff08\u901a\u5e38\u662f\u82f1\u6587\uff09\uff0c\u8868\u793a\u6ca1\u6709\u6210\u529fraise response</p>"},{"location":"software_development/backend/Project/%E9%80%B8%E4%BB%99%E4%B8%9C%E5%8D%8E/project_review/#solution","title":"Solution\uff1a","text":"<p>\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a\u6355\u83b7\u81ea\u5b9a\u4e49<code>HTTPException</code>\u7684\u4ee3\u7801\uff0c\u5f53\u4ee3\u7801\u9047\u5230\u7279\u5b9a\u5224\u65ad\u65f6\uff0c\u4f1araise response\uff08response\u6838\u5fc3\u662f\u8fd4\u56de<code>HTTPException</code>\uff09\uff0c\u6240\u4ee5\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u6355\u83b7response\uff0c\u7136\u540e\u5c06\u5176\u8fd4\u56de\u8fd9\u4e2aresponse</p> <p>\u5982\u679c\u6309\u4e0a\u9762Problem\u7684\u5199\u6cd5\uff0c\u4f1a\u5bfc\u81f4<code>Exception</code>\u91cc\u9762\u6709<code>response_400</code>\uff0c\u81ea\u7136\u4e0d\u4f1a\u62a5<code>response_400</code></p> <pre><code>    # \u4e0d\u62e6\u622a\u81ea\u5b9a\u4e49\u7684HTTPException\n    except HTTPException as e:\n        raise e\n</code></pre> <p>\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>    try:\n            bucket_name = BUCKET_NAME\n            # \u8bfb\u53d6\u8981\u52a0\u6c34\u5370\u7684\u6587\u4ef6\n            pdf_data = minio_messenger.download(bucket_name, fuuid).read()\n            if pdf_data is None:\n                raise response_400(data='\u4e0b\u8f7d\u6587\u4ef6\u5931\u8d25') \n            pdf_size = len(pdf_data)\n\n            pdf_input = PdfFileReader(BytesIO(pdf_data), strict=False)\n            if pdf_input is None:\n                raise response_400(data='\u4e0b\u8f7d\u6587\u4ef6\u8bfb\u53d6\u5931\u8d25') \n\n            # \u7f16\u8f91\u6c34\u5370\u5185\u5bb9\n            mark_content = current_user.nickName+current_user.phone\n\n            if pdf_size &lt;= ignore_watermark*1024*1024:\n                # \u521b\u5efa\u6c34\u5370\n                create_watermark(pdf_input,mark_content,fuuid,current_user.SNo)                              \n                return response_200(data='\u6c34\u5370\u5df2\u6dfb\u52a0')\n            else:\n                # \u5bf9\u8f93\u51fa\u6587\u4ef6\u547d\u540d\n                output_filename = f'{fuuid}_{current_user.SNo}_output.pdf'\n                output_filepath = os.path.join(os.path.dirname(__file__), f'../../watermark/{output_filename}')\n                with open(output_filepath,'wb') as output_file:\n                    # \u5c06 PdfFileWriter \u4e2d\u7684\u9875\u9762\u5199\u5165\u5230 BytesIO \u5bf9\u8c61\n                    output_file.write(pdf_data)\n                return response_200(data='\u4e0d\u9700\u8981\u6dfb\u52a0\u6c34\u5370')\n    # \u4e0d\u62e6\u622a\u81ea\u5b9a\u4e49\u7684HTTPException\n    except HTTPException as e:\n        raise e\n    # \u62e6\u622a\u9884\u6599\u4e4b\u5916\u7684\u5f02\u5e38\n    except Exception as e:\n        raise response_400(data = str(e))\n</code></pre>"},{"location":"software_development/backend/Project/%E9%80%B8%E4%BB%99%E4%B8%9C%E5%8D%8E/project_review/#topic-3es-search","title":"Topic 3\uff1a<code>ES search</code>","text":""},{"location":"software_development/backend/Project/%E9%80%B8%E4%BB%99%E4%B8%9C%E5%8D%8E/project_review/#problem-mustshould","title":"Problem: must\u548cshould\u51b2\u7a81","text":"<p>\u8fd9\u662f\u4e00\u5f00\u59cb\u7684\u5199\u6cd5</p> <p>\u6211\u4eec\u53d1\u73b0\u641c\u7d22\u7684\u65f6\u5019\u53ea\u6ee1\u8db3\u4e86must\u7684\u6761\u4ef6\uff0c\u800cshould\u4f3c\u4e4e\u88ab\u5ffd\u7565\u4e86</p> <pre><code>body = {\n                # \u5f53\u524d\u9875\u6570\u636e\u7684\u8d77\u59cb\u4f4d\u7f6e=\u9875\u7801\uff08\u4ece0\u5f00\u59cb\uff09*\u6bcf\u9875\u6570\u636e\u6761\u6570\n                \"from\": page*10,\n                # \u6bcf\u9875\u67e5\u8be2\u7684\u6570\u636e\u6761\u6570\n                \"size\": 10, \n                \"query\": {\n                    \"bool\": {\n                        \"must\": [\n                            { \"term\": {\"fCate\": type } }\n                        ]                \n                        \"should\": [ \n                             { \"match\": {\"fName\": keyword } },\n                             { \"match\": {\"fIntro\": keyword } },\n                             { \"match\": {\"fTag\": keyword } }\n                        ]}\n                    }\n                }\n</code></pre> <p>\u67e5\u7f51\u53d1\u73b0\uff0cmust\u548cshould\u4e0d\u80fd\u540c\u7ea7\uff0c\u6b63\u5982<code>a==1&amp;&amp;b==1||b==2</code>\u4e0d\u80fd\u7528\u4e8e\u8868\u793a\u201c\u6ee1\u8db3a==1\u7684\u524d\u63d0\u4e0b\uff0cb\u53d61\u62162\u201d\uff0c\u800c\u662f\u6539\u4e3a<code>a==1&amp;&amp;(b==1||b==2)</code>\uff1b</p> <p>\u5373must\u548cshould\u4e0d\u80fd\u540c\u7ea7\u6b63\u5982&amp;&amp;\u548c||\u4e0d\u80fd\u540c\u7ea7</p>"},{"location":"software_development/backend/Project/%E9%80%B8%E4%BB%99%E4%B8%9C%E5%8D%8E/project_review/#solution_1","title":"Solution","text":"<pre><code>body = {\n                # \u5f53\u524d\u9875\u6570\u636e\u7684\u8d77\u59cb\u4f4d\u7f6e=\u9875\u7801\uff08\u4ece0\u5f00\u59cb\uff09*\u6bcf\u9875\u6570\u636e\u6761\u6570\n                \"from\": page*10,\n                # \u6bcf\u9875\u67e5\u8be2\u7684\u6570\u636e\u6761\u6570\n                \"size\": 10, \n                \"query\": {\n                    \"bool\": {\n                        \"must\": [\n                            { \"term\": {\"fCate\": type } },\n                            {\n                                \"bool\":{\n                                    \"should\": [ \n                                        { \"match\": {\"fName\": keyword } },\n                                        { \"match\": {\"fIntro\": keyword } },\n                                        { \"match\": {\"fTag\": keyword } }\n                                ]}\n                            }\n                        ]                \n                    }\n                }\n</code></pre>"},{"location":"software_development/backend/language/C%2B%2B/","title":"C++","text":""},{"location":"software_development/backend/language/C%2B%2B/#_1","title":"\u9762\u5411\u5bf9\u8c61","text":"<p>\u9762\u5411\u5bf9\u8c61\u57fa\u672c\u4e09\u8981\u7d20\uff1a\u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001</p> <ul> <li>\u5c01\u88c5\uff1a\u9690\u85cf\u5bf9\u8c61\u5185\u90e8\u7ec6\u8282\uff0c\u5b9e\u73b0\u6a21\u5757\u5316</li> <li>\u5b9e\u73b0\u65b9\u5f0f\uff1a\u901a\u8fc7\u63a7\u5236\u8bbf\u95ee\u6743\u9650public , protected,  private</li> <li>\u7ee7\u627f\uff1a\u901a\u8fc7\u7ee7\u627f\u5b9e\u73b0\u529f\u80fd\u7684\u6269\u5c55</li> <li>\u7ee7\u627f\u65b9\u5f0f\uff1apublic, protected, private\u63a7\u5236\u6700\u9ad8\u8bbf\u95ee\u6743\u9650</li> <li>\u63a5\u53e3\u7ee7\u627f\uff1a\u901a\u8fc7\u7eaf\u865a\u51fd\u6570\u5b9e\u73b0\u62bd\u8c61\u7c7b\uff0c\u62bd\u8c61\u7c7b\u5c31\u662f\u63a5\u53e3</li> <li>\u591a\u6001\uff1a\u4e00\u4e2a\u63a5\u53e3\uff0c\u591a\u79cd\u5f62\u6001</li> </ul> <p>\u9762\u5411\u8fc7\u7a0b\u548c\u9762\u5411\u5bf9\u8c61\u7684\u533a\u522b\u548c\u8054\u7cfb</p> <ul> <li>\u9762\u5411\u8fc7\u7a0b\uff1a\u5c06\u4e8b\u60c5\u5206\u89e3\u4e3a\u82e5\u5e72\u4e2a\u6b65\u9aa4\uff0c\u6bcf\u4e2a\u6b65\u9aa4\u7528\u51fd\u6570\u5b9e\u73b0\uff0c\u7136\u540e\u6309\u7167\u4e00\u5b9a\u7684\u987a\u5e8f\u6267\u884c\u51fd\u6570</li> <li>\u6d41\u7a0b\u5316\uff0c\u7f16\u7a0b\u6b65\u9aa4\u660e\u786e</li> <li>\u4ee3\u7801\u91cd\u7528\u6027\u4f4e\uff0c\u6269\u5c55\u80fd\u529b\u5dee</li> <li>\u9762\u5411\u5bf9\u8c61\uff1a\u5c06\u4e8b\u52a1\u62bd\u8c61\u4e3a\u5bf9\u8c61\uff0c\u7ed9\u5bf9\u8c61\u8d4b\u4e88\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u5c06\u4e8b\u60c5\u62c6\u5206\u6210\u4e0d\u540c\u6a21\u5757\uff0c\u6bcf\u4e2a\u6a21\u5757\u7531\u5bf9\u5e94\u7684\u5bf9\u8c61\u6267\u884c\u76f8\u5e94\u7684\u52a8\u4f5c</li> <li>\u4ee3\u7801\u91cd\u7528\u7387\u9ad8\uff0c\u6269\u5c55\u80fd\u529b\u597d</li> <li>\u4f4e\u8026\u5408\uff0c\u6613\u7ef4\u62a4</li> <li>\u5f00\u9500\u5927\uff08\u56e0\u4e3a\u8981\u589e\u52a0\u5f88\u591a\u65e0\u7528\u7684\u6216\u8005\u53ea\u8d1f\u8d23\u8bfbor\u5199\u7684\u64cd\u4f5c\uff09</li> <li>\u6027\u80fd\u5dee\uff08\u589e\u52a0\u4e86\u591a\u5c42\u903b\u8f91\u62bd\u8c61\uff09</li> </ul>"},{"location":"software_development/backend/language/C%2B%2B/#_2","title":"\u591a\u6001\u5b9e\u73b0\u539f\u7406","text":""},{"location":"software_development/backend/language/C%2B%2B/#_3","title":"\u9759\u6001\u7ed1\u5b9a","text":"<p>\u51fd\u6570\u91cd\u8f7d\uff0c\u7f16\u8bd1\u65f6\u786e\u5b9a</p> <pre><code>// \u9759\u6001\u7ed1\u5b9a\n#include &lt;iostream&gt;\nusing namespace std;\n\nclass A{\npublic:\n    int sum(int a, int b){\n        return a + b;\n    }\n    double sum(double a, double b){\n        return a + b;\n    }\n};\n\nint main(){\n    A* a = new A();\n    cout &lt;&lt; a-&gt;sum(1,2) &lt;&lt; endl;\n    cout &lt;&lt; a-&gt;sum(3.2,4.0) &lt;&lt; endl;\n}\n</code></pre> <p><code>objdump -t \u7a0b\u5e8f\u540d</code>\u67e5\u770b\u7b26\u53f7\u8868</p> <p> </p> <p>\u7531\u4e0a\u56fe\u53ef\u89c1\uff0csum\u51fd\u6570\u540d\u7ecf\u4fee\u9970\u540e\u5206\u522b\u4e3a<code>__ZN1A3sumEdd</code>\u548c<code>__ZN1A3sumEii</code></p> <p>\u6570\u5b57\u4e3a\u5b57\u7b26\u957f\u5ea6\uff0cdd\u548cii\u5206\u522b\u5bf9\u5e94\u7c7b\u578b\u540d\u79f0</p>"},{"location":"software_development/backend/language/C%2B%2B/#_4","title":"\u52a8\u6001\u7ed1\u5b9a","text":"<p>\u53ef\u53c2\u8003\uff1ahttps://blog.csdn.net/qq_36359022/article/details/81870219</p> <p>\u8fd0\u884c\u65f6\u6839\u636e\u7c7b\u7684\u7c7b\u578b\u51b3\u5b9a\u51fd\u6570\u7684\u884c\u4e3a</p> <p>\u6bcf\u4e2a\u542b\u6709\u865a\u51fd\u6570\u7684\u7c7b\u90fd\u4f1a\u5728\u7f16\u8bd1\u9636\u6bb5\u7531\u7f16\u8bd1\u5668\u4e3a\u8be5\u7c7b\u521b\u5efa\u4e00\u4e2a\u865a\u51fd\u6570\u8868\uff0c\u5728\u7c7b\u8d77\u59cb\u4f4d\u7f6e\u5b58\u653e\u6307\u5411\u865a\u51fd\u6570\u8868\u5730\u5740\u7684\u6307\u9488vptr\uff0c\u8be5\u6307\u9488\u79f0\u4e3a\u865a\u51fd\u6570\u8868\u6307\u9488</p> <p>\u865a\u51fd\u6570\u8868\u662f\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\uff0c\u5143\u7d20\u4e3a\u865a\u51fd\u6570\u7684\u51fd\u6570\u6307\u9488</p> <p>\u5173\u7cfb\u68b3\u7406\u4e3a\uff1a</p> <pre><code>vptr \u4e3a\u865a\u51fd\u6570\u8868\u6307\u9488\n*vptr \u4e3a\u865a\u51fd\u6570\u8868\u5730\u5740\uff08\u865a\u51fd\u6570\u8868\u6570\u7ec4\u540d\uff09\n*vptr[0] \u4e3a\u865a\u51fd\u6570\u8868\u7b2c\u4e00\u4e2a\u5143\u7d20\n</code></pre> <p>\u5b50\u7c7b\u62f7\u8d1d\u57fa\u7c7b\u7684\u865a\u51fd\u6570\u8868\uff0c\u5bf9\u5176\u8fdb\u884c\u8986\u76d6\u91cd\u5199\uff0c\u5e76\u6dfb\u52a0\u81ea\u5df1\u7684\u865a\u51fd\u6570</p> <pre><code>// \u52a8\u6001\u7ed1\u5b9a\n#include &lt;iostream&gt;\nusing namespace std;\n\nclass Base{\npublic:\n    virtual void func(){\n        cout &lt;&lt; \"Base::func\" &lt;&lt; endl;\n    }\n};\n\nclass Derive: public Base{\npublic:\n    virtual void func(){\n        cout &lt;&lt; \"Derive::func\" &lt;&lt; endl;\n    }\n};\n\nint main(){\n    Base* basePtr = new Base();\n    Base* derivePtr = new Derive();\n    // long* \u662f\u7279\u6b8a\u7684\u6307\u9488\uff0c\u56e0\u4e3a\u6307\u9488\u662f8\u5b57\u8282\u7684\uff0clong\u4e5f\u662f8\u5b57\u8282\u7684\n    // \u6240\u4ee5long*\u53ef\u4ee5\u7528\u4e8e\u5b58\u653e\u6307\u9488\u7684\u6307\u9488\n\n    // \u7f16\u8bd1\u5668\u4f1a\u5728\u5bf9\u8c61\u5f00\u59cb\u7684\u4f4d\u7f6e\u653e\u7f6e\u4e2a\u6307\u5411\u8be5\u7c7b\u7684\u865a\u51fd\u6570\u8868\u6307\u9488vptr\n    // Step1 : (long*) basePtr\u5c06\u7c7b\u6307\u9488\u8f6c\u6362\u4e3along*\uff0c\u65b9\u4fbf\u53d6\u865a\u51fd\u6570\u8868\u6307\u9488\n    // Step2 : *(long*) basePtr\u5bf9\u7c7b\u6307\u9488\u89e3\u5f15\u7528\uff0c\u83b7\u53d6vptr\n    // Step3 : \u5c06vptr\u8f6c\u6362\u4e3along*\uff0c\u65b9\u4fbf\u4f7f\u7528\n    long*  base_vptr = (long*) * (long*) basePtr;\n    // \u5b9a\u4e49\u51fd\u6570\u6307\u9488\n    typedef void (*Func) (void);\n    Func base_func = (Func)base_vptr[0];\n    base_func();\n\n    long*  derive_vptr = (long*) * (long*) derivePtr;\n    Func derive_func = (Func)derive_vptr[0];\n    derive_func();\n\n    // basePtr-&gt;func();\n    // derivePtr-&gt;func();\n}\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c</p> <p></p>"},{"location":"software_development/backend/language/C%2B%2B/#_5","title":"\u5b9e\u6218","text":""},{"location":"software_development/backend/language/C%2B%2B/#_6","title":"\u6700\u7b80\u5355\u7684\u7f16\u8bd1\u547d\u4ee4","text":"<pre><code>g++ [option] source.cpp -o target.cpp\n</code></pre>"},{"location":"software_development/backend/language/Go/","title":"Go","text":""},{"location":"software_development/backend/language/Go/#go_1","title":"Go\u8bed\u8a00\u7279\u5f81","text":"<p>Go\u662f\u5f3a\u7c7b\u578b\u9759\u6001\u8bed\u8a00\uff08\u7f16\u8bd1\u8bed\u8a00\uff09</p> <p>\u5185\u5b58\u6d88\u8017\uff1a</p> <p>Java &gt;&gt; Go &gt; Rust/C/C++</p> <p>Go\u62e5\u6709\u8fd0\u884c\u65f6\uff0c\u7528\u4e8e\u5783\u573e\u56de\u6536\uff0c\u4f46\u662f\u8fd0\u884c\u65f6\u663e\u8457\u5c0f\u4e8eJava</p>"},{"location":"software_development/backend/language/Go/#helloworld","title":"Hello,world","text":"<pre><code>package main\n\nimport \"fmt\"\n\nfunc main(){\n    fmt.Println(\"Hello, world!\")\n}\n</code></pre> <p>\u4ee5\u4e0a\u4ee3\u7801\u8868\u660e\u4e86go\u7a0b\u5e8f\u6700\u57fa\u672c\u7684\u7ec4\u6210</p> <ul> <li><code>package</code>\u5173\u952e\u5b57\u8868\u793a\u5305\uff0cGo \u8bed\u8a00\u7684\u4ee3\u7801\u901a\u8fc7\u5305\uff08package\uff09\u7ec4\u7ec7\uff0cGo \u8bed\u8a00\u7684\u4ee3\u7801\u901a\u8fc7\u5305\uff08package\uff09\u7ec4\u7ec7\uff0c\u5305\u7c7b\u4f3c\u4e8e\u5176\u5b83\u8bed\u8a00\u91cc\u7684\u5e93\uff08libraries\uff09\u6216\u8005\u6a21\u5757\uff08modules\uff09\u3002\u4e00\u4e2a\u5305\u7531\u4f4d\u4e8e\u5355\u4e2a\u76ee\u5f55\u4e0b\u7684\u4e00\u4e2a\u6216\u591a\u4e2a <code>.go</code> \u6e90\u4ee3\u7801\u6587\u4ef6\u7ec4\u6210</li> <li><code>import</code>\u8868\u793a\u5bfc\u5165\u5916\u90e8\u5305\uff0c\u4e0d\u5141\u8bb8\u5bfc\u5165\u65e0\u7528\u7684\u5305</li> <li>\u8bed\u53e5\u7ed3\u5c3e\u4e0d\u9700\u8981\u5206\u53f7</li> </ul>"},{"location":"software_development/backend/language/Go/#go_2","title":"Go\u8bed\u8a00\u57fa\u7840","text":""},{"location":"software_development/backend/language/Go/#_1","title":"\u7a0b\u5e8f\u7ed3\u6784","text":""},{"location":"software_development/backend/language/Go/#_2","title":"\u547d\u540d","text":"<p>\u5927\u5199\u5b57\u6bcd\u5f00\u5934-&gt;\u53ef\u4ee5\u88ab\u5916\u90e8\u7684\u5305\u8bbf\u95ee</p> <p>\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934-&gt;\u4e0d\u53ef\u4ee5\u88ab\u5916\u90e8\u7684\u5305\u8bbf\u95ee</p> <p>\u9a7c\u5cf0\u5f0f</p>"},{"location":"software_development/backend/language/Go/#_3","title":"\u53d8\u91cf","text":"<p>\u770b\u51e0\u4e2a\u4f8b\u5b50\u5c31\u591f\u4e86</p>"},{"location":"software_development/backend/language/Go/#_4","title":"\u57fa\u672c\u4f7f\u7528","text":"<pre><code>package main\n\nimport \"fmt\"\n\n// var\u53ef\u7528\u4e8e\u5168\u5c40\u53d8\u91cf\nvar globalX1 = 101\n\nvar globalX2 string = \"abc\"\n\nfunc main(){\n    // var\u4e5f\u53ef\u7528\u4e8e\u5c40\u90e8\u53d8\u91cf\n    var partialX = 100\n    // :=\u53ea\u80fd\u7528\u4e8e\u5c40\u90e8\u53d8\u91cf\n    partialY := 120\n    fmt.Println(globalX1,globalX2,partialX,partialY)    \n}\n</code></pre> <p>\u591a\u4e2a\u53d8\u91cf\u58f0\u660e</p> <pre><code>package main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    var (\n        s1      = \"abc\"\n        s2      = \"world\"\n        integer = 123\n    )\n    fmt.Println(s1)\n    fmt.Println(s2)\n    fmt.Println(integer)\n}\n</code></pre> <p>\u53e6\u4e00\u4e2a\u521b\u5efa\u53d8\u91cf\u7684\u65b9\u6cd5\u662f\u8c03\u7528\u5185\u5efa\u7684new\u51fd\u6570\u3002\u8868\u8fbe\u5f0fnew(T)\u5c06\u521b\u5efa\u4e00\u4e2aT\u7c7b\u578b\u7684\u533f\u540d\u53d8\u91cf\uff0c\u521d\u59cb\u5316\u4e3aT\u7c7b\u578b\u7684\u96f6\u503c\uff0c\u7136\u540e\u8fd4\u56de\u53d8\u91cf\u5730\u5740\uff0c\u8fd4\u56de\u7684\u6307\u9488\u7c7b\u578b\u4e3a<code>*T</code>\u3002</p> <pre><code>p := new(int)   // p, *int \u7c7b\u578b, \u6307\u5411\u533f\u540d\u7684 int \u53d8\u91cf\nfmt.Println(*p) // \"0\"\n*p = 2          // \u8bbe\u7f6e int \u533f\u540d\u53d8\u91cf\u7684\u503c\u4e3a 2\nfmt.Println(*p) // \"2\"\n</code></pre> <p>\u7528new\u521b\u5efa\u53d8\u91cf\u548c\u666e\u901a\u53d8\u91cf\u58f0\u660e\u8bed\u53e5\u65b9\u5f0f\u521b\u5efa\u53d8\u91cf\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u9664\u4e86\u4e0d\u9700\u8981\u58f0\u660e\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u7684\u540d\u5b57\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528new(T)\u3002\u6362\u8a00\u4e4b\uff0cnew\u51fd\u6570\u7c7b\u4f3c\u662f\u4e00\u79cd\u8bed\u6cd5\u7cd6\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u65b0\u7684\u57fa\u7840\u6982\u5ff5\u3002</p>"},{"location":"software_development/backend/language/Go/#_5","title":"\u8fdb\u9636\u4f7f\u7528","text":"<p>\u4f8b1: \u7b26\u53f7:=\u4e3a\u53d8\u91cf\u58f0\u660e\u64cd\u4f5c\uff0c\u7b26\u53f7=\u4e3a\u53d8\u91cf\u8d4b\u503c\u64cd\u4f5c\uff08\u5c06\u53f3\u8fb9\u5404\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u8d4b\u503c\u7ed9\u5de6\u8fb9\u5bf9\u5e94\u4f4d\u7f6e\u7684\u5404\u4e2a\u53d8\u91cf\uff09</p> <pre><code>package main\n\nimport \"fmt\"\n\nfunc main(){\n    i := 1\n    j := 2\n    fmt.Println(i,j)\n    // \u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\n    i, j = j, i\n    fmt.Println(i,j)\n}\n\n//output\n//1 2\n//2 1\n</code></pre> <p>\u4f8b2:</p> <p>\u7b80\u77ed\u53d8\u91cf\u58f0\u660e\u5de6\u8fb9\u7684\u53d8\u91cf\u53ef\u80fd\u5e76\u4e0d\u662f\u5168\u90e8\u90fd\u662f\u521a\u521a\u58f0\u660e\u7684\u3002\u5982\u679c\u6709\u4e00\u4e9b\u5df2\u7ecf\u5728\u76f8\u540c\u7684\u8bcd\u6cd5\u57df\u58f0\u660e\u8fc7\u4e86\uff08\u00a72.7\uff09\uff0c\u90a3\u4e48\u7b80\u77ed\u53d8\u91cf\u58f0\u660e\u8bed\u53e5\u5bf9\u8fd9\u4e9b\u5df2\u7ecf\u58f0\u660e\u8fc7\u7684\u53d8\u91cf\u5c31\u53ea\u6709\u8d4b\u503c\u884c\u4e3a\u4e86\u3002</p> <p>\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u8bed\u53e5\u58f0\u660e\u4e86in\u548cerr\u4e24\u4e2a\u53d8\u91cf\u3002\u5728\u7b2c\u4e8c\u4e2a\u8bed\u53e5\u53ea\u58f0\u660e\u4e86out\u4e00\u4e2a\u53d8\u91cf\uff0c\u7136\u540e\u5bf9\u5df2\u7ecf\u58f0\u660e\u7684err\u8fdb\u884c\u4e86\u8d4b\u503c\u64cd\u4f5c\u3002</p> <pre><code>in, err := os.Open(infile)\n// ...\nout, err := os.Create(outfile)\n</code></pre> <p>\u7b80\u77ed\u53d8\u91cf\u58f0\u660e\u8bed\u53e5\u4e2d\u5fc5\u987b\u81f3\u5c11\u8981\u58f0\u660e\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5c06\u4e0d\u80fd\u7f16\u8bd1\u901a\u8fc7\uff1a</p> <pre><code>f, err := os.Open(infile)\n// ...\nf, err := os.Create(outfile) // compile error: no new variables\n</code></pre> <p>\u89e3\u51b3\u7684\u65b9\u6cd5\u662f\u7b2c\u4e8c\u4e2a\u7b80\u77ed\u53d8\u91cf\u58f0\u660e\u8bed\u53e5\u6539\u7528\u666e\u901a\u7684\u591a\u91cd\u8d4b\u503c\u8bed\u53e5\u3002</p> <p>\u7b80\u77ed\u53d8\u91cf\u58f0\u660e\u8bed\u53e5\u53ea\u6709\u5bf9\u5df2\u7ecf\u5728\u540c\u7ea7\u8bcd\u6cd5\u57df\u58f0\u660e\u8fc7\u7684\u53d8\u91cf\u624d\u548c\u8d4b\u503c\u64cd\u4f5c\u8bed\u53e5\u7b49\u4ef7\uff0c\u5982\u679c\u53d8\u91cf\u662f\u5728\u5916\u90e8\u8bcd\u6cd5\u57df\u58f0\u660e\u7684\uff0c\u90a3\u4e48\u7b80\u77ed\u53d8\u91cf\u58f0\u660e\u8bed\u53e5\u5c06\u4f1a\u5728\u5f53\u524d\u8bcd\u6cd5\u57df\u91cd\u65b0\u58f0\u660e\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\u3002</p>"},{"location":"software_development/backend/language/Go/#_6","title":"\u6307\u9488","text":"<p>\u6307\u9488\u548cC\u57fa\u672c\u76f8\u540c\uff0c\u6307\u9488\u7684\u96f6\u503c\u5728Go\u4e2d\u4e3anil</p> <p>\u552f\u4e00\u9700\u8981\u63d0\u9192\u7684\u662f\uff0c\u5728Go\u8bed\u8a00\u4e2d\uff0c\u8fd4\u56de\u51fd\u6570\u4e2d\u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740\u4e5f\u662f\u5b89\u5168\u7684\u3002\u4f8b\u5982\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u8c03\u7528f\u51fd\u6570\u65f6\u521b\u5efa\u5c40\u90e8\u53d8\u91cfv\uff0c\u5728\u5c40\u90e8\u53d8\u91cf\u5730\u5740\u88ab\u8fd4\u56de\u4e4b\u540e\u4f9d\u7136\u6709\u6548\uff0c\u56e0\u4e3a\u6307\u9488p\u4f9d\u7136\u5f15\u7528\u8fd9\u4e2a\u53d8\u91cf\u3002</p> <pre><code>var p = f()\n\nfunc f() *int {\n    v := 1\n    return &amp;v\n}\n</code></pre> <p>\u6bcf\u6b21\u8c03\u7528f\u51fd\u6570\u90fd\u5c06\u8fd4\u56de\u4e0d\u540c\u7684\u7ed3\u679c\uff1a</p> <pre><code>fmt.Println(f() == f()) // \"false\"\n</code></pre> <p>\u8fd9\u79cd\u60c5\u51b5\u5728Rust\u4e2d\u662f\u4e0d\u5141\u8bb8\u7684\uff08\u9700\u8981\u6807\u6ce8\u751f\u547d\u5468\u671f\uff09\uff0cGo\u5141\u8bb8\u662f\u56e0\u4e3a\u5176\u7279\u6b8a\u7684\u5783\u573e\u56de\u6536\u673a\u5236</p>"},{"location":"software_development/backend/language/Go/#_7","title":"\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\uff08\u91cd\u8981\uff09","text":"<p>\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u6307\u7684\u662f\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u53d8\u91cf\u6709\u6548\u5b58\u5728\u7684\u65f6\u95f4\u6bb5\u3002</p> <p>\u5bf9\u4e8e\u5728\u5305\u4e00\u7ea7\u58f0\u660e\u7684\u53d8\u91cf\uff08\u5168\u5c40\u53d8\u91cf\uff09\u6765\u8bf4\uff0c\u5b83\u4eec\u7684\u751f\u547d\u5468\u671f\u548c\u6574\u4e2a\u7a0b\u5e8f\u7684\u8fd0\u884c\u5468\u671f\u662f\u4e00\u81f4\u7684\u3002</p> <p>\u800c\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5c40\u90e8\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u5219\u662f\u52a8\u6001\u7684\uff1a\u6bcf\u6b21\u4ece\u521b\u5efa\u4e00\u4e2a\u65b0\u53d8\u91cf\u7684\u58f0\u660e\u8bed\u53e5\u5f00\u59cb\uff0c\u76f4\u5230\u8be5\u53d8\u91cf\u4e0d\u518d\u88ab\u5f15\u7528\u4e3a\u6b62\uff08\u610f\u601d\u662f\uff0c\u51fd\u6570\u5185\u90e8\u58f0\u660e\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u751f\u547d\u5468\u671f\u4e0d\u4e00\u5b9a\u53ea\u5c40\u9650\u4e8e\u5f53\u524d\u51fd\u6570\uff0c\u5176\u751f\u547d\u5468\u671f\u53ef\u80fd\u6bd4\u51fd\u6570\u7684\u8fd8\u8981\u5927\uff09\uff0c\u7136\u540e\u53d8\u91cf\u7684\u5b58\u50a8\u7a7a\u95f4\u53ef\u80fd\u88ab\u56de\u6536\u3002\u51fd\u6570\u7684\u53c2\u6570\u53d8\u91cf\u548c\u8fd4\u56de\u503c\u53d8\u91cf\u90fd\u662f\u5c40\u90e8\u53d8\u91cf\u3002\u5b83\u4eec\u5728\u51fd\u6570\u6bcf\u6b21\u88ab\u8c03\u7528\u7684\u65f6\u5019\u521b\u5efa\u3002</p> <p>\u4ee5\u4e0a\u6d89\u53caGo\u8bed\u8a00\u7684\u5783\u573e\u56de\u6536\u673a\u5236\uff08\u9003\u9038\u673a\u5236\uff09\uff0c\u5728\u8fd9\u91cc\u7b80\u5355\u63d0\u4e00\u4e0b\uff1a\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u9009\u62e9\u5728\u6808\u4e0a\u8fd8\u662f\u5728\u5806\u4e0a\u5206\u914d\u5c40\u90e8\u53d8\u91cf\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u9009\u62e9\u6807\u51c6\u4e3a\uff1a\u4e00\u4e2a\u53d8\u91cf\u7684\u6709\u6548\u5468\u671f\u53ea\u53d6\u51b3\u4e8e\u662f\u5426\u53ef\u8fbe</p> <ul> <li>\u5982\u679c\u5c40\u90e8\u53d8\u91cf\u53ea\u5728\u51fd\u6570\u5185\u90e8\u4f7f\u7528\uff0c\u5219\u6ca1\u6709\u9003\u9038\uff0c\u5728\u6808\u4e0a\u5206\u914d\u5185\u5b58</li> <li>\u5982\u679c\u5c40\u90e8\u53d8\u91cf\u5728\u51fd\u6570\u5185\u90e8\u4f7f\u7528\u540e\u88ab\u8fd4\u56de\u7ed9\u5916\u90e8\uff0c\u4e14\u5916\u90e8\u53d8\u91cf\u4f7f\u7528\u4e86\u8fd9\u4e2a\u5c40\u90e8\u53d8\u91cf\uff0c\u5219\u9003\u9038\uff0c\u5728\u5806\u4e0a\u5206\u914d\u5185\u5b58</li> </ul> <p>\u5177\u4f53\u5173\u4e8eGo\u7684\u5783\u573e\u56de\u6536\u8be6\u89c1\u4e13\u9898\u201cGo\u539f\u7406\u201c</p>"},{"location":"software_development/backend/language/Go/#_8","title":"\u8d4b\u503c","text":"<p>\u53ea\u63d0\u4e00\u4e9b\u5bb9\u6613\u5ffd\u7565\u7684</p>"},{"location":"software_development/backend/language/Go/#_9","title":"\u81ea\u589e\u81ea\u51cf","text":"<p>\u6570\u503c\u53d8\u91cf\u4e5f\u53ef\u4ee5\u652f\u6301<code>++</code>\u9012\u589e\u548c<code>--</code>\u9012\u51cf\u8bed\u53e5\uff08\u8bd1\u6ce8\uff1a\u81ea\u589e\u548c\u81ea\u51cf\u662f\u8bed\u53e5\uff0c\u800c\u4e0d\u662f\u8868\u8fbe\u5f0f\uff0c\u56e0\u6b64<code>x = i++</code>\u4e4b\u7c7b\u7684\u8868\u8fbe\u5f0f\u662f\u9519\u8bef\u7684\uff09\uff1a</p> <pre><code>v := 1\nv++    // \u7b49\u4ef7\u65b9\u5f0f v = v + 1\uff1bv \u53d8\u6210 2\nv--    // \u7b49\u4ef7\u65b9\u5f0f v = v - 1\uff1bv \u53d8\u6210 1\n</code></pre>"},{"location":"software_development/backend/language/Go/#_10","title":"\u5143\u7ec4\u8d4b\u503c","text":"<p>\u5143\u7ec4\u8d4b\u503c\u662f\u53e6\u4e00\u79cd\u5f62\u5f0f\u7684\u8d4b\u503c\u8bed\u53e5\uff0c\u5b83\u5141\u8bb8\u540c\u65f6\u66f4\u65b0\u591a\u4e2a\u53d8\u91cf\u7684\u503c\u3002\u5728\u8d4b\u503c\u4e4b\u524d\uff0c\u8d4b\u503c\u8bed\u53e5\u53f3\u8fb9\u7684\u6240\u6709\u8868\u8fbe\u5f0f\u5c06\u4f1a\u5148\u8fdb\u884c\u6c42\u503c\uff0c\u7136\u540e\u518d\u7edf\u4e00\u66f4\u65b0\u5de6\u8fb9\u5bf9\u5e94\u53d8\u91cf\u7684\u503c\u3002\u8fd9\u5bf9\u4e8e\u5904\u7406\u6709\u4e9b\u540c\u65f6\u51fa\u73b0\u5728\u5143\u7ec4\u8d4b\u503c\u8bed\u53e5\u5de6\u53f3\u4e24\u8fb9\u7684\u53d8\u91cf\u5f88\u6709\u5e2e\u52a9\uff0c\u4f8b\u5982\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\uff1a</p> <pre><code>x, y = y, x\n\na[i], a[j] = a[j], a[i]\n</code></pre> <p>\u6216\u8005\u662f\u8ba1\u7b97\u4e24\u4e2a\u6574\u6570\u503c\u7684\u7684\u6700\u5927\u516c\u7ea6\u6570\uff08GCD\uff09\uff08\u8bd1\u6ce8\uff1aGreatest Common Divisor\u7684\u7f29\u5199\uff0c\u6b27\u51e0\u91cc\u5fb7\u7684GCD\u662f\u6700\u65e9\u7684\u975e\u5e73\u51e1\u7b97\u6cd5\uff09\uff1a</p> <pre><code>func gcd(x, y int) int {\n    for y != 0 {\n        x, y = y, x%y\n    }\n    return x\n}\n</code></pre> <p>\u6216\u8005\u662f\u8ba1\u7b97\u6590\u6ce2\u7eb3\u5951\u6570\u5217\uff08Fibonacci\uff09\u7684\u7b2cN\u4e2a\u6570\uff1a</p> <pre><code>func fib(n int) int {\n    x, y := 0, 1\n    for i := 0; i &lt; n; i++ {\n        x, y = y, x+y\n    }\n    return x\n}\n</code></pre> <p>\u5143\u7ec4\u8d4b\u503c\u4e5f\u53ef\u4ee5\u4f7f\u4e00\u7cfb\u5217\u7410\u788e\u8d4b\u503c\u66f4\u52a0\u7d27\u51d1\uff08\u8bd1\u6ce8: \u7279\u522b\u662f\u5728for\u5faa\u73af\u7684\u521d\u59cb\u5316\u90e8\u5206\uff09:</p> <pre><code>i, j, k = 2, 3, 5\n</code></pre> <p>\u4f46\u5982\u679c\u8868\u8fbe\u5f0f\u592a\u590d\u6742\u7684\u8bdd\uff0c\u5e94\u8be5\u5c3d\u91cf\u907f\u514d\u8fc7\u5ea6\u4f7f\u7528\u5143\u7ec4\u8d4b\u503c\uff1b\u56e0\u4e3a\u6bcf\u4e2a\u53d8\u91cf\u5355\u72ec\u8d4b\u503c\u8bed\u53e5\u7684\u5199\u6cd5\u53ef\u8bfb\u6027\u4f1a\u66f4\u597d\u3002</p>"},{"location":"software_development/backend/language/Go/#_11","title":"\u7c7b\u578b","text":"<p>\u4e00\u4e2a\u7c7b\u578b\u58f0\u660e\u8bed\u53e5\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u7c7b\u578b\u540d\u79f0\uff0c\u548c\u73b0\u6709\u7c7b\u578b\u5177\u6709\u76f8\u540c\u7684\u5e95\u5c42\u7ed3\u6784\u3002\u65b0\u547d\u540d\u7684\u7c7b\u578b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u6cd5\uff0c\u7528\u6765\u5206\u9694\u4e0d\u540c\u6982\u5ff5\u7684\u7c7b\u578b\uff0c\u8fd9\u6837\u5373\u4f7f\u5b83\u4eec\u5e95\u5c42\u7c7b\u578b\u76f8\u540c\u4e5f\u662f\u4e0d\u517c\u5bb9\u7684\u3002</p> <pre><code>type \u7c7b\u578b\u540d\u5b57 \u5e95\u5c42\u7c7b\u578b\n</code></pre> <p>\u7c7b\u578b\u58f0\u660e\u8bed\u53e5\u4e00\u822c\u51fa\u73b0\u5728\u5305\u4e00\u7ea7\uff0c\u56e0\u6b64\u5982\u679c\u65b0\u521b\u5efa\u7684\u7c7b\u578b\u540d\u5b57\u7684\u9996\u5b57\u7b26\u5927\u5199\uff0c\u5219\u5728\u5305\u5916\u90e8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u3002</p> <p>\u7c7b\u578b\u8f6c\u6362</p> <p>\u76f8\u540c\u5e95\u5c42\u7c7b\u578b\u7684\u53d8\u91cf\u6216\u8005\u662f\u4e24\u8005\u90fd\u662f\u6307\u5411\u76f8\u540c\u5e95\u5c42\u7ed3\u6784\u7684\u6307\u9488\u7c7b\u578b\u7684\u7c7b\u578b\u8f6c\u6362\uff1aT(x)\uff0c\u7528\u4e8e\u5c06x\u8f6c\u4e3aT\u7c7b\u578b\uff08\u8bd1\u6ce8\uff1a\u5982\u679cT\u662f\u6307\u9488\u7c7b\u578b\uff0c\u53ef\u80fd\u4f1a\u9700\u8981\u7528\u5c0f\u62ec\u5f27\u5305\u88c5T\uff0c\u6bd4\u5982<code>(*int)(0)</code>\uff09\u3002</p> <p>\u8fd9\u4e9b\u8f6c\u6362\u53ea\u6539\u53d8\u7c7b\u578b\u800c\u4e0d\u4f1a\u5f71\u54cd\u503c\u672c\u8eab</p> <p>\u5176\u4f59\u8f6c\u6362\u53ef\u80fd\u4f1a\u6539\u53d8\u503c</p>"},{"location":"software_development/backend/language/Go/#_12","title":"\u5305\u548c\u6587\u4ef6","text":"<p>\u6bcf\u4e2a\u5305\u90fd\u5bf9\u5e94\u4e00\u4e2a\u72ec\u7acb\u7684\u540d\u5b57\u7a7a\u95f4</p> <p>\u5305\u8fd8\u53ef\u4ee5\u8ba9\u6211\u4eec\u901a\u8fc7\u63a7\u5236\u54ea\u4e9b\u540d\u5b57\u662f\u5916\u90e8\u53ef\u89c1\u7684\u6765\u9690\u85cf\u5185\u90e8\u5b9e\u73b0\u4fe1\u606f\u3002\u5728Go\u8bed\u8a00\u4e2d\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u89c4\u5219\u662f\uff1a\u5982\u679c\u4e00\u4e2a\u540d\u5b57\u662f\u5927\u5199\u5b57\u6bcd\u5f00\u5934\u7684\uff0c\u90a3\u4e48\u8be5\u540d\u5b57\u662f\u5bfc\u51fa\u7684</p> <p>\u4e00\u4e2a\u5305\u7684\u540d\u5b57\u548c\u5305\u7684\u5bfc\u5165\u8def\u5f84\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bb5\u76f8\u540c\uff0c\u4f8b\u5982gopl.io/ch2/tempconv\u5305\u7684\u540d\u5b57\u4e00\u822c\u662ftempconv\u3002\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5bfc\u5165\u7684\u5305\u7ed1\u5b9a\u5230tempconv\u540d\u5b57\uff08\u8bd1\u6ce8\uff1a\u6307\u5305\u58f0\u660e\u8bed\u53e5\u6307\u5b9a\u7684\u540d\u5b57\uff09\uff0c\u4f46\u662f\u6211\u4eec\u4e5f\u53ef\u4ee5\u7ed1\u5b9a\u5230\u53e6\u4e00\u4e2a\u540d\u79f0\uff0c\u4ee5\u907f\u514d\u540d\u5b57\u51b2\u7a81</p> <p>init\u51fd\u6570</p> <p>\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u7279\u6b8a\u7684init\u521d\u59cb\u5316\u51fd\u6570\u6765\u7b80\u5316\u521d\u59cb\u5316\u5de5\u4f5c\u3002\u6bcf\u4e2a\u6587\u4ef6\u90fd\u53ef\u4ee5\u5305\u542b\u591a\u4e2ainit\u521d\u59cb\u5316\u51fd\u6570</p> <p>\u5728\u6bcf\u4e2a\u6587\u4ef6\u4e2d\u7684init\u521d\u59cb\u5316\u51fd\u6570\uff0c\u5728\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u65f6\u6309\u7167\u5b83\u4eec\u58f0\u660e\u7684\u987a\u5e8f\u88ab\u81ea\u52a8\u8c03\u7528\u3002</p> <p>\u6bcf\u4e2a\u5305\u5728\u89e3\u51b3\u4f9d\u8d56\u7684\u524d\u63d0\u4e0b\uff0c\u4ee5\u5bfc\u5165\u58f0\u660e\u7684\u987a\u5e8f\u521d\u59cb\u5316\uff0c\u6bcf\u4e2a\u5305\u53ea\u4f1a\u88ab\u521d\u59cb\u5316\u4e00\u6b21\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4e00\u4e2ap\u5305\u5bfc\u5165\u4e86q\u5305\uff0c\u90a3\u4e48\u5728p\u5305\u521d\u59cb\u5316\u7684\u65f6\u5019\u53ef\u4ee5\u8ba4\u4e3aq\u5305\u5fc5\u7136\u5df2\u7ecf\u521d\u59cb\u5316\u8fc7\u4e86\u3002\u521d\u59cb\u5316\u5de5\u4f5c\u662f\u81ea\u4e0b\u800c\u4e0a\u8fdb\u884c\u7684\uff0cmain\u5305\u6700\u540e\u88ab\u521d\u59cb\u5316\u3002\u4ee5\u8fd9\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u786e\u4fdd\u5728main\u51fd\u6570\u6267\u884c\u4e4b\u524d\uff0c\u6240\u6709\u4f9d\u8d56\u7684\u5305\u90fd\u5df2\u7ecf\u5b8c\u6210\u521d\u59cb\u5316\u5de5\u4f5c\u4e86\u3002</p>"},{"location":"software_development/backend/language/Go/#_13","title":"\u4f5c\u7528\u57df","text":"<p>\u4e0d\u8981\u5c06\u4f5c\u7528\u57df\u548c\u751f\u547d\u5468\u671f\u6df7\u4e3a\u4e00\u8c08\u3002</p> <ul> <li>\u58f0\u660e\u8bed\u53e5\u7684\u4f5c\u7528\u57df\u662f\u6307\u6e90\u4ee3\u7801\u4e2d\u53ef\u4ee5\u6709\u6548\u4f7f\u7528\u8fd9\u4e2a\u540d\u5b57\u7684\u8303\u56f4\uff0c\u5bf9\u5e94\u7684\u662f\u4e00\u4e2a\u6e90\u4ee3\u7801\u7684\u6587\u672c\u533a\u57df\uff1b\u5b83\u662f\u4e00\u4e2a\u7f16\u8bd1\u65f6\u7684\u5c5e\u6027\u3002</li> <li>\u4e00\u4e2a\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u662f\u6307\u7a0b\u5e8f\u8fd0\u884c\u65f6\u53d8\u91cf\u5b58\u5728\u7684\u6709\u6548\u65f6\u95f4\u6bb5\uff0c\u5728\u6b64\u65f6\u95f4\u533a\u57df\u5185\u5b83\u53ef\u4ee5\u88ab\u7a0b\u5e8f\u7684\u5176\u4ed6\u90e8\u5206\u5f15\u7528\uff1b\u662f\u4e00\u4e2a\u8fd0\u884c\u65f6\u7684\u6982\u5ff5\u3002</li> </ul> <p>\u7b80\u5355\u6765\u8bf4\uff0c\u4f5c\u7528\u57df\u6307\u540d\u5b57\u7684\u4f5c\u7528\u8303\u56f4\uff0c\u5982\u679c\u4f5c\u7528\u57df\u51b2\u7a81\uff0c\u4e0d\u80fd\u4f7f\u7528\u540c\u4e00\u4e2a\u540d\u5b57\uff1b\u751f\u547d\u5468\u671f\u6307\u53d8\u91cf\u7684\u4f5c\u7528\u8303\u56f4\uff0c\u5173\u6ce8\u7684\u662f\u53d8\u91cf\u7684\u503c\u4ec0\u4e48\u65f6\u5019\u6709\u6548</p> <p>\u4efb\u4f55\u5728\u51fd\u6570\u5916\u90e8\uff08\u4e5f\u5c31\u662f\u5305\u7ea7\u8bed\u6cd5\u57df\uff09\u58f0\u660e\u7684\u540d\u5b57\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u5305\u7684\u4efb\u4f55\u6e90\u6587\u4ef6\u4e2d\u8bbf\u95ee\u7684\u3002</p> <p>\u5bf9\u4e8e\u5bfc\u5165\u7684\u5305\uff0c\u4f8b\u5982tempconv\u5bfc\u5165\u7684fmt\u5305\uff0c\u5219\u662f\u5bf9\u5e94\u6e90\u6587\u4ef6\u7ea7\u7684\u4f5c\u7528\u57df\uff0c\u56e0\u6b64\u53ea\u80fd\u5728\u5f53\u524d\u7684\u6587\u4ef6\u4e2d\u8bbf\u95ee\u5bfc\u5165\u7684fmt\u5305\uff0c\u5f53\u524d\u5305\u7684\u5176\u5b83\u6e90\u6587\u4ef6\u65e0\u6cd5\u8bbf\u95ee\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u5bfc\u5165\u7684\u5305\u3002</p> <p>\u9700\u8981\u6ce8\u610ffor\u7b49\u8bed\u53e5\u7684\u9690\u85cf\u8bcd\u6cd5\u57df\uff08\u4f5c\u7528\u57df\uff09</p> <p>\u4e0b\u9762\u7684\u4f8b\u5b50\u540c\u6837\u6709\u4e09\u4e2a\u4e0d\u540c\u7684x\u53d8\u91cf\uff0c\u6bcf\u4e2a\u58f0\u660e\u5728\u4e0d\u540c\u7684\u8bcd\u6cd5\u57df\uff0c\u4e00\u4e2a\u5728\u51fd\u6570\u4f53\u8bcd\u6cd5\u57df\uff0c\u4e00\u4e2a\u5728for\u9690\u5f0f\u7684\u521d\u59cb\u5316\u8bcd\u6cd5\u57df\uff0c\u4e00\u4e2a\u5728for\u5faa\u73af\u4f53\u8bcd\u6cd5\u57df\uff1b\u53ea\u6709\u4e24\u4e2a\u5757\u662f\u663e\u5f0f\u521b\u5efa\u7684\uff1a</p> <pre><code>func main() {\n    x := \"hello\"\n    for _, x := range x {\n        x := x + 'A' - 'a'\n        fmt.Printf(\"%c\", x) // \"HELLO\" (one letter per iteration)\n    }\n}\n</code></pre> <p>\u548cfor\u5faa\u73af\u7c7b\u4f3c\uff0cif\u548cswitch\u8bed\u53e5\u4e5f\u4f1a\u5728\u6761\u4ef6\u90e8\u5206\u521b\u5efa\u9690\u5f0f\u8bcd\u6cd5\u57df\uff0c\u8fd8\u6709\u5b83\u4eec\u5bf9\u5e94\u7684\u6267\u884c\u4f53\u8bcd\u6cd5\u57df\u3002\u4e0b\u9762\u7684if-else\u6d4b\u8bd5\u94fe\u6f14\u793a\u4e86x\u548cy\u7684\u6709\u6548\u4f5c\u7528\u57df\u8303\u56f4\uff1a</p> <pre><code>if x := f(); x == 0 {\n    fmt.Println(x)\n} else if y := g(x); x == y {\n    fmt.Println(x, y)\n} else {\n    fmt.Println(x, y)\n}\nfmt.Println(x, y) // compile error: x and y are not visible here\n</code></pre> <p>\u7b2c\u4e8c\u4e2aif\u8bed\u53e5\u5d4c\u5957\u5728\u7b2c\u4e00\u4e2a\u5185\u90e8\uff0c\u56e0\u6b64\u7b2c\u4e00\u4e2aif\u8bed\u53e5\u6761\u4ef6\u521d\u59cb\u5316\u8bcd\u6cd5\u57df\u58f0\u660e\u7684\u53d8\u91cf\u5728\u7b2c\u4e8c\u4e2aif\u4e2d\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u3002</p> <p>switch\u8bed\u53e5\u7684\u6bcf\u4e2a\u5206\u652f\u4e5f\u6709\u7c7b\u4f3c\u7684\u8bcd\u6cd5\u57df\u89c4\u5219\uff1a\u6761\u4ef6\u90e8\u5206\u4e3a\u4e00\u4e2a\u9690\u5f0f\u8bcd\u6cd5\u57df\uff0c\u7136\u540e\u662f\u6bcf\u4e2a\u5206\u652f\u7684\u8bcd\u6cd5\u57df\u3002</p>"},{"location":"software_development/backend/language/Go/#_14","title":"\u57fa\u7840\u6570\u636e\u7c7b\u578b","text":""},{"location":"software_development/backend/language/Go/#_15","title":"\u6574\u6570\u7c7b\u578b","text":"<ul> <li>\u4e24\u79cd\u4e00\u822c\u5bf9\u5e94\u7279\u5b9aCPU\u5e73\u53f0\u673a\u5668\u5b57\u5927\u5c0f\u7684\u6709\u7b26\u53f7\u548c\u65e0\u7b26\u53f7\u6574\u6570int\u548cuint</li> <li>int8\u3001int16\u3001int32\u548cint64</li> <li>uint8\u3001uint16\u3001uint32\u548cuint64</li> </ul> <p>Unicode\u5b57\u7b26rune\u7c7b\u578b\u662f\u548cint32\u7b49\u4ef7\u7684\u7c7b\u578b\uff0c\u901a\u5e38\u7528\u4e8e\u8868\u793a\u4e00\u4e2aUnicode\u7801\u70b9\u3002\u8fd9\u4e24\u4e2a\u540d\u79f0\u53ef\u4ee5\u4e92\u6362\u4f7f\u7528\u3002</p> <p>byte\u4e5f\u662fuint8\u7c7b\u578b\u7684\u7b49\u4ef7\u7c7b\u578b\uff0cbyte\u7c7b\u578b\u4e00\u822c\u7528\u4e8e\u5f3a\u8c03\u6570\u503c\u662f\u4e00\u4e2a\u539f\u59cb\u7684\u6570\u636e\u800c\u4e0d\u662f\u4e00\u4e2a\u5c0f\u7684\u6574\u6570\u3002</p> <p>\u65e0\u7b26\u53f7\u7684\u6574\u6570\u7c7b\u578buintptr\uff0c\u6ca1\u6709\u6307\u5b9a\u5177\u4f53\u7684bit\u5927\u5c0f\u4f46\u662f\u8db3\u4ee5\u5bb9\u7eb3\u6307\u9488</p> <p>\u6570\u503c\u7c7b\u578b\u7684\u9009\u62e9</p> <p>\u6570\u7ec4\u7684\u957f\u5ea6\u51fd\u6570len()\u4f7f\u7528\u4e86\u6709\u7b26\u53f7\u6570</p> <p>\u65e0\u7b26\u53f7\u6570\u5f80\u5f80\u53ea\u6709\u5728\u4f4d\u8fd0\u7b97\u6216\u5176\u5b83\u7279\u6b8a\u7684\u8fd0\u7b97\u573a\u666f\u624d\u4f1a\u4f7f\u7528\uff0c\u5c31\u50cfbit\u96c6\u5408\u3001\u5206\u6790\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f\u6216\u8005\u662f\u54c8\u5e0c\u548c\u52a0\u5bc6\u64cd\u4f5c\u7b49\u3002</p> <p>\u6570\u503c\u7c7b\u578b\u7684\u8f6c\u6362</p> <p>\u6d6e\u70b9\u6570\u5230\u6574\u6570\u7684\u8f6c\u6362\u5c06\u4e22\u5931\u4efb\u4f55\u5c0f\u6570\u90e8\u5206\uff0c\u7136\u540e\u5411\u6570\u8f74\u96f6\u65b9\u5411\u622a\u65ad</p>"},{"location":"software_development/backend/language/Go/#_16","title":"\u6d6e\u70b9\u6570/\u590d\u6570","text":"<p>\u6ca1\u5565\u597d\u8bf4\uff0c\u8fd9\u91cc\u4e0d\u8d58\u8ff0</p>"},{"location":"software_development/backend/language/Go/#_17","title":"\u5e03\u5c14\u503c","text":"<p>\u6ce8\u610f\u4e00\u4e2a\u70b9\u5373\u53ef\uff1a\u5e03\u5c14\u503c\u5e76\u4e0d\u4f1a\u9690\u5f0f\u8f6c\u6362\u4e3a\u6570\u5b57\u503c0\u62161</p>"},{"location":"software_development/backend/language/Go/#_18","title":"\u5b57\u7b26\u4e32","text":""},{"location":"software_development/backend/language/Go/#_19","title":"\u7f16\u7801\u65b9\u5f0f","text":"<p>\u8bb2\u5b57\u7b26\u4e32\u4e4b\u524d\uff0c\u5148\u4ecb\u7ecd\u4e00\u4e0bGo\u7684\u7f16\u7801\u65b9\u5f0f</p> <p>\u8d77\u7801\u8ba1\u7b97\u673a\u4e16\u754c\u5c31\u53ea\u6709\u4e00\u4e2aASCII\u5b57\u7b26\u96c6\uff1a\u7f8e\u56fd\u4fe1\u606f\u4ea4\u6362\u6807\u51c6\u4ee3\u7801\u3002ASCII\uff0c\u66f4\u51c6\u786e\u5730\u8bf4\u662f\u7f8e\u56fd\u7684ASCII\uff0c\u4f7f\u75287bit\u6765\u8868\u793a128\u4e2a\u5b57\u7b26\uff1a\u5305\u542b\u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u3001\u6570\u5b57\u3001\u5404\u79cd\u6807\u70b9\u7b26\u53f7\u548c\u8bbe\u5907\u63a7\u5236\u7b26\u3002</p> <p>\u4f46\u662fASCII\u7684\u8868\u793a\u8303\u56f4\u6709\u9650\uff0c\u4e3a\u4e86\u8868\u793a\u4e16\u754c\u4e0a\u6240\u6709\u7684\u7b26\u53f7\uff0c\u540e\u9762\u5927\u5bb6\u90fd\u4f7f\u7528Unicode\u3002\u5728Unicode\u4e2d\uff0c\u6bcf\u4e2a\u5b57\u7b26\u5bf9\u5e94\u552f\u4e00\u7801\u70b9\uff0c\u8303\u56f4\u4e3a\uff1a\u4ece <code>0x0000</code> \u5230 <code>0x10FFFF</code>\u3002</p> <p>\u901a\u8fc7\u5341\u516d\u8fdb\u5236\u6570\u4e00\u773c\u770b\u51fa\u591a\u5c11\u4e2a\u4e8c\u8fdb\u5236\u4f4d</p> <ol> <li>\u6bcf\u4e2a\u5341\u516d\u8fdb\u5236\u6570\u5b57\u5bf9\u5e94 4 \u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff1a\u56e0\u4e3a\u5341\u516d\u8fdb\u5236\u6570\u7684\u6bcf\u4e00\u4f4d\u53ef\u4ee5\u8868\u793a 16 \u79cd\u72b6\u6001\uff080-15\uff09\uff0c\u800c 4 \u4e2a\u4e8c\u8fdb\u5236\u4f4d\u53ef\u4ee5\u8868\u793a 16 \u79cd\u72b6\u6001\uff080000 \u5230 1111\uff09\u3002</li> <li>\u8ba1\u7b97\u603b\u4f4d\u6570\uff1a\u5c06\u5341\u516d\u8fdb\u5236\u6570\u7684\u4f4d\u6570\u4e58\u4ee5 4\uff0c\u5373\u53ef\u5f97\u5230\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u4f4d\u6570\u3002</li> </ol> <p><code>0x10FFFF</code>\u5bf9\u5e9424\u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u56e0\u6b64\u901a\u7528\u7684\u8868\u793a\u4e00\u4e2aUnicode\u7801\u70b9\u7684\u6570\u636e\u7c7b\u578b\u662fint32</p> <p>Unicode\u6709\u4e09\u79cd\u7f16\u7801\u8868\u793a\u65b9\u5f0f</p> <ul> <li>UTF-8\uff1aUnicode \u7684\u4e00\u79cd\u53d8\u957f\u7f16\u7801\u65b9\u5f0f\uff0c\u5b83\u4f7f\u7528 1 \u5230 4 \u4e2a\u5b57\u8282\u6765\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\u3002UTF-8 \u517c\u5bb9 ASCII \u7f16\u7801\uff0c\u5bf9\u4e8e ASCII \u5b57\u7b26\u96c6\u4e2d\u7684\u5b57\u7b26\uff0cUTF-8 \u4f7f\u7528\u76f8\u540c\u7684\u5355\u5b57\u8282\u7f16\u7801</li> <li>UTF-16</li> <li>UTF-32 \uff1a\u4e00\u79cd\u56fa\u5b9a\u957f\u5ea6\u7684\u7f16\u7801\u65b9\u5f0f\uff0c\u5b83\u4f7f\u7528 4 \u4e2a\u5b57\u8282\u6765\u8868\u793a\u4e00\u4e2a\u5b57\u7b26</li> </ul>"},{"location":"software_development/backend/language/Go/#rune","title":"rune\u7c7b\u578b","text":"<p>\u73b0\u5728\u56de\u5230Go\u8bed\u8a00</p> <p>\u5728C\u8bed\u8a00\u4e2d\uff0c\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\u91c7\u7528\u7684\u662fchar\u7c7b\u578b\uff0c\u5bf9\u5e94\u7684\u662fASCII\u7f16\u7801</p> <p>\u800cGo\u8bed\u8a00\u91c7\u7528\u4e86Unicode\u7f16\u7801\uff0c\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\u91c7\u7528\u7684\u662frune\u7c7b\u578b\uff0c\u662fint32\u7684\u522b\u540d\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u80fd\u8868\u793a\u4e00\u5207\u7b26\u53f7\u7cfb\u7edf\u3002</p> <p>\u5e76\u4e14Go\u8868\u793aUnicode\u7684\u65b9\u5f0f\u662f\u91c7\u7528\u4e86UTF-8\u7f16\u7801\u3002</p> <p>\u91c7\u7528\u4e86UTF-8\u7f16\u7801\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f</p> <p>\u8fd9\u610f\u5473\u7740\uff1a</p> <ul> <li>\u6bcf\u4e2a\u5b57\u7b26\uff08rune\u7c7b\u578b\uff09\u5bf9\u5e94\u7684\u5b57\u8282\u957f\u5ea6\u4e0d\u5b9a\uff08\u6bd4\u5982\u8bf4\uff0c\u201c\u4e16\u201d\u5b57\u5c31\u9700\u8981\u4e09\u4e2a\u5b57\u8282\u8868\u793a\uff0c\u800c\"H\"\u5b57\u7b26\u53ea\u9700\u8981\u4e00\u4e2a\u5b57\u8282\uff09</li> <li>\u5b57\u7b26\u4e32\u672c\u8d28\u4e0a\u662f\u5b57\u8282\u5e8f\u5217\uff0c\u56e0\u6b64\u5b57\u7b26\u4e32\u957f\u5ea6\u662f\u5b57\u8282\u5e8f\u5217\u957f\u5ea6\uff0c\u4e0d\u662f\u5b9e\u9645\u5b57\u7b26\u957f\u5ea6</li> <li>\u5982\u679c\u8981\u6c42\u5b57\u7b26\u4e32\u5b9e\u9645\u5b57\u7b26\u957f\u5ea6\uff0c\u9700\u8981\u4f7f\u7528rune\u6216\u7279\u5b9a\u5de5\u5177\u5305</li> </ul> <p>\u8865\u5145UTF-8\u4e00\u4e9b\u4fe1\u606f\uff1a</p> <p>UTF8\u7f16\u7801\u4f7f\u75281\u52304\u4e2a\u5b57\u8282\u6765\u8868\u793a\u6bcf\u4e2aUnicode\u7801\u70b9\uff0cASCII\u90e8\u5206\u5b57\u7b26\u53ea\u4f7f\u75281\u4e2a\u5b57\u8282\uff0c\u5e38\u7528\u5b57\u7b26\u90e8\u5206\u4f7f\u75282\u62163\u4e2a\u5b57\u8282\u8868\u793a\u3002\u6bcf\u4e2a\u7b26\u53f7\u7f16\u7801\u540e\u7b2c\u4e00\u4e2a\u5b57\u8282\u7684\u9ad8\u7aefbit\u4f4d\u7528\u4e8e\u8868\u793a\u7f16\u7801\u603b\u5171\u6709\u591a\u5c11\u4e2a\u5b57\u8282\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u5b57\u8282\u7684\u9ad8\u7aefbit\u4e3a0\uff0c\u5219\u8868\u793a\u5bf9\u5e947bit\u7684ASCII\u5b57\u7b26\uff0cASCII\u5b57\u7b26\u6bcf\u4e2a\u5b57\u7b26\u4f9d\u7136\u662f\u4e00\u4e2a\u5b57\u8282\uff0c\u548c\u4f20\u7edf\u7684ASCII\u7f16\u7801\u517c\u5bb9\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u5b57\u8282\u7684\u9ad8\u7aefbit\u662f110\uff0c\u5219\u8bf4\u660e\u9700\u89812\u4e2a\u5b57\u8282\uff1b\u540e\u7eed\u7684\u6bcf\u4e2a\u9ad8\u7aefbit\u90fd\u4ee510\u5f00\u5934\u3002\u66f4\u5927\u7684Unicode\u7801\u70b9\u4e5f\u662f\u91c7\u7528\u7c7b\u4f3c\u7684\u7b56\u7565\u5904\u7406\u3002</p> <pre><code>0xxxxxxx                             runes 0-127    (ASCII)\n110xxxxx 10xxxxxx                    128-2047       (values &lt;128 unused)\n1110xxxx 10xxxxxx 10xxxxxx           2048-65535     (values &lt;2048 unused)\n11110xxx 10xxxxxx 10xxxxxx 10xxxxxx  65536-0x10ffff (other values unused)\n</code></pre>"},{"location":"software_development/backend/language/Go/#_20","title":"\u5b57\u7b26\u4e32","text":"<p>\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u4e00\u4e2a\u4e0d\u53ef\u6539\u53d8\u7684\u5b57\u8282\u5e8f\u5217\u3002</p> <p>\u5185\u7f6e\u7684len\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u8282\u6570\u76ee\uff08\u4e0d\u662frune\u5b57\u7b26\u6570\u76ee\uff09\uff0c\u7d22\u5f15\u64cd\u4f5cs[i]\u8fd4\u56de\u7b2ci\u4e2a\u5b57\u8282\u7684\u5b57\u8282\u503c\uff0ci\u5fc5\u987b\u6ee1\u8db30 \u2264 i&lt; len(s)\u6761\u4ef6\u7ea6\u675f\u3002</p> <pre><code>s := \"hello, world\"\nfmt.Println(len(s))     // \"12\"\nfmt.Println(s[0], s[7]) // \"104 119\" ('h' and 'w')\n</code></pre> <p>\u5b50\u5b57\u7b26\u4e32\u64cd\u4f5cs[i:j]\u57fa\u4e8e\u539f\u59cb\u7684s\u5b57\u7b26\u4e32\u7684\u7b2ci\u4e2a\u5b57\u8282\u5f00\u59cb\u5230\u7b2cj\u4e2a\u5b57\u8282\uff08\u5e76\u4e0d\u5305\u542bj\u672c\u8eab\uff09\u751f\u6210\u4e00\u4e2a\u65b0\u5b57\u7b26\u4e32\u3002\u751f\u6210\u7684\u65b0\u5b57\u7b26\u4e32\u5c06\u5305\u542bj-i\u4e2a\u5b57\u8282\u3002</p> <pre><code>fmt.Println(s[0:5]) // \"hello\"\n</code></pre> <p>\u5176\u4e2d+\u64cd\u4f5c\u7b26\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u6784\u9020\u4e00\u4e2a\u65b0\u5b57\u7b26\u4e32\uff1a</p> <pre><code>fmt.Println(\"goodbye\" + s[5:]) // \"goodbye, world\"\n</code></pre> <p>\u5b57\u7b26\u4e32\u53ef\u4ee5\u7528==\u548c&lt;\u8fdb\u884c\u6bd4\u8f83\uff1b\u6bd4\u8f83\u901a\u8fc7\u9010\u4e2a\u5b57\u8282\u6bd4\u8f83\u5b8c\u6210\u7684\uff0c\u56e0\u6b64\u6bd4\u8f83\u7684\u7ed3\u679c\u662f\u5b57\u7b26\u4e32\u81ea\u7136\u7f16\u7801\u7684\u987a\u5e8f\u3002</p> <p>\u5b57\u7b26\u4e32\u7684\u503c\u662f\u4e0d\u53ef\u53d8\u7684\uff1a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5305\u542b\u7684\u5b57\u8282\u5e8f\u5217\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u6539\u53d8\uff0c\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u7ed9\u4e00\u4e2a\u5b57\u7b26\u4e32\u53d8\u91cf\u5206\u914d\u4e00\u4e2a\u65b0\u5b57\u7b26\u4e32\u503c\u3002\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u6837\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u8ffd\u52a0\u5230\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\uff1a</p> <pre><code>s := \"left foot\"\nt := s\ns += \", right foot\"\n</code></pre> <p>\u8fd9\u5e76\u4e0d\u4f1a\u5bfc\u81f4\u539f\u59cb\u7684\u5b57\u7b26\u4e32\u503c\u88ab\u6539\u53d8\uff0c\u4f46\u662f\u53d8\u91cfs\u5c06\u56e0\u4e3a+=\u8bed\u53e5\u6301\u6709\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\u503c\uff0c\u4f46\u662ft\u4f9d\u7136\u662f\u5305\u542b\u539f\u5148\u7684\u5b57\u7b26\u4e32\u503c\u3002</p> <pre><code>fmt.Println(s) // \"left foot, right foot\"\nfmt.Println(t) // \"left foot\"\n</code></pre> <p>\u56e0\u4e3a\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff0c\u56e0\u6b64\u5c1d\u8bd5\u4fee\u6539\u5b57\u7b26\u4e32\u5185\u90e8\u6570\u636e\u7684\u64cd\u4f5c\u4e5f\u662f\u88ab\u7981\u6b62\u7684\uff1a</p> <pre><code>s[0] = 'L' // compile error: cannot assign to s[0]\n</code></pre> <p>\u5f97\u76ca\u4e8eUTF8\u7f16\u7801\u4f18\u826f\u7684\u8bbe\u8ba1\uff0c\u8bf8\u591a\u5b57\u7b26\u4e32\u64cd\u4f5c\u90fd\u4e0d\u9700\u8981\u89e3\u7801\u64cd\u4f5c\u3002\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u89e3\u7801\u76f4\u63a5\u6d4b\u8bd5\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u662f\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u524d\u7f00\uff1a</p> <pre><code>func HasPrefix(s, prefix string) bool {\n    return len(s) &gt;= len(prefix) &amp;&amp; s[:len(prefix)] == prefix\n}\n</code></pre> <p>\u6216\u8005\u662f\u540e\u7f00\u6d4b\u8bd5\uff1a</p> <pre><code>func HasSuffix(s, suffix string) bool {\n    return len(s) &gt;= len(suffix) &amp;&amp; s[len(s)-len(suffix):] == suffix\n}\n</code></pre> <p>\u6216\u8005\u662f\u5305\u542b\u5b50\u4e32\u6d4b\u8bd5\uff1a</p> <pre><code>func Contains(s, substr string) bool {\n    for i := 0; i &lt; len(s); i++ {\n        if HasPrefix(s[i:], substr) {\n            return true\n        }\n    }\n    return false\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#_21","title":"\u5b57\u7b26\u4e32\u5b57\u8282\u5e8f\u5217\u548c\u5b9e\u9645\u5b57\u7b26\u5e8f\u5217\u8f6c\u6362","text":"<ol> <li> <p>\u4f7f\u7528unicode/utf8\u5305</p> </li> <li> <p>RuneCountInString(s)\u53ef\u4ee5\u83b7\u5f97\u5b9e\u9645\u5b57\u7b26\u4e2a\u6570</p> </li> <li>utf8.DecodeRuneInString(s)\u4ece\u5b57\u7b26\u4e32\u4e2d\u89e3\u7801\u7b2c\u4e00\u4e2a\u6709\u6548\u7684 UTF-8 \u7f16\u7801\u7684 Unicode \u5b57\u7b26</li> <li>\u6bcf\u4e00\u6b21\u8c03\u7528DecodeRuneInString\u51fd\u6570\u90fd\u8fd4\u56de\u4e00\u4e2ar\u548c\u957f\u5ea6\uff0cr\u5bf9\u5e94\u5b57\u7b26\u672c\u8eab\uff0c\u957f\u5ea6\u5bf9\u5e94r\u91c7\u7528UTF8\u7f16\u7801\u540e\u7684\u7f16\u7801\u5b57\u8282\u6570\u76ee\u3002</li> </ol> <pre><code>import \"unicode/utf8\"\n\ns := \"Hello, \u4e16\u754c\"\nfmt.Println(len(s))                    // \"13\"\nfmt.Println(utf8.RuneCountInString(s)) // \"9\"\n\nfor i := 0; i &lt; len(s); {\n    r, size := utf8.DecodeRuneInString(s[i:])\n    fmt.Printf(\"%d\\t%c\\n\", i, r)\n    i += size\n}\n//output\n0       H\n1       e\n2       l\n3       l\n4       o\n5       ,\n6        \n7       \u4e16\n10      \u754c\n</code></pre> <p>Go\u8bed\u8a00\u7684range\u5faa\u73af\u5728\u5904\u7406\u5b57\u7b26\u4e32\u7684\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u9690\u5f0f\u89e3\u7801UTF8\u5b57\u7b26\u4e32\u3002</p> <pre><code>for i, r := range \"Hello, \u4e16\u754c\" {\n    fmt.Printf(\"%d\\t%q\\t%d\\n\", i, r, r)\n}\n</code></pre> <p></p> <ol> <li>[]rune\u7c7b\u578b\u548cstring\u7c7b\u578b\u8f6c\u6362</li> </ol> <p>\u5c06[]rune\u7c7b\u578b\u8f6c\u6362\u5e94\u7528\u5230UTF8\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u5c06\u8fd4\u56de\u5b57\u7b26\u4e32\u7f16\u7801\u7684Unicode\u7801\u70b9\u5e8f\u5217\uff1a</p> <pre><code>// \"program\" in Japanese katakana\ns := \"\u30d7\u30ed\u30b0\u30e9\u30e0\"\nfmt.Printf(\"% x\\n\", s) // \"e3 83 97 e3 83 ad e3 82 b0 e3 83 a9 e3 83 a0\"\nr := []rune(s)\nfmt.Printf(\"%x\\n\", r)  // \"[30d7 30ed 30b0 30e9 30e0]\"\n</code></pre> <p>\uff08\u5728\u7b2c\u4e00\u4e2aPrintf\u4e2d\u7684<code>% x</code>\u53c2\u6570\u7528\u4e8e\u5728\u6bcf\u4e2a\u5341\u516d\u8fdb\u5236\u6570\u5b57\u524d\u63d2\u5165\u4e00\u4e2a\u7a7a\u683c\u3002\uff09</p> <p>\u5982\u679c\u662f\u5c06\u4e00\u4e2a[]rune\u7c7b\u578b\u7684Unicode\u5b57\u7b26slice\u6216\u6570\u7ec4\u8f6c\u4e3astring\uff0c\u5219\u5bf9\u5b83\u4eec\u8fdb\u884cUTF8\u7f16\u7801\uff1a</p> <pre><code>fmt.Println(string(r)) // \"\u30d7\u30ed\u30b0\u30e9\u30e0\"\n</code></pre> <p>\u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u578b\u4e3a\u5b57\u7b26\u4e32\u610f\u601d\u662f\u751f\u6210\u4ee5\u53ea\u5305\u542b\u5bf9\u5e94Unicode\u7801\u70b9\u5b57\u7b26\u7684UTF8\u5b57\u7b26\u4e32\uff1a</p> <pre><code>fmt.Println(string(65))     // \"A\", not \"65\"\nfmt.Println(string(0x4eac)) // \"\u4eac\"\n</code></pre> <p>\u5982\u679c\u5bf9\u5e94\u7801\u70b9\u7684\u5b57\u7b26\u662f\u65e0\u6548\u7684\uff0c\u5219\u7528<code>\\uFFFD</code>\u65e0\u6548\u5b57\u7b26\u4f5c\u4e3a\u66ff\u6362\uff1a</p> <pre><code>fmt.Println(string(1234567)) // \"?\"\n</code></pre>"},{"location":"software_development/backend/language/Go/#_22","title":"\u5b57\u7b26\u4e32\u9762\u503c","text":"<p>\u5f62\u5f0f\u4e3a\"....\"\u7684\u5b57\u7b26\u4e32\u9762\u503c\uff0c\u53ef\u4ee5\u5305\u542b\u8f6c\u4e49\u5b57\u7b26</p> <p>\u5f62\u5f0f\u4e3a'....'\u7684\u5b57\u7b26\u4e32\u9762\u503c\uff0c\u79f0\u4e3a\u539f\u751f\u5b57\u7b26\u4e32\u9762\u503c\uff0c\u4e0d\u542b\u8f6c\u4e49\u64cd\u4f5c\u3002\u5982\u4e0b\u4f8b\uff0c\u6362\u884c\u7b49\u90fd\u662f\u4e0d\u901a\u8fc7\u8f6c\u4e49\u5b57\u7b26\u5b9e\u73b0</p> <pre><code>const GoUsage = `Go is a tool for managing Go source code.\n\nUsage:\n    go command [arguments]\n...`\n</code></pre> <p>\u539f\u751f\u5b57\u7b26\u4e32\u9762\u503c\u7528\u4e8e\u7f16\u5199\u6b63\u5219\u8868\u8fbe\u5f0f\u4f1a\u5f88\u65b9\u4fbf\uff0c\u56e0\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\u5f80\u5f80\u4f1a\u5305\u542b\u5f88\u591a\u53cd\u659c\u6760\u3002\u539f\u751f\u5b57\u7b26\u4e32\u9762\u503c\u540c\u65f6\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8eHTML\u6a21\u677f\u3001JSON\u9762\u503c\u3001\u547d\u4ee4\u884c\u63d0\u793a\u4fe1\u606f\u4ee5\u53ca\u90a3\u4e9b\u9700\u8981\u6269\u5c55\u5230\u591a\u884c\u7684\u573a\u666f\u3002</p>"},{"location":"software_development/backend/language/Go/#_23","title":"\u5b57\u7b26\u4e32\u5e95\u5c42\u539f\u7406","text":"<p>\u4e00\u4e2a\u5b57\u7b26\u4e32s\u548c\u5bf9\u5e94\u7684\u5b50\u5b57\u7b26\u4e32\u5207\u7247s[7:]\u5171\u4eab\u76f8\u540c\u5185\u5b58\uff0c\u5982\u4e0b\u56fe</p> <p></p>"},{"location":"software_development/backend/language/Go/#_24","title":"\u5b57\u7b26\u4e32\u76f8\u5173\u5305","text":"<p>\u6807\u51c6\u5e93\u4e2d\u6709\u56db\u4e2a\u5305\u5bf9\u5b57\u7b26\u4e32\u5904\u7406\u5c24\u4e3a\u91cd\u8981\uff1abytes\u3001strings\u3001strconv\u548cunicode\u5305\u3002</p> <ul> <li>strings\u5305\u63d0\u4f9b\u4e86\u8bb8\u591a\u5982\u5b57\u7b26\u4e32\u7684\u67e5\u8be2\u3001\u66ff\u6362\u3001\u6bd4\u8f83\u3001\u622a\u65ad\u3001\u62c6\u5206\u548c\u5408\u5e76\u7b49\u529f\u80fd\u3002</li> <li>bytes\u5305\u4e5f\u63d0\u4f9b\u4e86\u5f88\u591a\u7c7b\u4f3c\u529f\u80fd\u7684\u51fd\u6570\uff0c\u4f46\u662f\u9488\u5bf9\u548c\u5b57\u7b26\u4e32\u6709\u7740\u76f8\u540c\u7ed3\u6784\u7684[]byte\u7c7b\u578b\u3002\u56e0\u4e3a\u5b57\u7b26\u4e32\u662f\u53ea\u8bfb\u7684\uff0c\u56e0\u6b64\u9010\u6b65\u6784\u5efa\u5b57\u7b26\u4e32\u4f1a\u5bfc\u81f4\u5f88\u591a\u5206\u914d\u548c\u590d\u5236\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528bytes.Buffer\u7c7b\u578b\u5c06\u4f1a\u66f4\u6709\u6548\uff0c\u7a0d\u540e\u6211\u4eec\u5c06\u5c55\u793a\u3002</li> <li>strconv\u5305\u63d0\u4f9b\u4e86\u5e03\u5c14\u578b\u3001\u6574\u578b\u6570\u3001\u6d6e\u70b9\u6570\u548c\u5bf9\u5e94\u5b57\u7b26\u4e32\u7684\u76f8\u4e92\u8f6c\u6362\uff0c\u8fd8\u63d0\u4f9b\u4e86\u53cc\u5f15\u53f7\u8f6c\u4e49\u76f8\u5173\u7684\u8f6c\u6362\u3002</li> <li>unicode\u5305\u63d0\u4f9b\u4e86IsDigit\u3001IsLetter\u3001IsUpper\u548cIsLower\u7b49\u7c7b\u4f3c\u529f\u80fd\uff0c\u5b83\u4eec\u7528\u4e8e\u7ed9\u5b57\u7b26\u5206\u7c7b\u3002\u6bcf\u4e2a\u51fd\u6570\u6709\u4e00\u4e2a\u5355\u4e00\u7684rune\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\u3002\u800c\u50cfToUpper\u548cToLower\u4e4b\u7c7b\u7684\u8f6c\u6362\u51fd\u6570\u5c06\u7528\u4e8erune\u5b57\u7b26\u7684\u5927\u5c0f\u5199\u8f6c\u6362\u3002\u6240\u6709\u7684\u8fd9\u4e9b\u51fd\u6570\u90fd\u662f\u9075\u5faaUnicode\u6807\u51c6\u5b9a\u4e49\u7684\u5b57\u6bcd\u3001\u6570\u5b57\u7b49\u5206\u7c7b\u89c4\u8303\u3002strings\u5305\u4e5f\u6709\u7c7b\u4f3c\u7684\u51fd\u6570\uff0c\u5b83\u4eec\u662fToUpper\u548cToLower\uff0c\u5c06\u539f\u59cb\u5b57\u7b26\u4e32\u7684\u6bcf\u4e2a\u5b57\u7b26\u90fd\u505a\u76f8\u5e94\u7684\u8f6c\u6362\uff0c\u7136\u540e\u8fd4\u56de\u65b0\u7684\u5b57\u7b26\u4e32\u3002</li> </ul>"},{"location":"software_development/backend/language/Go/#slice","title":"\u5b57\u7b26\u4e32\u4e0e\u5b57\u8282slice\u4e4b\u95f4\u76f8\u4e92\u8f6c\u6362","text":"<p>\u5b57\u7b26\u4e32\u548c\u5b57\u8282slice\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u8f6c\u6362\uff1a</p> <pre><code>s := \"abc\"\nb := []byte(s)\ns2 := string(b)\n</code></pre> <p>\u4ece\u6982\u5ff5\u4e0a\u8bb2\uff0c\u4e00\u4e2a[]byte(s)\u8f6c\u6362\u662f\u5206\u914d\u4e86\u4e00\u4e2a\u65b0\u7684\u5b57\u8282\u6570\u7ec4\u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u4e32\u6570\u636e\u7684\u62f7\u8d1d\uff0c\u7136\u540e\u5f15\u7528\u8fd9\u4e2a\u5e95\u5c42\u7684\u5b57\u8282\u6570\u7ec4\u3002</p> <p>\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u53ef\u4ee5\u907f\u514d\u5728\u4e00\u4e9b\u573a\u666f\u4e0b\u5206\u914d\u548c\u590d\u5236\u5b57\u7b26\u4e32\u6570\u636e\uff0c\u4f46\u603b\u7684\u6765\u8bf4\u9700\u8981\u786e\u4fdd\u5728\u53d8\u91cfb\u88ab\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\uff0c\u539f\u59cb\u7684s\u5b57\u7b26\u4e32\u4e5f\u4e0d\u4f1a\u6539\u53d8\u3002\u5c06\u4e00\u4e2a\u5b57\u8282slice\u8f6c\u6362\u5230\u5b57\u7b26\u4e32\u7684string(b)\u64cd\u4f5c\u5219\u662f\u6784\u9020\u4e00\u4e2a\u5b57\u7b26\u4e32\u62f7\u8d1d\uff0c\u4ee5\u786e\u4fdds2\u5b57\u7b26\u4e32\u662f\u53ea\u8bfb\u7684\u3002</p> <p>bytes\u5305\u8fd8\u63d0\u4f9b\u4e86Buffer\u7c7b\u578b\u7528\u4e8e\u5b57\u8282slice\u7684\u7f13\u5b58\u3002\u4e00\u4e2aBuffer\u5f00\u59cb\u662f\u7a7a\u7684\uff0c\u4f46\u662f\u968f\u7740string\u3001byte\u6216[]byte\u7b49\u7c7b\u578b\u6570\u636e\u7684\u5199\u5165\u53ef\u4ee5\u52a8\u6001\u589e\u957f\uff0c\u4e00\u4e2abytes.Buffer\u53d8\u91cf\u5e76\u4e0d\u9700\u8981\u521d\u59cb\u5316\uff0c\u56e0\u4e3a\u96f6\u503c\u4e5f\u662f\u6709\u6548\u7684</p>"},{"location":"software_development/backend/language/Go/#_25","title":"\u5b57\u7b26\u4e32\u548c\u6570\u5b57\u7684\u8f6c\u6362","text":""},{"location":"software_development/backend/language/Go/#_26","title":"\u6574\u6570\u8f6c\u4e3a\u5b57\u7b26\u4e32","text":"<p>\u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u4e3a\u5b57\u7b26\u4e32\uff0c\u6709\u4e24\u79cd\u65b9\u6cd5</p> <ol> <li>\u4e00\u79cd\u65b9\u6cd5\u662f\u7528fmt.Sprintf\u8fd4\u56de\u4e00\u4e2a\u683c\u5f0f\u5316\u7684\u5b57\u7b26\u4e32\uff1b</li> <li>\u53e6\u4e00\u4e2a\u65b9\u6cd5\u662f\u7528strconv.Itoa(\u201c\u6574\u6570\u5230ASCII\u201d)\uff1a</li> </ol> <pre><code>x := 123\ny := fmt.Sprintf(\"%d\", x)\nfmt.Println(y, strconv.Itoa(x)) // \"123 123\"\n</code></pre> <p>FormatInt\u548cFormatUint\u51fd\u6570\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u8fdb\u5236\u6765\u683c\u5f0f\u5316\u6570\u5b57\uff1a</p> <pre><code>fmt.Println(strconv.FormatInt(int64(x), 2)) // \"1111011\"\n</code></pre> <p>fmt.Printf\u51fd\u6570\u7684%b\u3001%d\u3001%o\u548c%x\u7b49\u53c2\u6570\u63d0\u4f9b\u529f\u80fd\u5f80\u5f80\u6bd4strconv\u5305\u7684Format\u51fd\u6570\u65b9\u4fbf\u5f88\u591a\uff0c\u7279\u522b\u662f\u5728\u9700\u8981\u5305\u542b\u6709\u9644\u52a0\u989d\u5916\u4fe1\u606f\u7684\u65f6\u5019\uff1a</p> <pre><code>s := fmt.Sprintf(\"x=%b\", x) // \"x=1111011\"\n</code></pre>"},{"location":"software_development/backend/language/Go/#_27","title":"\u5b57\u7b26\u4e32\u89e3\u6790\u4e3a\u6574\u6570","text":"<p>\u5982\u679c\u8981\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u89e3\u6790\u4e3a\u6574\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528strconv\u5305\u7684Atoi\u6216ParseInt\u51fd\u6570\uff0c\u8fd8\u6709\u7528\u4e8e\u89e3\u6790\u65e0\u7b26\u53f7\u6574\u6570\u7684ParseUint\u51fd\u6570\uff1a</p> <pre><code>x, err := strconv.Atoi(\"123\")             // x is an int\ny, err := strconv.ParseInt(\"123\", 10, 64) // base 10, up to 64 bits\n</code></pre> <p>ParseInt\u51fd\u6570\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u7528\u4e8e\u6307\u5b9a\u6574\u578b\u6570\u7684\u5927\u5c0f\uff1b\u4f8b\u598216\u8868\u793aint16\uff0c0\u5219\u8868\u793aint\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u8fd4\u56de\u7684\u7ed3\u679cy\u603b\u662fint64\u7c7b\u578b\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u5c06\u5b83\u8f6c\u4e3a\u66f4\u5c0f\u7684\u6574\u6570\u7c7b\u578b\u3002</p> <p>\u6709\u65f6\u5019\u4e5f\u4f1a\u4f7f\u7528fmt.Scanf\u6765\u89e3\u6790\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u548c\u6570\u5b57\uff0c\u7279\u522b\u662f\u5f53\u5b57\u7b26\u4e32\u548c\u6570\u5b57\u6df7\u5408\u5728\u4e00\u884c\u7684\u65f6\u5019\uff0c\u5b83\u53ef\u4ee5\u7075\u6d3b\u5904\u7406\u4e0d\u5b8c\u6574\u6216\u4e0d\u89c4\u5219\u7684\u8f93\u5165\u3002</p>"},{"location":"software_development/backend/language/Go/#_28","title":"\u5e38\u91cf","text":"<p>\u548c\u53d8\u91cf\u58f0\u660e\u7c7b\u4f3c\uff0cGo\u5e38\u91cf\u58f0\u660e\u6ca1\u6709\u89c4\u5b9a\u9700\u8981\u6807\u6ce8\u7c7b\u578b\uff0c\u5373\u7f16\u8bd1\u5668\u53ef\u4ee5\u81ea\u884c\u63a8\u65ad</p> <pre><code>// \u7b49\u4ef7\u8868\u8fbe\nconst integer = 123\nconst integer int = 123\n</code></pre> <p>\u5e38\u91cf\u7684\u503c\u5728\u7f16\u8bd1\u65f6\u8ba1\u7b97\u5e76\u786e\u5b9a\uff0c\u5e38\u91cf\u503c\u4e0d\u53ef\u4fee\u6539\uff08\u56e0\u6b64\u53ef\u4ee5\u6307\u5b9a\u6570\u7ec4\u7c7b\u578b\u7684\u957f\u5ea6\uff09</p> <p>\u5355\u4e2a\u58f0\u660e</p> <pre><code>const pi = 3.14159 // approximately; math.Pi is a better approximation\n</code></pre> <p>\u548c\u53d8\u91cf\u58f0\u660e\u4e00\u6837\uff0c\u53ef\u4ee5\u6279\u91cf\u58f0\u660e\u591a\u4e2a\u5e38\u91cf\uff1b\u8fd9\u6bd4\u8f83\u9002\u5408\u58f0\u660e\u4e00\u7ec4\u76f8\u5173\u7684\u5e38\u91cf\uff1a</p> <pre><code>const (\n    e  = 2.71828182845904523536028747135266249775724709369995957496696763\n    pi = 3.14159265358979323846264338327950288419716939937510582097494459\n)\n</code></pre> <p>iota\u5e38\u91cf\u751f\u6210\u5668</p> <p>\u5e38\u91cf\u58f0\u660e\u53ef\u4ee5\u4f7f\u7528iota\u5e38\u91cf\u751f\u6210\u5668\u521d\u59cb\u5316\uff0c\u5b83\u7528\u4e8e\u751f\u6210\u4e00\u7ec4\u4ee5\u76f8\u4f3c\u89c4\u5219\u521d\u59cb\u5316\u7684\u5e38\u91cf\uff0c\u4f46\u662f\u4e0d\u7528\u6bcf\u884c\u90fd\u5199\u4e00\u904d\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u3002\u5728\u4e00\u4e2aconst\u58f0\u660e\u8bed\u53e5\u4e2d\uff0c\u5728\u7b2c\u4e00\u4e2a\u58f0\u660e\u7684\u5e38\u91cf\u6240\u5728\u7684\u884c\uff0ciota\u5c06\u4f1a\u88ab\u7f6e\u4e3a0\uff0c\u7136\u540e\u5728\u6bcf\u4e00\u4e2a\u6709\u5e38\u91cf\u58f0\u660e\u7684\u884c\u52a0\u4e00\u3002</p> <p>\u4e0b\u9762\u662f\u6765\u81eatime\u5305\u7684\u4f8b\u5b50\uff0c\u5b83\u9996\u5148\u5b9a\u4e49\u4e86\u4e00\u4e2aWeekday\u547d\u540d\u7c7b\u578b\uff0c\u7136\u540e\u4e3a\u4e00\u5468\u7684\u6bcf\u5929\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5e38\u91cf\uff0c\u4ece\u5468\u65e50\u5f00\u59cb\u3002\u5728\u5176\u5b83\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u8fd9\u79cd\u7c7b\u578b\u4e00\u822c\u88ab\u79f0\u4e3a\u679a\u4e3e\u7c7b\u578b\u3002</p> <pre><code>type Weekday int\n\nconst (\n    Sunday Weekday = iota\n    Monday\n    Tuesday\n    Wednesday\n    Thursday\n    Friday\n    Saturday\n)\n</code></pre> <p>\u5468\u65e5\u5c06\u5bf9\u5e940\uff0c\u5468\u4e00\u4e3a1\uff0c\u5982\u6b64\u7b49\u7b49\u3002</p>"},{"location":"software_development/backend/language/Go/#_29","title":"\u590d\u5408\u6570\u636e\u7ed3\u6784","text":""},{"location":"software_development/backend/language/Go/#_30","title":"\u6570\u7ec4","text":"<p>\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u76f8\u540c\u7684\u7c7b\u578b</p>"},{"location":"software_development/backend/language/Go/#_31","title":"\u5b9a\u957f\u6570\u7ec4","text":"<p>\u5f62\u5982<code>var a [3]int</code></p> <p>\u5185\u7f6e\u7684len\u51fd\u6570\u5c06\u8fd4\u56de\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\u3002</p> <p>\u6570\u7ec4\u7684\u957f\u5ea6\u9700\u8981\u5728\u7f16\u8bd1\u9636\u6bb5\u786e\u5b9a\uff08\u6570\u7ec4\u7684\u957f\u5ea6\u5fc5\u987b\u662f\u5e38\u91cf\u8868\u8fbe\u5f0f\uff09</p> <p>\u521d\u59cb\u5316</p> <p>\u4ee5\u4e0b\u5c55\u793a\u4e86\u591a\u79cd\u521d\u59cb\u5316\u65b9\u6cd5</p> <pre><code>package main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    var arr0 [3]int = [3]int{1, 2, 3}\n\n    var arr1 [3]int\n    arr1[0] = 1\n    arr1[1] = 2\n    arr1[2] = 3\n\n    arr2 := [3]int{}\n    arr2[0] = 1\n    arr2[1] = 2\n    arr2[2] = 3\n\n    arr3 := [3]int{1, 2, 3}\n\n    arr4 := [...]int{1, 2, 3}\n\n    fmt.Println(arr0)\n    fmt.Println(arr1)\n    fmt.Println(arr2)\n    fmt.Println(arr3)\n    fmt.Println(arr4)\n}\n</code></pre> <p>\u5728\u6570\u7ec4\u5b57\u9762\u503c\u4e2d\uff0c\u5982\u679c\u5728\u6570\u7ec4\u7684\u957f\u5ea6\u4f4d\u7f6e\u51fa\u73b0\u7684\u662f\u201c...\u201d\u7701\u7565\u53f7\uff0c\u5219\u8868\u793a\u6570\u7ec4\u7684\u957f\u5ea6\u662f\u6839\u636e\u521d\u59cb\u5316\u503c\u7684\u4e2a\u6570\u6765\u8ba1\u7b97\u3002\u56e0\u6b64\uff0c\u4e0a\u9762q\u6570\u7ec4\u7684\u5b9a\u4e49\u53ef\u4ee5\u7b80\u5316\u4e3a</p> <pre><code>q := [...]int{1, 2, 3}\nfmt.Printf(\"%T\\n\", q) // \"[3]int\"\n</code></pre> <pre><code>r := [...]int{99: -1}\n</code></pre> <p>\u5b9a\u4e49\u4e86\u4e00\u4e2a\u542b\u6709100\u4e2a\u5143\u7d20\u7684\u6570\u7ec4r\uff0c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u88ab\u521d\u59cb\u5316\u4e3a-1\uff0c\u5176\u5b83\u5143\u7d20\u90fd\u662f\u75280\u521d\u59cb\u5316\u3002</p> <p>\u548cC\u7c7b\u4f3c\uff0c\u6570\u7ec4\u7684\u6307\u9488\u53ef\u4ee5\u4f7f\u7528\u7d22\u5f15\uff0c\u5982\u4e0b\uff1a</p> <pre><code>package main\n\nimport (\n    \"fmt\"\n)\n\nfunc modifyArray(ptr *[32]byte) {\n    var cnt byte = 1\n    for i := range ptr {\n        ptr[i] = cnt\n        cnt++\n    }\n}\n\nfunc main() {\n    ptr := &amp;[32]byte{}\n    fmt.Println(ptr)\n    modifyArray(ptr)\n    fmt.Println(ptr)\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#slice_1","title":"\u53d8\u957f\u6570\u7ec4\uff1a\u5207\u7247Slice","text":""},{"location":"software_development/backend/language/Go/#slice_2","title":"slice\u4e09\u8981\u7d20","text":"<p>\u5f62\u5982<code>var a []int</code>\u6216<code>s[i:j]</code></p> <p>\u662f\u6570\u7ec4\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u7531\u4e09\u4e2a\u90e8\u5206\u6784\u6210\uff1a\u6307\u9488\u3001\u957f\u5ea6\u548c\u5bb9\u91cf</p> <ul> <li>\u6307\u9488\u6307\u5411\u7b2c\u4e00\u4e2aslice\u5143\u7d20\u5bf9\u5e94\u7684\u5e95\u5c42\u6570\u7ec4\u5143\u7d20\u7684\u5730\u5740\uff0c\u8981\u6ce8\u610f\u7684\u662fslice\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5e76\u4e0d\u4e00\u5b9a\u5c31\u662f\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002</li> <li>\u957f\u5ea6\u5bf9\u5e94slice\u4e2d\u5143\u7d20\u7684\u6570\u76ee\uff1b\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc7\u5bb9\u91cf</li> <li>\u5bb9\u91cf\u4e00\u822c\u662f\u4eceslice\u7684\u5f00\u59cb\u4f4d\u7f6e\u5230\u5e95\u5c42\u6570\u636e\u7684\u7ed3\u5c3e\u4f4d\u7f6e\u3002</li> </ul> <p>\u5185\u7f6e\u7684len\u548ccap\u51fd\u6570\u5206\u522b\u8fd4\u56deslice\u7684\u957f\u5ea6\u548c\u5bb9\u91cf\u3002</p> <pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n    s := [10]int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}\n    t := s[2:5]\n    fmt.Println(len(t))\n    fmt.Println(cap(t))\n}\n\n//output: 3 8\n</code></pre> <p></p> <p>\u5982\u679c\u5207\u7247\u64cd\u4f5c\u8d85\u51facap(s)\u7684\u4e0a\u9650\u5c06\u5bfc\u81f4\u4e00\u4e2apanic\u5f02\u5e38\uff0c\u4f46\u662f\u8d85\u51falen(s)\u5219\u662f\u610f\u5473\u7740\u6269\u5c55\u4e86slice\uff0c\u56e0\u4e3a\u65b0slice\u7684\u957f\u5ea6\u4f1a\u53d8\u5927\uff1a</p> <pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n    s := [10]int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}\n    t := s[2:5]\n    fmt.Println(len(t)) // 3\n    fmt.Println(cap(t)) // 8\n  // len(t) + 1\u8d85\u51fa\u4e86\u539f\u5207\u7247t\u7684len\n    p := t[:len(t)+1]\n    fmt.Println(len(p)) // 4\n    fmt.Println(cap(p)) // 8\n    fmt.Println(p) // 2 3 4 5\n}\n</code></pre> <p>\u56e0\u4e3aslice\u503c\u5305\u542b\u6307\u5411\u7b2c\u4e00\u4e2aslice\u5143\u7d20\u7684\u6307\u9488\uff0c\u56e0\u6b64\u5411\u51fd\u6570\u4f20\u9012slice\u5c06\u5141\u8bb8\u5728\u51fd\u6570\u5185\u90e8\u4fee\u6539\u5e95\u5c42\u6570\u7ec4\u7684\u5143\u7d20\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u590d\u5236\u4e00\u4e2aslice\u53ea\u662f\u5bf9\u5e95\u5c42\u7684\u6570\u7ec4\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684slice\u522b\u540d\u3002</p> <p>\u4e0b\u9762\u7684reverse\u51fd\u6570\u5728\u539f\u5185\u5b58\u7a7a\u95f4\u5c06[]int\u7c7b\u578b\u7684slice\u53cd\u8f6c\uff0c\u800c\u4e14\u5b83\u53ef\u4ee5\u7528\u4e8e\u4efb\u610f\u957f\u5ea6\u7684slice\u3002</p> <pre><code>// reverse reverses a slice of ints in place.\nfunc reverse(s []int) {\n    for i, j := 0, len(s)-1; i &lt; j; i, j = i+1, j-1 {\n        s[i], s[j] = s[j], s[i]\n    }\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#makeslice","title":"\u4f7f\u7528make\u521b\u5efaslice","text":"<p>\u5185\u7f6e\u7684make\u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u6307\u5b9a\u5143\u7d20\u7c7b\u578b\u3001\u957f\u5ea6\u548c\u5bb9\u91cf\u7684slice\u3002\u5bb9\u91cf\u90e8\u5206\u53ef\u4ee5\u7701\u7565\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5bb9\u91cf\u5c06\u7b49\u4e8e\u957f\u5ea6\u3002</p> <pre><code>make([]T, len)\nmake([]T, len, cap) // same as make([]T, cap)[:len]\n</code></pre> <p>\u5728\u5e95\u5c42\uff0cmake\u521b\u5efa\u4e86\u4e00\u4e2a\u533f\u540d\u7684\u6570\u7ec4\u53d8\u91cf\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2aslice\uff1b\u53ea\u6709\u901a\u8fc7\u8fd4\u56de\u7684slice\u624d\u80fd\u5f15\u7528\u5e95\u5c42\u533f\u540d\u7684\u6570\u7ec4\u53d8\u91cf\u3002\u5728\u7b2c\u4e00\u79cd\u8bed\u53e5\u4e2d\uff0cslice\u662f\u6574\u4e2a\u6570\u7ec4\u7684view\u3002\u5728\u7b2c\u4e8c\u4e2a\u8bed\u53e5\u4e2d\uff0cslice\u53ea\u5f15\u7528\u4e86\u5e95\u5c42\u6570\u7ec4\u7684\u524dlen\u4e2a\u5143\u7d20\uff0c\u4f46\u662f\u5bb9\u91cf\u5c06\u5305\u542b\u6574\u4e2a\u7684\u6570\u7ec4\u3002\u989d\u5916\u7684\u5143\u7d20\u662f\u7559\u7ed9\u672a\u6765\u7684\u589e\u957f\u7528\u7684\u3002</p>"},{"location":"software_development/backend/language/Go/#slice_3","title":"slice\u7684\u6bd4\u8f83","text":"<p>\u548c\u6570\u7ec4\u4e0d\u540c\u7684\u662f\uff0cslice\u4e4b\u95f4\u4e0d\u80fd\u6bd4\u8f83\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528==\u64cd\u4f5c\u7b26\u6765\u5224\u65ad\u4e24\u4e2aslice\u662f\u5426\u542b\u6709\u5168\u90e8\u76f8\u7b49\u5143\u7d20\u3002\u4e0d\u8fc7\u6807\u51c6\u5e93\u63d0\u4f9b\u4e86\u9ad8\u5ea6\u4f18\u5316\u7684bytes.Equal\u51fd\u6570\u6765\u5224\u65ad\u4e24\u4e2a\u5b57\u8282\u578bslice\u662f\u5426\u76f8\u7b49\uff08[]byte\uff09\uff0c\u4f46\u662f\u5bf9\u4e8e\u5176\u4ed6\u7c7b\u578b\u7684slice\uff0c\u6211\u4eec\u5fc5\u987b\u81ea\u5df1\u5c55\u5f00\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u6bd4\u8f83\uff1a</p> <pre><code>func equal(x, y []string) bool {\n    if len(x) != len(y) {\n        return false\n    }\n    for i := range x {\n        if x[i] != y[i] {\n            return false\n        }\n    }\n    return true\n}\n</code></pre> <p>slice\u552f\u4e00\u5408\u6cd5\u7684\u6bd4\u8f83\u64cd\u4f5c\u662f\u548cnil\u6bd4\u8f83\uff0c\u4f8b\u5982\uff1a</p> <pre><code>if summer == nil { /* ... */ }\n</code></pre>"},{"location":"software_development/backend/language/Go/#slice_4","title":"slice\u7684\u7279\u6b8a\u503c","text":"<p>\u96f6\u503c\uff1a</p> <ul> <li>\u4e00\u4e2a\u96f6\u503c\u7684slice\u7b49\u4e8enil\u3002</li> <li>\u4e00\u4e2anil\u503c\u7684slice\u5e76\u6ca1\u6709\u5e95\u5c42\u6570\u7ec4\u3002</li> <li>\u4e00\u4e2anil\u503c\u7684slice\u7684\u957f\u5ea6\u548c\u5bb9\u91cf\u90fd\u662f0</li> </ul> <p>\u975e\u96f6\u503c\u4f46\u662f\u957f\u5ea6\u548c\u5bb9\u91cf\u4e3a0</p> <ul> <li>\u4f8b\u5982[]int{}</li> <li>\u4f8b\u5982make([]int, 3)[3:]</li> </ul> <pre><code>var s []int    // len(s) == 0, s == nil\ns = nil        // len(s) == 0, s == nil\ns = []int(nil) // len(s) == 0, s == nil\ns = []int{}    // len(s) == 0, s != nil\n</code></pre> <p>\u5982\u679c\u9700\u8981\u6d4b\u8bd5\u4e00\u4e2aslice\u662f\u5426\u662f\u7a7a\u7684\uff0c\u4f7f\u7528len(s) == 0\u6765\u5224\u65ad</p>"},{"location":"software_development/backend/language/Go/#append","title":"append\u51fd\u6570","text":"<p>\u5177\u4f53\u770b\u8fd9\u4e2a</p> <p>https://golang-china.github.io/gopl-zh/ch4/ch4-02.html#:~:text=4.2.1.%20append-,%E5%87%BD%E6%95%B0,-%E5%86%85%E7%BD%AE%E7%9A%84</p> <p>\u8c03\u7528\u65b9\u6cd5\uff1a</p> <p>\u6211\u4eec\u4e0d\u80fd\u786e\u8ba4\u65b0\u7684slice\u548c\u539f\u59cb\u7684slice\u662f\u5426\u5f15\u7528\u7684\u662f\u76f8\u540c\u7684\u5e95\u5c42\u6570\u7ec4\u7a7a\u95f4\u3002\u540c\u6837\uff0c\u6211\u4eec\u4e0d\u80fd\u786e\u8ba4\u5728\u539f\u5148\u7684slice\u4e0a\u7684\u64cd\u4f5c\u662f\u5426\u4f1a\u5f71\u54cd\u5230\u65b0\u7684slice\u3002\u56e0\u6b64\uff0c\u901a\u5e38\u662f\u5c06append\u8fd4\u56de\u7684\u7ed3\u679c\u76f4\u63a5\u8d4b\u503c\u7ed9\u8f93\u5165\u7684slice\u53d8\u91cf\uff1a</p> <pre><code>runes = append(runes, r)\n</code></pre> <p>\u5185\u7f6e\u7684append\u51fd\u6570\u5219\u53ef\u4ee5\u8ffd\u52a0\u591a\u4e2a\u5143\u7d20\uff0c\u751a\u81f3\u8ffd\u52a0\u4e00\u4e2aslice\u3002</p> <pre><code>var x []int\nx = append(x, 1)\nx = append(x, 2, 3)\nx = append(x, 4, 5, 6)\nx = append(x, x...) // append the slice x\nfmt.Println(x)      // \"[1 2 3 4 5 6 1 2 3 4 5 6]\"\n</code></pre>"},{"location":"software_development/backend/language/Go/#slice_5","title":"slice\u7684\u5e94\u7528","text":"<p>\u5bf9\u4e8eslice\u7b49\u5f15\u7528\u7c7b\u578b\uff0c\u901a\u5e38\u91c7\u7528<code>\u65b0slice = function(\u65e7slice, \u5176\u4ed6\u53c2\u6570)</code>\u7684\u65b9\u6cd5\u8c03\u7528\u51fd\u6570</p> <p>\u5982\u4e0b\u4f8b\uff1a</p> <p>\u4e0b\u9762\u7684nonempty\u51fd\u6570\u5c06\u5728\u539f\u6709slice\u5185\u5b58\u7a7a\u95f4\u4e4b\u4e0a\u8fd4\u56de\u4e0d\u5305\u542b\u7a7a\u5b57\u7b26\u4e32\u7684\u5217\u8868\uff1a</p> <p>gopl.io/ch4/nonempty</p> <pre><code>// Nonempty is an example of an in-place slice algorithm.\npackage main\n\nimport \"fmt\"\n\n// nonempty returns a slice holding only the non-empty strings.\n// The underlying array is modified during the call.\nfunc nonempty(strings []string) []string {\n    i := 0\n    for _, s := range strings {\n        if s != \"\" {\n            strings[i] = s\n            i++\n        }\n    }\n    return strings[:i]\n}\n</code></pre> <p>\u6bd4\u8f83\u5fae\u5999\u7684\u5730\u65b9\u662f\uff0c\u8f93\u5165\u7684slice\u548c\u8f93\u51fa\u7684slice\u5171\u4eab\u4e00\u4e2a\u5e95\u5c42\u6570\u7ec4\u3002\u8fd9\u53ef\u4ee5\u907f\u514d\u5206\u914d\u53e6\u4e00\u4e2a\u6570\u7ec4\uff0c\u4e0d\u8fc7\u539f\u6765\u7684\u6570\u636e\u5c06\u53ef\u80fd\u4f1a\u88ab\u8986\u76d6\uff0c\u6b63\u5982\u4e0b\u9762\u4e24\u4e2a\u6253\u5370\u8bed\u53e5\u770b\u5230\u7684\u90a3\u6837\uff1a</p> <pre><code>data := []string{\"one\", \"\", \"three\"}\nfmt.Printf(\"%q\\n\", nonempty(data)) // `[\"one\" \"three\"]`\nfmt.Printf(\"%q\\n\", data)           // `[\"one\" \"three\" \"three\"]`\n</code></pre> <p>\u56e0\u6b64\u6211\u4eec\u901a\u5e38\u4f1a\u8fd9\u6837\u4f7f\u7528nonempty\u51fd\u6570\uff1a<code>data = nonempty(data)</code>\u3002</p> <p>slice\u6a21\u62df\u6808</p> <p>\u4e00\u4e2aslice\u53ef\u4ee5\u7528\u6765\u6a21\u62df\u4e00\u4e2astack\u3002\u6700\u521d\u7ed9\u5b9a\u7684\u7a7aslice\u5bf9\u5e94\u4e00\u4e2a\u7a7a\u7684stack\uff0c\u7136\u540e\u53ef\u4ee5\u4f7f\u7528append\u51fd\u6570\u5c06\u65b0\u7684\u503c\u538b\u5165stack\uff1a</p> <pre><code>stack = append(stack, v) // push v\n</code></pre> <p>stack\u7684\u9876\u90e8\u4f4d\u7f6e\u5bf9\u5e94slice\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff1a</p> <pre><code>top := stack[len(stack)-1] // top of stack\n</code></pre> <p>\u901a\u8fc7\u6536\u7f29stack\u53ef\u4ee5\u5f39\u51fa\u6808\u9876\u7684\u5143\u7d20</p> <pre><code>stack = stack[:len(stack)-1] // pop\n</code></pre> <p>\u8981\u5220\u9664slice\u4e2d\u95f4\u7684\u67d0\u4e2a\u5143\u7d20\u5e76\u4fdd\u5b58\u539f\u6709\u7684\u5143\u7d20\u987a\u5e8f\uff0c\u53ef\u4ee5\u901a\u8fc7\u5185\u7f6e\u7684copy\u51fd\u6570\u5c06\u540e\u9762\u7684\u5b50slice\u5411\u524d\u4f9d\u6b21\u79fb\u52a8\u4e00\u4f4d\u5b8c\u6210\uff1a</p> <pre><code>func remove(slice []int, i int) []int {\n    copy(slice[i:], slice[i+1:])\n    return slice[:len(slice)-1]\n}\n\nfunc main() {\n    s := []int{5, 6, 7, 8, 9}\n    fmt.Println(remove(s, 2)) // \"[5 6 8 9]\"\n}\n</code></pre> <p>\u5982\u679c\u5220\u9664\u5143\u7d20\u540e\u4e0d\u7528\u4fdd\u6301\u539f\u6765\u987a\u5e8f\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u7528\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u8986\u76d6\u88ab\u5220\u9664\u7684\u5143\u7d20\uff1a</p> <pre><code>func remove(slice []int, i int) []int {\n    slice[i] = slice[len(slice)-1]\n    return slice[:len(slice)-1]\n}\n\nfunc main() {\n    s := []int{5, 6, 7, 8, 9}\n    fmt.Println(remove(s, 2)) // \"[5 6 9 8]\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#map","title":"Map","text":"<p>\u5728Go\u8bed\u8a00\u4e2d\uff0c\u4e00\u4e2amap\u5c31\u662f\u4e00\u4e2a\u54c8\u5e0c\u8868\u7684\u5f15\u7528\uff0cmap\u7c7b\u578b\u53ef\u4ee5\u5199\u4e3amap[K]V\uff0c\u5176\u4e2dK\u548cV\u5206\u522b\u5bf9\u5e94key\u548cvalue\u3002map\u4e2d\u6240\u6709\u7684key\u90fd\u6709\u76f8\u540c\u7684\u7c7b\u578b\uff0c\u6240\u6709\u7684value\u4e5f\u6709\u7740\u76f8\u540c\u7684\u7c7b\u578b\uff0c\u4f46\u662fkey\u548cvalue\u4e4b\u95f4\u53ef\u4ee5\u662f\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u3002\u5176\u4e2dK\u5bf9\u5e94\u7684key\u5fc5\u987b\u662f\u652f\u6301==\u6bd4\u8f83\u8fd0\u7b97\u7b26\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6240\u4ee5map\u53ef\u4ee5\u901a\u8fc7\u6d4b\u8bd5key\u662f\u5426\u76f8\u7b49\u6765\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u3002</p>"},{"location":"software_development/backend/language/Go/#map_1","title":"Map\u7684\u521d\u59cb\u5316","text":"<p>\u65b9\u6cd5\u4e00</p> <pre><code>map3 := map[string]int{\n    \"mike\": 18,\n    \"amy\":  21,\n}\n</code></pre> <p>\u65b9\u6cd5\u4e8c </p> <pre><code>map4 := make(map[string]int)\n// \u6216\u8005\u7b80\u5199\u4e3a: map4 := map[string]int{}\nmap4[\"mike\"] = 18\nmap4[\"amy\"] = 21\n</code></pre>"},{"location":"software_development/backend/language/Go/#_32","title":"\u96f6\u503c","text":"<p>map\u7c7b\u578b\u7684\u96f6\u503c\u662fnil\uff0c\u4e5f\u5c31\u662f\u6ca1\u6709\u5f15\u7528\u4efb\u4f55\u54c8\u5e0c\u8868</p>"},{"location":"software_development/backend/language/Go/#_33","title":"\u57fa\u672c\u64cd\u4f5c","text":"<p>\u6240\u6709\u8fd9\u4e9b\u64cd\u4f5c\u662f\u5b89\u5168\u7684\uff0c\u5373\u4f7f\u8fd9\u4e9b\u5143\u7d20\u4e0d\u5728map\u4e2d\u4e5f\u6ca1\u6709\u5173\u7cfb</p>"},{"location":"software_development/backend/language/Go/#_34","title":"\u8bbf\u95ee","text":"<p>Map\u4e2d\u7684\u5143\u7d20\u901a\u8fc7key\u5bf9\u5e94\u7684\u4e0b\u6807\u8bed\u6cd5\u8bbf\u95ee\uff1a</p> <pre><code>ages[\"alice\"] = 32\nfmt.Println(ages[\"alice\"]) // \"32\"\n</code></pre> <p>\u901a\u8fc7key\u4f5c\u4e3a\u7d22\u5f15\u4e0b\u6807\u6765\u8bbf\u95eemap\u5c06\u4ea7\u751f\u4e00\u4e2avalue\u3002\u5982\u679ckey\u5728map\u4e2d\u662f\u5b58\u5728\u7684\uff0c\u90a3\u4e48\u5c06\u5f97\u5230\u4e0ekey\u5bf9\u5e94\u7684value\uff1b\u5982\u679ckey\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u5c06\u5f97\u5230value\u5bf9\u5e94\u7c7b\u578b\u7684\u96f6\u503c</p> <p>\u5982\u679c\u60f3\u8981\u77e5\u9053\u5bf9\u5e94\u7684\u5143\u7d20\u662f\u5426\u771f\u7684\u662f\u5728map\u4e4b\u4e2d</p> <pre><code>age, ok := ages[\"bob\"]\nif !ok { /* \"bob\" is not a key in this map; age == 0. */ }\n</code></pre> <p>\u4f60\u4f1a\u7ecf\u5e38\u770b\u5230\u5c06\u8fd9\u4e24\u4e2a\u7ed3\u5408\u8d77\u6765\u4f7f\u7528\uff0c\u50cf\u8fd9\u6837\uff1a</p> <pre><code>if age, ok := ages[\"bob\"]; !ok { /* ... */ }\n</code></pre> <p>\u4f46\u662fmap\u4e2d\u7684\u5143\u7d20\u5e76\u4e0d\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u80fd\u5bf9map\u7684\u5143\u7d20\u8fdb\u884c\u53d6\u5740\u64cd\u4f5c\uff1a</p> <pre><code>_ = &amp;ages[\"bob\"] // compile error: cannot take address of map element\n</code></pre> <p>\u7981\u6b62\u5bf9map\u5143\u7d20\u53d6\u5740\u7684\u539f\u56e0\u662fmap\u53ef\u80fd\u968f\u7740\u5143\u7d20\u6570\u91cf\u7684\u589e\u957f\u800c\u91cd\u65b0\u5206\u914d\u66f4\u5927\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u4ece\u800c\u53ef\u80fd\u5bfc\u81f4\u4e4b\u524d\u7684\u5730\u5740\u65e0\u6548\u3002</p>"},{"location":"software_development/backend/language/Go/#_35","title":"\u5220\u9664\u5143\u7d20","text":"<p>\u4f7f\u7528\u5185\u7f6e\u7684delete\u51fd\u6570\u53ef\u4ee5\u5220\u9664\u5143\u7d20\uff1a</p> <pre><code>delete(ages, \"alice\") // remove element ages[\"alice\"]\n</code></pre>"},{"location":"software_development/backend/language/Go/#_36","title":"\u904d\u5386","text":"<pre><code>for key, value := range MapName {\n    fmt.Printf(\"%s\\t%d\\n\", key, value)\n}\n</code></pre> <p>Map\u7684\u8fed\u4ee3\u987a\u5e8f\u662f\u4e0d\u786e\u5b9a\u7684</p> <p>\u5982\u679c\u8981\u6309\u987a\u5e8f\u904d\u5386key/value\u5bf9\uff0c\u6211\u4eec\u5fc5\u987b\u663e\u5f0f\u5730\u5bf9key\u8fdb\u884c\u6392\u5e8f\uff0c\u53ef\u4ee5\u4f7f\u7528sort\u5305\u7684Strings\u51fd\u6570\u5bf9\u5b57\u7b26\u4e32slice\u8fdb\u884c\u6392\u5e8f\u3002\u4e0b\u9762\u662f\u5e38\u89c1\u7684\u5904\u7406\u65b9\u5f0f\uff1a</p> <pre><code>import \"sort\"\n\nvar names []string\nfor name := range ages {\n    names = append(names, name)\n}\nsort.Strings(names)\nfor _, name := range names {\n    fmt.Printf(\"%s\\t%d\\n\", name, ages[name])\n}\n</code></pre> <p>\u56e0\u4e3a\u6211\u4eec\u4e00\u5f00\u59cb\u5c31\u77e5\u9053names\u7684\u6700\u7ec8\u5927\u5c0f\uff0c\u56e0\u6b64\u7ed9slice\u5206\u914d\u4e00\u4e2a\u5408\u9002\u7684\u5927\u5c0f\u5c06\u4f1a\u66f4\u6709\u6548\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2a\u7a7a\u7684slice\uff0c\u4f46\u662fslice\u7684\u5bb9\u91cf\u521a\u597d\u53ef\u4ee5\u653e\u4e0bmap\u4e2d\u5168\u90e8\u7684key\uff1a</p> <pre><code>names := make([]string, 0, len(ages))\n</code></pre>"},{"location":"software_development/backend/language/Go/#_37","title":"\u6bd4\u8f83","text":"<p>\u548cslice\u4e00\u6837\uff0cmap\u4e4b\u95f4\u4e5f\u4e0d\u80fd\u8fdb\u884c\u76f8\u7b49\u6bd4\u8f83\uff1b\u552f\u4e00\u7684\u4f8b\u5916\u662f\u548cnil\u8fdb\u884c\u6bd4\u8f83\u3002\u8981\u5224\u65ad\u4e24\u4e2amap\u662f\u5426\u5305\u542b\u76f8\u540c\u7684key\u548cvalue\uff0c\u6211\u4eec\u5fc5\u987b\u901a\u8fc7\u4e00\u4e2a\u5faa\u73af\u5b9e\u73b0\uff1a</p> <pre><code>func equal(x, y map[string]int) bool {\n    if len(x) != len(y) {\n        return false\n    }\n    for k, xv := range x {\n        if yv, ok := y[k]; !ok || yv != xv {\n            return false\n        }\n    }\n    return true\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#keyslice","title":"\u5982\u679ckey\u60f3\u8981\u662fslice\u7b49\u4e0d\u53ef\u6bd4\u8f83\u7684\u7c7b\u578b","text":"<p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e24\u4e2a\u6b65\u9aa4\u7ed5\u8fc7\u8fd9\u4e2a\u9650\u5236\u3002</p> <ol> <li>\u5b9a\u4e49\u4e00\u4e2a\u8f85\u52a9\u51fd\u6570k\uff0c\u5c06slice\u8f6c\u4e3amap\u5bf9\u5e94\u7684string\u7c7b\u578b\u7684key\uff0c\u786e\u4fdd\u53ea\u6709x\u548cy\u76f8\u7b49\u65f6k(x) == k(y)\u624d\u6210\u7acb\u3002</li> <li>\u521b\u5efa\u4e00\u4e2akey\u4e3astring\u7c7b\u578b\u7684map\uff0c\u5728\u6bcf\u6b21\u5bf9map\u64cd\u4f5c\u65f6\u5148\u7528k\u8f85\u52a9\u51fd\u6570\u5c06slice\u8f6c\u5316\u4e3astring\u7c7b\u578b\u3002</li> </ol> <p>\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528map\u6765\u8bb0\u5f55\u63d0\u4ea4\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u5217\u8868\u7684\u6b21\u6570\u3002\u5b83\u4f7f\u7528\u4e86fmt.Sprintf\u51fd\u6570\u5c06\u5b57\u7b26\u4e32\u5217\u8868\u8f6c\u6362\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u4ee5\u7528\u4e8emap\u7684key\uff0c\u901a\u8fc7%q\u53c2\u6570\u5fe0\u5b9e\u5730\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u4e32\u5143\u7d20\u7684\u4fe1\u606f\uff1a</p> <pre><code>var m = make(map[string]int)\n\nfunc k(list []string) string { return fmt.Sprintf(\"%q\", list) }\n\nfunc Add(list []string)       { m[k(list)]++ }\nfunc Count(list []string) int { return m[k(list)] }\n</code></pre>"},{"location":"software_development/backend/language/Go/#_38","title":"\u7ed3\u6784\u4f53","text":""},{"location":"software_development/backend/language/Go/#_39","title":"\u8bbf\u95ee","text":"<p>\u4e0eMap\u4e0d\u540c\uff0c\u7ed3\u6784\u4f53\u6210\u5458\u53ef\u4ee5\u53d6\u5730\u5740,\u7136\u540e\u901a\u8fc7\u6307\u9488\u8bbf\u95ee\uff1a</p> <pre><code>position := &amp;dilbert.Position\n*position = \"Senior \" + *position // promoted, for outsourcing to Elbonia\n</code></pre> <pre><code>employeeOfTheMonth.Position += \" (proactive team player)\"\n</code></pre> <p>\u76f8\u5f53\u4e8e\u4e0b\u9762\u8bed\u53e5</p> <pre><code>(*employeeOfTheMonth).Position += \" (proactive team player)\"\n</code></pre>"},{"location":"software_development/backend/language/Go/#_40","title":"\u6210\u5458","text":"<p>\u5982\u679c\u7ed3\u6784\u4f53\u6210\u5458\u540d\u5b57\u662f\u4ee5\u5927\u5199\u5b57\u6bcd\u5f00\u5934\u7684\uff0c\u90a3\u4e48\u8be5\u6210\u5458\u5c31\u662f\u5bfc\u51fa\u7684</p> <p>\u7ed3\u6784\u4f53\u6210\u5458\u7684\u8f93\u5165\u987a\u5e8f\u4e5f\u6709\u91cd\u8981\u7684\u610f\u4e49\u3002</p> <p>\u7ed3\u6784\u4f53\u7c7b\u578b\u7684\u96f6\u503c\u662f\u6bcf\u4e2a\u6210\u5458\u90fd\u662f\u96f6\u503c\u3002\u901a\u5e38\u4f1a\u5c06\u96f6\u503c\u4f5c\u4e3a\u6700\u5408\u7406\u7684\u9ed8\u8ba4\u503c\u3002</p> <p>\u5982\u679c\u7ed3\u6784\u4f53\u6ca1\u6709\u4efb\u4f55\u6210\u5458\u7684\u8bdd\u5c31\u662f\u7a7a\u7ed3\u6784\u4f53\uff0c\u5199\u4f5cstruct{}\u3002\u5b83\u7684\u5927\u5c0f\u4e3a0\uff0c\u4e5f\u4e0d\u5305\u542b\u4efb\u4f55\u4fe1\u606f</p>"},{"location":"software_development/backend/language/Go/#_41","title":"\u521d\u59cb\u5316","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u6309\u987a\u5e8f\u521d\u59cb\u5316</p> <pre><code>type Point struct{ X, Y int }\n\np := Point{1, 2}\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1a\u6307\u5b9a\u540d\u5b57\u548c\u503c\u521d\u59cb\u5316</p> <pre><code>anim := gif.GIF{LoopCount: nframes}\n</code></pre> <p>\u5982\u679c\u6210\u5458\u88ab\u5ffd\u7565\u7684\u8bdd\u5c06\u9ed8\u8ba4\u7528\u96f6\u503c\u3002\u56e0\u4e3a\u63d0\u4f9b\u4e86\u6210\u5458\u7684\u540d\u5b57\uff0c\u6240\u4ee5\u6210\u5458\u51fa\u73b0\u7684\u987a\u5e8f\u5e76\u4e0d\u91cd\u8981\u3002</p> <p>\u4e24\u79cd\u4e0d\u540c\u5f62\u5f0f\u7684\u5199\u6cd5\u4e0d\u80fd\u6df7\u5408\u4f7f\u7528\u3002\u800c\u4e14\uff0c\u4f60\u4e0d\u80fd\u4f01\u56fe\u5728\u5916\u90e8\u5305\u4e2d\u7528\u7b2c\u4e00\u79cd\u987a\u5e8f\u8d4b\u503c\u7684\u6280\u5de7\u6765\u5077\u5077\u5730\u521d\u59cb\u5316\u7ed3\u6784\u4f53\u4e2d\u672a\u5bfc\u51fa\u7684\u6210\u5458\u3002</p>"},{"location":"software_development/backend/language/Go/#_42","title":"\u6bd4\u8f83","text":"<p>\u5982\u679c\u7ed3\u6784\u4f53\u7684\u5168\u90e8\u6210\u5458\u90fd\u662f\u53ef\u4ee5\u6bd4\u8f83\u7684\uff0c\u90a3\u4e48\u7ed3\u6784\u4f53\u4e5f\u662f\u53ef\u4ee5\u6bd4\u8f83\u7684\uff0c\u90a3\u6837\u7684\u8bdd\u4e24\u4e2a\u7ed3\u6784\u4f53\u5c06\u53ef\u4ee5\u4f7f\u7528==\u6216!=\u8fd0\u7b97\u7b26\u8fdb\u884c\u6bd4\u8f83\u3002\u76f8\u7b49\u6bd4\u8f83\u8fd0\u7b97\u7b26==\u5c06\u6bd4\u8f83\u4e24\u4e2a\u7ed3\u6784\u4f53\u7684\u6bcf\u4e2a\u6210\u5458\uff0c\u56e0\u6b64\u4e0b\u9762\u4e24\u4e2a\u6bd4\u8f83\u7684\u8868\u8fbe\u5f0f\u662f\u7b49\u4ef7\u7684\uff1a</p> <pre><code>type Point struct{ X, Y int }\n\np := Point{1, 2}\nq := Point{2, 1}\nfmt.Println(p.X == q.X &amp;&amp; p.Y == q.Y) // \"false\"\nfmt.Println(p == q)                   // \"false\"\n</code></pre> <p>\u53ef\u6bd4\u8f83\u7684\u7ed3\u6784\u4f53\u7c7b\u578b\u548c\u5176\u4ed6\u53ef\u6bd4\u8f83\u7684\u7c7b\u578b\u4e00\u6837\uff0c\u53ef\u4ee5\u7528\u4e8emap\u7684key\u7c7b\u578b\u3002</p> <pre><code>type address struct {\n    hostname string\n    port     int\n}\n\nhits := make(map[address]int)\nhits[address{\"golang.org\", 443}]++\n</code></pre>"},{"location":"software_development/backend/language/Go/#_43","title":"\u5d4c\u5165\u548c\u533f\u540d\u7ed3\u6784\u4f53","text":"<p>\u533f\u540d\u7ed3\u6784\u4f53</p> <p>\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u6ca1\u6709\u540d\u5b57\u7684\u7ed3\u6784\u4f53\uff0c\u9002\u7528\u4e8e\u53ea\u4f7f\u7528\u4e00\u6b21\u7ed3\u6784\u4f53\uff08\u58f0\u660e\u4e4b\u540e\u9700\u8981\u7acb\u5373\u521d\u59cb\u5316\uff09\u7684\u60c5\u51b5</p> <p>\u3010\u4f8b1: \u533f\u540d\u7ed3\u6784\u4f53\u548c\u6709\u540d\u7ed3\u6784\u4f53\u7684\u521d\u59cb\u5316\u3011</p> <pre><code>package main\n\nimport \"fmt\"\n\ntype Student struct {\n    name string\n    age  int\n}\n\nfunc main() {\n    // \u533f\u540d\u7ed3\u6784\u4f53\n    mike := struct {\n        name string\n        age  int\n    }{\n        name: \"mike\",\n        age:  18,\n    }\n\n    // \u6709\u540d\u7ed3\u6784\u4f53\n    amy := Student{\n        name: \"amy\",\n        age:  21,\n    }\n    fmt.Println(mike)\n    fmt.Println(amy)\n}\n</code></pre> <p>\u3010\u4f8b2: \u533f\u540d\u7ed3\u6784\u4f53\u548c\u6709\u540d\u7ed3\u6784\u4f53\u4f5c\u4e3a\u6210\u5458\u5d4c\u5957\u5728\u7ed3\u6784\u4f53\u4e2d\u3011</p> <p>\u6709\u540d\u7ed3\u6784\u4f53\u5d4c\u5957</p> <pre><code>type Student struct {\n    stuNo string\n    name  string\n    age   int\n}\n\ntype Teacher struct {\n    teaNo string\n    name  string\n    age   int\n}\n\ntype Class struct {\n    student Student\n    teacher Teacher\n}\n</code></pre> <p>\u533f\u540d\u7ed3\u6784\u4f53\u5d4c\u5957</p> <pre><code>type Class struct {\n    student struct {\n        stuNo string\n        name  string\n        age   int\n    }\n    teacher struct {\n        teaNo string\n        name  string\n        age   int\n    }\n}\n</code></pre> <p>\u524d\u9762\u63d0\u5230\u533f\u540d\u7ed3\u6784\u4f53\u53ea\u7528\u4e8e\u4f7f\u7528\u4e00\u6b21\u7684\u573a\u666f\uff0c\u56e0\u6b64\u5b83\u7684\u521d\u59cb\u5316\u957f\u8fd9\u6837</p> <pre><code>type Class struct {\n    student struct {\n        stuNo string\n        name  string\n        age   int\n    }\n    teacher struct {\n        teaNo string\n        name  string\n        age   int\n    }\n}\n\nfunc main() {\n    // \u533f\u540d\u7ed3\u6784\u4f53\n    class101 := Class{\n        student: struct {\n            stuNo string\n            name  string\n            age   int\n        }{\n            stuNo: \"001\",\n            name:  \"mike\",\n            age:   18,\n        },\n        teacher: struct {\n            teaNo string\n            name  string\n            age   int\n        }{\n            teaNo: \"1001\",\n            name:  \"Dr. Zhang\",\n            age:   21,\n        },\n    }\n    fmt.Println(class101)\n}\n</code></pre> <p>\u53ef\u4ee5\u53d1\u73b0\u4ee3\u7801\u6bd4\u8f83\u4e0d\u65b9\u4fbf\uff0c\u5efa\u8bae\u4e0d\u8981\u5728\u6709\u540d\u7ed3\u6784\u4f53\u6210\u5458\u4e2d\u4f7f\u7528\u533f\u540d\u7ed3\u6784\u4f53\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u4f7f\u7528\u6709\u540d\u7ed3\u6784\u4f53\u7684\u65f6\u5019\u91cd\u65b0\u58f0\u660e\u548c\u521d\u59cb\u5316\u533f\u540d\u7ed3\u6784\u4f53</p> <p>\u5d4c\u5165\u7ed3\u6784\u4f53</p> <p>\u9002\u7528\u4e8e\u91cd\u590d\u6210\u5458\u58f0\u660e\u5bfc\u81f4\u8bbf\u95ee\u6210\u5458\u53d8\u5f97\u7e41\u7410\u7684\u60c5\u51b5</p> <p>\u8003\u8651\u4e00\u4e2a\u4e8c\u7ef4\u7684\u7ed8\u56fe\u7a0b\u5e8f\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5404\u79cd\u56fe\u5f62\u7684\u5e93\uff0c\u4f8b\u5982\u77e9\u5f62\u3001\u692d\u5706\u5f62\u3001\u661f\u5f62\u548c\u8f6e\u5f62\u7b49\u51e0\u4f55\u5f62\u72b6\u3002\u8fd9\u91cc\u662f\u5176\u4e2d\u4e24\u4e2a\u7684\u5b9a\u4e49\uff1a</p> <pre><code>type Circle struct {\n    X, Y, Radius int\n}\n\ntype Wheel struct {\n    X, Y, Radius, Spokes int\n}\n</code></pre> <p>\u4e00\u4e2aCircle\u4ee3\u8868\u7684\u5706\u5f62\u7c7b\u578b\u5305\u542b\u4e86\u6807\u51c6\u5706\u5fc3\u7684X\u548cY\u5750\u6807\u4fe1\u606f\uff0c\u548c\u4e00\u4e2aRadius\u8868\u793a\u7684\u534a\u5f84\u4fe1\u606f\u3002\u4e00\u4e2aWheel\u8f6e\u5f62\u9664\u4e86\u5305\u542bCircle\u7c7b\u578b\u6240\u6709\u7684\u5168\u90e8\u6210\u5458\u5916\uff0c\u8fd8\u589e\u52a0\u4e86Spokes\u8868\u793a\u5f84\u5411\u8f90\u6761\u7684\u6570\u91cf\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u521b\u5efa\u4e00\u4e2awheel\u53d8\u91cf\uff1a</p> <pre><code>var w Wheel\nw.X = 8\nw.Y = 8\nw.Radius = 5\nw.Spokes = 20\n</code></pre> <p>\u968f\u7740\u5e93\u4e2d\u51e0\u4f55\u5f62\u72b6\u6570\u91cf\u7684\u589e\u591a\uff0c\u6211\u4eec\u4e00\u5b9a\u4f1a\u6ce8\u610f\u5230\u5b83\u4eec\u4e4b\u95f4\u7684\u76f8\u4f3c\u548c\u91cd\u590d\u4e4b\u5904\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u80fd\u4e3a\u4e86\u4fbf\u4e8e\u7ef4\u62a4\u800c\u5c06\u76f8\u540c\u7684\u5c5e\u6027\u72ec\u7acb\u51fa\u6765\uff1a</p> <pre><code>type Point struct {\n    X, Y int\n}\n\ntype Circle struct {\n    Center Point\n    Radius int\n}\n\ntype Wheel struct {\n    Circle Circle\n    Spokes int\n}\n</code></pre> <p>\u8fd9\u6837\u6539\u52a8\u4e4b\u540e\u7ed3\u6784\u4f53\u7c7b\u578b\u53d8\u7684\u6e05\u6670\u4e86\uff0c\u4f46\u662f\u8fd9\u79cd\u4fee\u6539\u540c\u65f6\u4e5f\u5bfc\u81f4\u4e86\u8bbf\u95ee\u6bcf\u4e2a\u6210\u5458\u53d8\u5f97\u7e41\u7410\uff1a</p> <pre><code>var w Wheel\nw.Circle.Center.X = 8\nw.Circle.Center.Y = 8\nw.Circle.Radius = 5\nw.Spokes = 20\n</code></pre> <p>Go\u8bed\u8a00\u6709\u4e00\u4e2a\u7279\u6027\u8ba9\u6211\u4eec\u53ea\u58f0\u660e\u4e00\u4e2a\u6210\u5458\u5bf9\u5e94\u7684\u6570\u636e\u7c7b\u578b\u800c\u4e0d\u6307\u540d\u6210\u5458\u7684\u540d\u5b57\uff1b\u8fd9\u7c7b\u6210\u5458\u5c31\u53eb\u533f\u540d\u6210\u5458\uff08\u4e0e\u533f\u540d\u7ed3\u6784\u4f53\u533a\u5206\u5f00\uff09\u3002\u533f\u540d\u6210\u5458\u7684\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u662f\u547d\u540d\u7684\u7c7b\u578b\u6216\u6307\u5411\u4e00\u4e2a\u547d\u540d\u7684\u7c7b\u578b\u7684\u6307\u9488\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0cCircle\u548cWheel\u5404\u81ea\u90fd\u6709\u4e00\u4e2a\u533f\u540d\u6210\u5458\u3002\u6211\u4eec\u53ef\u4ee5\u8bf4Point\u7c7b\u578b\u88ab\u5d4c\u5165\u5230\u4e86Circle\u7ed3\u6784\u4f53\uff0c\u540c\u65f6Circle\u7c7b\u578b\u88ab\u5d4c\u5165\u5230\u4e86Wheel\u7ed3\u6784\u4f53\u3002</p> <pre><code>type Circle struct {\n    Point\n    Radius int\n}\n\ntype Wheel struct {\n    Circle\n    Spokes int\n}\n</code></pre> <p>\u5f97\u76ca\u4e8e\u533f\u540d\u5d4c\u5165\u7684\u7279\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u53f6\u5b50\u5c5e\u6027\u800c\u4e0d\u9700\u8981\u7ed9\u51fa\u5b8c\u6574\u7684\u8def\u5f84\uff1a</p> <pre><code>var w Wheel\nw.X = 8            // equivalent to w.Circle.Point.X = 8\nw.Y = 8            // equivalent to w.Circle.Point.Y = 8\nw.Radius = 5       // equivalent to w.Circle.Radius = 5\nw.Spokes = 20\n</code></pre> <p>\u5728\u53f3\u8fb9\u7684\u6ce8\u91ca\u4e2d\u7ed9\u51fa\u7684\u663e\u5f0f\u5f62\u5f0f\u8bbf\u95ee\u8fd9\u4e9b\u53f6\u5b50\u6210\u5458\u7684\u8bed\u6cd5\u4f9d\u7136\u6709\u6548\uff0c\u56e0\u6b64\u533f\u540d\u6210\u5458\u5e76\u4e0d\u662f\u771f\u7684\u65e0\u6cd5\u8bbf\u95ee\u4e86\u3002\u5176\u4e2d\u533f\u540d\u6210\u5458Circle\u548cPoint\u90fd\u6709\u81ea\u5df1\u7684\u540d\u5b57\u2014\u2014\u5c31\u662f\u547d\u540d\u7684\u7c7b\u578b\u540d\u5b57\u2014\u2014\u4f46\u662f\u8fd9\u4e9b\u540d\u5b57\u5728\u70b9\u64cd\u4f5c\u7b26\u4e2d\u662f\u53ef\u9009\u7684\u3002\u6211\u4eec\u5728\u8bbf\u95ee\u5b50\u6210\u5458\u7684\u65f6\u5019\u53ef\u4ee5\u5ffd\u7565\u4efb\u4f55\u533f\u540d\u6210\u5458\u90e8\u5206\u3002</p> <p>\u4e0d\u5e78\u7684\u662f\uff0c\u7ed3\u6784\u4f53\u5b57\u9762\u503c\u5e76\u6ca1\u6709\u7b80\u77ed\u8868\u793a\u533f\u540d\u6210\u5458\u7684\u8bed\u6cd5\uff0c \u56e0\u6b64\u4e0b\u9762\u7684\u8bed\u53e5\u90fd\u4e0d\u80fd\u7f16\u8bd1\u901a\u8fc7\uff1a</p> <pre><code>w = Wheel{8, 8, 5, 20}                       // compile error: unknown fields\nw = Wheel{X: 8, Y: 8, Radius: 5, Spokes: 20} // compile error: unknown fields\n</code></pre> <p>\u7ed3\u6784\u4f53\u5b57\u9762\u503c\u5fc5\u987b\u9075\u5faa\u5f62\u72b6\u7c7b\u578b\u58f0\u660e\u65f6\u7684\u7ed3\u6784\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u7528\u4e0b\u9762\u7684\u4e24\u79cd\u8bed\u6cd5\uff0c\u5b83\u4eec\u5f7c\u6b64\u662f\u7b49\u4ef7\u7684\uff1a</p> <pre><code>w = Wheel{Circle{Point{8, 8}, 5}, 20}\n\nw = Wheel{\n    Circle: Circle{\n        Point:  Point{X: 8, Y: 8},\n        Radius: 5,\n    },\n    Spokes: 20, // NOTE: trailing comma necessary here (and at Radius)\n}\n\nfmt.Printf(\"%#v\\n\", w)\n// Output:\n// Wheel{Circle:Circle{Point:Point{X:8, Y:8}, Radius:5}, Spokes:20}\n\nw.X = 42\n\nfmt.Printf(\"%#v\\n\", w)\n// Output:\n// Wheel{Circle:Circle{Point:Point{X:42, Y:8}, Radius:5}, Spokes:20}\n</code></pre> <p>\u9700\u8981\u6ce8\u610f\u7684\u662fPrintf\u51fd\u6570\u4e2d%v\u53c2\u6570\u5305\u542b\u7684#\u526f\u8bcd\uff0c\u5b83\u8868\u793a\u7528\u548cGo\u8bed\u8a00\u7c7b\u4f3c\u7684\u8bed\u6cd5\u6253\u5370\u503c\u3002\u5bf9\u4e8e\u7ed3\u6784\u4f53\u7c7b\u578b\u6765\u8bf4\uff0c\u5c06\u5305\u542b\u6bcf\u4e2a\u6210\u5458\u7684\u540d\u5b57\u3002</p> <p>\u56e0\u4e3a\u533f\u540d\u6210\u5458\u4e5f\u6709\u4e00\u4e2a\u9690\u5f0f\u7684\u540d\u5b57\uff0c\u56e0\u6b64\u4e0d\u80fd\u540c\u65f6\u5305\u542b\u4e24\u4e2a\u7c7b\u578b\u76f8\u540c\u7684\u533f\u540d\u6210\u5458\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u540d\u5b57\u51b2\u7a81\u3002\u540c\u65f6\uff0c\u56e0\u4e3a\u6210\u5458\u7684\u540d\u5b57\u662f\u7531\u5176\u7c7b\u578b\u9690\u5f0f\u5730\u51b3\u5b9a\u7684\uff0c\u6240\u4ee5\u533f\u540d\u6210\u5458\u4e5f\u6709\u53ef\u89c1\u6027\u7684\u89c4\u5219\u7ea6\u675f\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0cPoint\u548cCircle\u533f\u540d\u6210\u5458\u90fd\u662f\u5bfc\u51fa\u7684\u3002\u5373\u4f7f\u5b83\u4eec\u4e0d\u5bfc\u51fa\uff08\u6bd4\u5982\u6539\u6210\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934\u7684point\u548ccircle\uff09\uff0c\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u7528\u7b80\u77ed\u5f62\u5f0f\u8bbf\u95ee\u533f\u540d\u6210\u5458\u5d4c\u5957\u7684\u6210\u5458</p> <pre><code>w.X = 8 // equivalent to w.circle.point.X = 8\n</code></pre> <p>\u4f46\u662f\u5728\u5305\u5916\u90e8\uff0c\u56e0\u4e3acircle\u548cpoint\u6ca1\u6709\u5bfc\u51fa\uff0c\u4e0d\u80fd\u8bbf\u95ee\u5b83\u4eec\u7684\u6210\u5458\uff0c\u56e0\u6b64\u7b80\u77ed\u7684\u533f\u540d\u6210\u5458\u8bbf\u95ee\u8bed\u6cd5\u4e5f\u662f\u7981\u6b62\u7684\u3002</p>"},{"location":"software_development/backend/language/Go/#json","title":"Json","text":"<p>encoding/json\u5305</p> <p>json\u6570\u7ec4\u7c7b\u578b\u5bf9\u5e94go\u7684\u6570\u7ec4\u6216slice</p> <p>json\u5bf9\u8c61\u7c7b\u578b\u5bf9\u5e94go\u7684\u7ed3\u6784\u4f53\u6216map</p>"},{"location":"software_development/backend/language/Go/#json_1","title":"\u7ed3\u6784\u4f53\u6570\u7ec4\u8f6c\u6362\u4e3aJson","text":"<p>\u5c06\u4e00\u4e2aGo\u8bed\u8a00\u4e2d\u7c7b\u4f3cmovies\u7684\u7ed3\u6784\u4f53slice\u8f6c\u4e3aJSON\u7684\u8fc7\u7a0b\u53eb\u7f16\u7ec4\uff08marshaling\uff09\u3002</p>"},{"location":"software_development/backend/language/Go/#jsonmarshal","title":"json.Marshal","text":"<p>\u7f16\u7ec4\u901a\u8fc7\u8c03\u7528json.Marshal\u51fd\u6570\u5b8c\u6210\uff1a</p> <pre><code>data, err := json.Marshal(movies)\nif err != nil {\n    log.Fatalf(\"JSON marshaling failed: %s\", err)\n}\nfmt.Printf(\"%s\\n\", data)\n</code></pre> <p>Marshal\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u7f16\u7801\u540e\u7684\u5b57\u8282slice\uff0c\u5305\u542b\u5f88\u957f\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u6ca1\u6709\u7a7a\u767d\u7f29\u8fdb\uff1b\u6211\u4eec\u5c06\u5b83\u6298\u884c\u4ee5\u4fbf\u4e8e\u663e\u793a\uff1a</p> <pre><code>[{\"Title\":\"Casablanca\",\"released\":1942,\"Actors\":[\"Humphrey Bogart\",\"Ingr\nid Bergman\"]},{\"Title\":\"Cool Hand Luke\",\"released\":1967,\"color\":true,\"Ac\ntors\":[\"Paul Newman\"]},{\"Title\":\"Bullitt\",\"released\":1968,\"color\":true,\"\nActors\":[\"Steve McQueen\",\"Jacqueline Bisset\"]}]\n</code></pre> <p>\u8fd9\u79cd\u7d27\u51d1\u7684\u8868\u793a\u5f62\u5f0f\u867d\u7136\u5305\u542b\u4e86\u5168\u90e8\u7684\u4fe1\u606f\uff0c\u4f46\u662f\u5f88\u96be\u9605\u8bfb\u3002</p>"},{"location":"software_development/backend/language/Go/#jsonmarshalindent","title":"json.MarshalIndent","text":"<p>json.MarshalIndent\u51fd\u6570\u5c06\u4ea7\u751f\u6574\u9f50\u7f29\u8fdb\u7684\u8f93\u51fa\u3002\u8be5\u51fd\u6570\u6709\u4e24\u4e2a\u989d\u5916\u7684\u5b57\u7b26\u4e32\u53c2\u6570\u7528\u4e8e\u8868\u793a\u6bcf\u4e00\u884c\u8f93\u51fa\u7684\u524d\u7f00\u548c\u6bcf\u4e00\u4e2a\u5c42\u7ea7\u7684\u7f29\u8fdb\uff1a</p> <pre><code>data, err := json.MarshalIndent(movies, \"\", \"    \")\nif err != nil {\n    log.Fatalf(\"JSON marshaling failed: %s\", err)\n}\nfmt.Printf(\"%s\\n\", data)\n</code></pre> <p>\u4e0a\u9762\u7684\u4ee3\u7801\u5c06\u4ea7\u751f\u8fd9\u6837\u7684\u8f93\u51fa\uff08\u8bd1\u6ce8\uff1a\u5728\u6700\u540e\u4e00\u4e2a\u6210\u5458\u6216\u5143\u7d20\u540e\u9762\u5e76\u6ca1\u6709\u9017\u53f7\u5206\u9694\u7b26\uff09\uff1a</p> <pre><code>[\n    {\n        \"Title\": \"Casablanca\",\n        \"released\": 1942,\n        \"Actors\": [\n            \"Humphrey Bogart\",\n            \"Ingrid Bergman\"\n        ]\n    },\n    {\n        \"Title\": \"Cool Hand Luke\",\n        \"released\": 1967,\n        \"color\": true,\n        \"Actors\": [\n            \"Paul Newman\"\n        ]\n    },\n    {\n        \"Title\": \"Bullitt\",\n        \"released\": 1968,\n        \"color\": true,\n        \"Actors\": [\n            \"Steve McQueen\",\n            \"Jacqueline Bisset\"\n        ]\n    }\n]\n</code></pre>"},{"location":"software_development/backend/language/Go/#tag","title":"Tag","text":"<p>\u4e00\u4e2a\u7ed3\u6784\u4f53\u6210\u5458Tag\u662f\u548c\u5728\u7f16\u8bd1\u9636\u6bb5\u5173\u8054\u5230\u8be5\u6210\u5458\u7684\u5143\u4fe1\u606f\u5b57\u7b26\u4e32</p> <p>\u7528\u4eba\u8bdd\u8bf4\u5c31\u662f\uff0ctag\u91cc\u7684\u7b2c\u4e00\u4e2a\u503c\u5bf9\u5e94json\u7684\u540d\u5b57\uff0c\u5176\u4f59\u503c\u5bf9\u5e94\u5176\u4ed6\u4fe1\u606f</p> <p>\u4f8b\u5982Tag\u8fd8\u5305\u542bomitempty\u9009\u9879\uff0c\u8868\u793a\u5f53Go\u8bed\u8a00\u7ed3\u6784\u4f53\u6210\u5458\u4e3a\u7a7a\u6216\u96f6\u503c\u65f6\u4e0d\u751f\u6210\u8be5JSON\u5bf9\u8c61\uff08\u8fd9\u91ccfalse\u4e3a\u96f6\u503c\uff09\u3002</p> <pre><code>Year  int  `json:\"released\"`\nColor bool `json:\"color,omitempty\"`\n</code></pre>"},{"location":"software_development/backend/language/Go/#jsongo","title":"Json\u8f6c\u6362\u4e3aGo\u6570\u636e\u7ed3\u6784","text":"<p>Go\u8bed\u8a00\u4e2d\u4e00\u822c\u53ebunmarshaling\uff0c\u901a\u8fc7json.Unmarshal\u51fd\u6570\u5b8c\u6210\u3002</p> <p>\u901a\u8fc7\u5b9a\u4e49\u5408\u9002\u7684Go\u8bed\u8a00\u6570\u636e\u7ed3\u6784\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u6027\u5730\u89e3\u7801JSON\u4e2d\u611f\u5174\u8da3\u7684\u6210\u5458\u3002\u5f53Unmarshal\u51fd\u6570\u8c03\u7528\u8fd4\u56de\uff0cslice\u5c06\u88ab\u53ea\u542b\u6709Title\u4fe1\u606f\u7684\u503c\u586b\u5145\uff0c\u5176\u5b83JSON\u6210\u5458\u5c06\u88ab\u5ffd\u7565\u3002</p> <pre><code>var titles []struct{ Title string }\nif err := json.Unmarshal(data, &amp;titles); err != nil {\n    log.Fatalf(\"JSON unmarshaling failed: %s\", err)\n}\nfmt.Println(titles) // \"[{Casablanca} {Cool Hand Luke} {Bullitt}]\"\n</code></pre>"},{"location":"software_development/backend/language/Go/#_44","title":"\u63a7\u5236\u7ed3\u6784","text":"<p>https://juejin.cn/post/7104462078013866015</p>"},{"location":"software_development/backend/language/Go/#if","title":"If\u8bed\u53e5","text":"<pre><code>length := getLength(email)\nif length &lt; 1{\n        fmt.Println(\"Email is invalid\")\n}\n</code></pre> <p>\u53ef\u4ee5\u6539\u5199\u4e3a</p> <pre><code>if length := getLength(email);length &lt; 1{\n        fmt.Println(\"Email is invalid\")\n}\n</code></pre> <p>\u6539\u5199\u4e4b\u540e\uff0clength\u53ea\u5728if\u8bed\u53e5\u5185\u751f\u6548</p>"},{"location":"software_development/backend/language/Go/#_45","title":"\u51fd\u6570","text":"<p>go\u51fd\u6570\u6309\u503c\u4f20\u9012\u53c2\u6570\uff0c\u6ca1\u6709\u5f15\u7528\u4f20\u9012</p> <p>\u5982\u679c\u53c2\u6570\u4f20\u7684\u662f\u53c2\u6570\uff0cgo\u4f20\u9012\u6570\u7ec4\u7684\u62f7\u8d1d\uff08\u6709\u7684\u8bed\u8a00\u4f1a\u9690\u5f0f\u5730\u5c06\u6570\u7ec4\u4f5c\u4e3a\u5f15\u7528\u6216\u6307\u9488\u5bf9\u8c61\u4f20\u5165\u88ab\u8c03\u7528\u7684\u51fd\u6570\uff09</p> <p>\u5173\u4e8e\u8fd4\u56de\u503c\uff0c\u5982\u4e0b\u5f62\u5f0f\uff0c\u662f\u53ef\u4ee5\u8fd0\u884c\u7684\uff08\u8fd4\u56dex,y\uff09\uff0c\u5b83\u8868\u660e\u4e86\uff1a\u8fd4\u56de\u503cx, y\u5728\u51fd\u6570\u4f53\u5185\u521d\u59cb\u5316\u4e3a\u96f6\u503c\uff0c\u56e0\u6b64\u6574\u4e2a\u51fd\u6570\u4f53\u5185\u90fd\u53ef\u4ee5\u4f7f\u7528x, y</p> <pre><code>func getNum() (x, y int){\n        return \n}\n</code></pre> <p>\u5bf9\u4e8e\u590d\u5408\u6570\u636e\u7c7b\u578b\uff08\u5c24\u5176\u662fmap\u548cstruct\uff09\uff0c\u9700\u8981\u4f20\u9012\u6307\u9488\u624d\u80fd\u4fee\u6539\u539f\u7ed3\u6784\uff0c\u5426\u5219\u662f\u503c\u62f7\u8d1d\uff08\u526f\u672c\uff09</p> <p>\u5982\u679c\u5b9e\u53c2\u5305\u62ec\u5f15\u7528\u7c7b\u578b\uff0c\u5982\u6307\u9488\uff0cslice(\u5207\u7247)\u3001map\u3001function\u3001channel\u7b49\u7c7b\u578b\uff0c\u5b9e\u53c2\u53ef\u80fd\u4f1a\u7531\u4e8e\u51fd\u6570\u7684\u95f4\u63a5\u5f15\u7528\u88ab\u4fee\u6539\u3002</p>"},{"location":"software_development/backend/language/Go/#_46","title":"\u9519\u8bef\u5904\u7406","text":"<p>\u4e0eJava\u4e0d\u540c\uff0cGo\u62e5\u6709\u72ec\u7279\u7684\u9519\u8bef\u5904\u7406\u673a\u5236\u3002Go\u5c06\u53ef\u9884\u6599\u7684\u9519\u8bef\u89c6\u4f5c\u503c\u5904\u7406\uff0c\u5c06\u4e0d\u53ef\u9884\u6599\u7684\u9519\u8bef\u5f53\u4f5c\u5f02\u5e38</p> <p>Go\u8fd9\u6837\u8bbe\u8ba1\u7684\u539f\u56e0\u662f\u7531\u4e8e\u5bf9\u4e8e\u67d0\u4e2a\u5e94\u8be5\u5728\u63a7\u5236\u6d41\u7a0b\u4e2d\u5904\u7406\u7684\u9519\u8bef\u800c\u8a00\uff0c\u5c06\u8fd9\u4e2a\u9519\u8bef\u4ee5\u5f02\u5e38\u7684\u5f62\u5f0f\u629b\u51fa\u4f1a\u6df7\u4e71\u5bf9\u9519\u8bef\u7684\u63cf\u8ff0\uff0c\u8fd9\u901a\u5e38\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u7cdf\u7cd5\u7684\u540e\u679c\u3002\u5f53\u67d0\u4e2a\u7a0b\u5e8f\u9519\u8bef\u88ab\u5f53\u4f5c\u5f02\u5e38\u5904\u7406\u540e\uff0c\u8fd9\u4e2a\u9519\u8bef\u4f1a\u5c06\u5806\u6808\u8ddf\u8e2a\u4fe1\u606f\u8fd4\u56de\u7ed9\u7ec8\u7aef\u7528\u6237\uff0c\u8fd9\u4e9b\u4fe1\u606f\u590d\u6742\u4e14\u65e0\u7528\uff0c\u65e0\u6cd5\u5e2e\u52a9\u5b9a\u4f4d\u9519\u8bef\u3002</p>"},{"location":"software_development/backend/language/Go/#_47","title":"\u76f4\u63a5\u8fd4\u56de\u9519\u8bef","text":"<p>\u6700\u5e38\u7528\u7684\u65b9\u5f0f\u662f\u4f20\u64ad\u9519\u8bef\u3002\u8fd9\u610f\u5473\u7740\u51fd\u6570\u4e2d\u67d0\u4e2a\u5b50\u7a0b\u5e8f\u7684\u5931\u8d25\uff0c\u4f1a\u53d8\u6210\u8be5\u51fd\u6570\u7684\u5931\u8d25\u3002</p> <p>\u4e0b\u9762\uff0c\u6211\u4eec\u4ee5findLinks\u51fd\u6570\u4f5c\u4e3a\u4f8b\u5b50\u3002\u5982\u679cfindLinks\u5bf9http.Get\u7684\u8c03\u7528\u5931\u8d25\uff0cfindLinks\u4f1a\u76f4\u63a5\u5c06\u8fd9\u4e2aHTTP\u9519\u8bef\u8fd4\u56de\u7ed9\u8c03\u7528\u8005\uff1a</p> <pre><code>resp, err := http.Get(url)\nif err != nil{\n    return nil, err\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#_48","title":"\u8865\u5145\u9519\u8bef\u4fe1\u606f\u518d\u8fd4\u56de","text":"<p>\u4e00\u822c\u800c\u8a00\uff0c\u88ab\u8c03\u7528\u51fd\u6570f(x)\u4f1a\u5c06\u8c03\u7528\u4fe1\u606f\u548c\u53c2\u6570\u4fe1\u606f\u4f5c\u4e3a\u53d1\u751f\u9519\u8bef\u65f6\u7684\u4e0a\u4e0b\u6587\u653e\u5728\u9519\u8bef\u4fe1\u606f\u4e2d\u5e76\u8fd4\u56de\u7ed9\u8c03\u7528\u8005\uff0c\u8c03\u7528\u8005\u9700\u8981\u6dfb\u52a0\u4e00\u4e9b\u9519\u8bef\u4fe1\u606f\u4e2d\u4e0d\u5305\u542b\u7684\u4fe1\u606f\u3002</p> <p>\u5982\u4e0b\u4f8b\uff0c\u5f53\u5bf9html.Parse\u7684\u8c03\u7528\u5931\u8d25\u65f6\uff0cfindLinks\u4e0d\u4f1a\u76f4\u63a5\u8fd4\u56dehtml.Parse\u7684\u9519\u8bef\uff0c\u56e0\u4e3a\u7f3a\u5c11\u4e24\u6761\u91cd\u8981\u4fe1\u606f\uff1a</p> <ol> <li>\u53d1\u751f\u9519\u8bef\u65f6\u7684\u89e3\u6790\u5668\uff08html parser\uff09\uff1b</li> <li>\u53d1\u751f\u9519\u8bef\u7684url\u3002</li> </ol> <p>\u56e0\u6b64\uff0cfindLinks\u6784\u9020\u4e86\u4e00\u4e2a\u65b0\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u65e2\u5305\u542b\u4e86\u8fd9\u4e24\u9879\uff0c\u4e5f\u5305\u62ec\u4e86\u5e95\u5c42\u7684\u89e3\u6790\u51fa\u9519\u7684\u4fe1\u606f\u3002</p> <pre><code>doc, err := html.Parse(resp.Body)\nresp.Body.Close()\nif err != nil {\n    return nil, fmt.Errorf(\"parsing %s as HTML: %v\", url,err)\n}\n</code></pre> <p>fmt.Errorf\u51fd\u6570\u4f7f\u7528fmt.Sprintf\u683c\u5f0f\u5316\u9519\u8bef\u4fe1\u606f\u5e76\u8fd4\u56de\u3002\u6211\u4eec\u4f7f\u7528\u8be5\u51fd\u6570\u6dfb\u52a0\u989d\u5916\u7684\u524d\u7f00\u4e0a\u4e0b\u6587\u4fe1\u606f\u5230\u539f\u59cb\u9519\u8bef\u4fe1\u606f\u3002\u5f53\u9519\u8bef\u6700\u7ec8\u7531main\u51fd\u6570\u5904\u7406\u65f6\uff0c\u9519\u8bef\u4fe1\u606f\u5e94\u63d0\u4f9b\u6e05\u6670\u7684\u4ece\u539f\u56e0\u5230\u540e\u679c\u7684\u56e0\u679c\u94fe\uff0c\u5c31\u50cf\u7f8e\u56fd\u5b87\u822a\u5c40\u4e8b\u6545\u8c03\u67e5\u65f6\u505a\u7684\u90a3\u6837\uff1a</p> <pre><code>genesis: crashed: no parachute: G-switch failed: bad relay orientation\n</code></pre> <p>\u7531\u4e8e\u9519\u8bef\u4fe1\u606f\u7ecf\u5e38\u662f\u4ee5\u94fe\u5f0f\u7ec4\u5408\u5728\u4e00\u8d77\u7684\uff0c\u6240\u4ee5\u9519\u8bef\u4fe1\u606f\u4e2d\u5e94\u907f\u514d\u5927\u5199\u548c\u6362\u884c\u7b26\u3002\u6700\u7ec8\u7684\u9519\u8bef\u4fe1\u606f\u53ef\u80fd\u5f88\u957f\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3cgrep\u7684\u5de5\u5177\u5904\u7406\u9519\u8bef\u4fe1\u606f</p>"},{"location":"software_development/backend/language/Go/#_49","title":"\u91cd\u65b0\u5c1d\u8bd5","text":"<p>\u5982\u679c\u9519\u8bef\u7684\u53d1\u751f\u662f\u5076\u7136\u6027\u7684\uff0c\u6216\u7531\u4e0d\u53ef\u9884\u77e5\u7684\u95ee\u9898\u5bfc\u81f4\u7684\u3002\u4e00\u4e2a\u660e\u667a\u7684\u9009\u62e9\u662f\u91cd\u65b0\u5c1d\u8bd5\u5931\u8d25\u7684\u64cd\u4f5c\u3002\u5728\u91cd\u8bd5\u65f6\uff0c\u6211\u4eec\u9700\u8981\u9650\u5236\u91cd\u8bd5\u7684\u65f6\u95f4\u95f4\u9694\u6216\u91cd\u8bd5\u7684\u6b21\u6570\uff0c\u9632\u6b62\u65e0\u9650\u5236\u7684\u91cd\u8bd5\u3002</p> <pre><code>// WaitForServer attempts to contact the server of a URL.\n// It tries for one minute using exponential back-off.\n// It reports an error if all attempts fail.\nfunc WaitForServer(url string) error {\n    const timeout = 1 * time.Minute\n    deadline := time.Now().Add(timeout)\n    for tries := 0; time.Now().Before(deadline); tries++ {\n        _, err := http.Head(url)\n        if err == nil {\n            return nil // success\n        }\n        log.Printf(\"server not responding (%s);retrying\u2026\", err)\n        time.Sleep(time.Second &lt;&lt; uint(tries)) // exponential back-off\n    }\n    return fmt.Errorf(\"server %s failed to respond after %s\", url, timeout)\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#_50","title":"\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\u5e76\u7ed3\u675f\u7a0b\u5e8f","text":"<p>\u8fd9\u79cd\u7b56\u7565\u53ea\u5e94\u5728main\u4e2d\u6267\u884c\uff0c\u5bf9\u5e93\u51fd\u6570\u800c\u8a00\uff0c\u5e94\u4ec5\u5411\u4e0a\u4f20\u64ad\u9519\u8bef\uff0c\u9664\u975e\u8be5\u9519\u8bef\u610f\u5473\u7740\u7a0b\u5e8f\u5185\u90e8\u5305\u542b\u4e0d\u4e00\u81f4\u6027\uff0c\u5373\u9047\u5230\u4e86bug\uff0c\u624d\u80fd\u5728\u5e93\u51fd\u6570\u4e2d\u7ed3\u675f\u7a0b\u5e8f\u3002</p> <pre><code>// (In function main.)\nif err := WaitForServer(url); err != nil {\n    fmt.Fprintf(os.Stderr, \"Site is down: %v\\n\", err)\n    os.Exit(1)\n}\n</code></pre> <p>\u8c03\u7528log.Fatalf\u53ef\u4ee5\u66f4\u7b80\u6d01\u7684\u4ee3\u7801\u8fbe\u5230\u4e0e\u4e0a\u6587\u76f8\u540c\u7684\u6548\u679c\u3002log\u4e2d\u7684\u6240\u6709\u51fd\u6570\uff0c\u90fd\u9ed8\u8ba4\u4f1a\u5728\u9519\u8bef\u4fe1\u606f\u4e4b\u524d\u8f93\u51fa\u65f6\u95f4\u4fe1\u606f\u3002</p> <pre><code>f err := WaitForServer(url); err != nil {\n    log.Fatalf(\"Site is down: %v\\n\", err)\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#_51","title":"\u53ea\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\uff0c\u4e0d\u4e2d\u65ad\u7a0b\u5e8f\u6267\u884c","text":"<p>\u6709\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\u5c31\u8db3\u591f\u4e86\uff0c\u4e0d\u9700\u8981\u4e2d\u65ad\u7a0b\u5e8f\u7684\u8fd0\u884c\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7log\u5305\u63d0\u4f9b\u51fd\u6570</p> <pre><code>if err := Ping(); err != nil {\n    log.Printf(\"ping failed: %v; networking disabled\",err)\n}\n</code></pre> <p>\u6216\u8005\u6807\u51c6\u9519\u8bef\u6d41\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\u3002</p> <pre><code>if err := Ping(); err != nil {\n    fmt.Fprintf(os.Stderr, \"ping failed: %v; networking disabled\\n\", err)\n}\n</code></pre> <p>log\u5305\u4e2d\u7684\u6240\u6709\u51fd\u6570\u4f1a\u4e3a\u6ca1\u6709\u6362\u884c\u7b26\u7684\u5b57\u7b26\u4e32\u589e\u52a0\u6362\u884c\u7b26\u3002</p>"},{"location":"software_development/backend/language/Go/#_52","title":"\u76f4\u63a5\u5ffd\u7565\u9519\u8bef","text":"<pre><code>dir, err := ioutil.TempDir(\"\", \"scratch\")\nif err != nil {\n    return fmt.Errorf(\"failed to create temp dir: %v\",err)\n}\n// ...use temp dir\u2026\nos.RemoveAll(dir) // ignore errors; $TMPDIR is cleaned periodically\n</code></pre> <p>\u5c3d\u7ba1os.RemoveAll\u4f1a\u5931\u8d25\uff0c\u4f46\u4e0a\u9762\u7684\u4f8b\u5b50\u5e76\u6ca1\u6709\u505a\u9519\u8bef\u5904\u7406\u3002\u8fd9\u662f\u56e0\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5b9a\u671f\u7684\u6e05\u7406\u4e34\u65f6\u76ee\u5f55\u3002\u6b63\u56e0\u5982\u6b64\uff0c\u867d\u7136\u7a0b\u5e8f\u6ca1\u6709\u5904\u7406\u9519\u8bef\uff0c\u4f46\u7a0b\u5e8f\u7684\u903b\u8f91\u4e0d\u4f1a\u56e0\u6b64\u53d7\u5230\u5f71\u54cd\u3002\u6211\u4eec\u5e94\u8be5\u5728\u6bcf\u6b21\u51fd\u6570\u8c03\u7528\u540e\uff0c\u90fd\u517b\u6210\u8003\u8651\u9519\u8bef\u5904\u7406\u7684\u4e60\u60ef\uff0c\u5f53\u4f60\u51b3\u5b9a\u5ffd\u7565\u67d0\u4e2a\u9519\u8bef\u65f6\uff0c\u4f60\u5e94\u8be5\u6e05\u6670\u5730\u5199\u4e0b\u4f60\u7684\u610f\u56fe\u3002</p> <p>\u5728Go\u4e2d\uff0c\u9519\u8bef\u5904\u7406\u6709\u4e00\u5957\u72ec\u7279\u7684\u7f16\u7801\u98ce\u683c\u3002\u68c0\u67e5\u67d0\u4e2a\u5b50\u51fd\u6570\u662f\u5426\u5931\u8d25\u540e\uff0c\u6211\u4eec\u901a\u5e38\u5c06\u5904\u7406\u5931\u8d25\u7684\u903b\u8f91\u4ee3\u7801\u653e\u5728\u5904\u7406\u6210\u529f\u7684\u4ee3\u7801\u4e4b\u524d\u3002\u5982\u679c\u67d0\u4e2a\u9519\u8bef\u4f1a\u5bfc\u81f4\u51fd\u6570\u8fd4\u56de\uff0c\u90a3\u4e48\u6210\u529f\u65f6\u7684\u903b\u8f91\u4ee3\u7801\u4e0d\u5e94\u653e\u5728else\u8bed\u53e5\u5757\u4e2d\uff0c\u800c\u5e94\u76f4\u63a5\u653e\u5728\u51fd\u6570\u4f53\u4e2d\u3002Go\u4e2d\u5927\u90e8\u5206\u51fd\u6570\u7684\u4ee3\u7801\u7ed3\u6784\u51e0\u4e4e\u76f8\u540c\uff0c\u9996\u5148\u662f\u4e00\u7cfb\u5217\u7684\u521d\u59cb\u68c0\u67e5\uff0c\u9632\u6b62\u9519\u8bef\u53d1\u751f\uff0c\u4e4b\u540e\u662f\u51fd\u6570\u7684\u5b9e\u9645\u903b\u8f91\u3002</p>"},{"location":"software_development/backend/language/Go/#eof","title":"\u6587\u4ef6\u7ed3\u5c3e\u9519\u8bef\uff08EOF\uff09","text":"<p>\u51fd\u6570\u7ecf\u5e38\u4f1a\u8fd4\u56de\u591a\u79cd\u9519\u8bef\uff0c\u8fd9\u5bf9\u7ec8\u7aef\u7528\u6237\u6765\u8bf4\u53ef\u80fd\u4f1a\u5f88\u6709\u8da3\uff0c\u4f46\u5bf9\u7a0b\u5e8f\u800c\u8a00\uff0c\u8fd9\u4f7f\u5f97\u60c5\u51b5\u53d8\u5f97\u590d\u6742\u3002\u5f88\u591a\u65f6\u5019\uff0c\u7a0b\u5e8f\u5fc5\u987b\u6839\u636e\u9519\u8bef\u7c7b\u578b\uff0c\u4f5c\u51fa\u4e0d\u540c\u7684\u54cd\u5e94\u3002\u8ba9\u6211\u4eec\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u4f8b\u5b50\uff1a\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6n\u4e2a\u5b57\u8282\u3002\u5982\u679cn\u7b49\u4e8e\u6587\u4ef6\u7684\u957f\u5ea6\uff0c\u8bfb\u53d6\u8fc7\u7a0b\u7684\u4efb\u4f55\u9519\u8bef\u90fd\u8868\u793a\u5931\u8d25\u3002\u5982\u679cn\u5c0f\u4e8e\u6587\u4ef6\u7684\u957f\u5ea6\uff0c\u8c03\u7528\u8005\u4f1a\u91cd\u590d\u7684\u8bfb\u53d6\u56fa\u5b9a\u5927\u5c0f\u7684\u6570\u636e\u76f4\u5230\u6587\u4ef6\u7ed3\u675f\u3002\u8fd9\u4f1a\u5bfc\u81f4\u8c03\u7528\u8005\u5fc5\u987b\u5206\u522b\u5904\u7406\u7531\u6587\u4ef6\u7ed3\u675f\u5f15\u8d77\u7684\u5404\u79cd\u9519\u8bef\u3002\u57fa\u4e8e\u8fd9\u6837\u7684\u539f\u56e0\uff0cio\u5305\u4fdd\u8bc1\u4efb\u4f55\u7531\u6587\u4ef6\u7ed3\u675f\u5f15\u8d77\u7684\u8bfb\u53d6\u5931\u8d25\u90fd\u8fd4\u56de\u540c\u4e00\u4e2a\u9519\u8bef\u2014\u2014io.EOF\uff0c\u8be5\u9519\u8bef\u5728io\u5305\u4e2d\u5b9a\u4e49\uff1a</p> <pre><code>package io\n\nimport \"errors\"\n\n// EOF is the error returned by Read when no more input is available.\nvar EOF = errors.New(\"EOF\")\n</code></pre> <p>\u8c03\u7528\u8005\u53ea\u9700\u901a\u8fc7\u7b80\u5355\u7684\u6bd4\u8f83\uff0c\u5c31\u53ef\u4ee5\u68c0\u6d4b\u51fa\u8fd9\u4e2a\u9519\u8bef\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u5c55\u793a\u4e86\u5982\u4f55\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6\u5b57\u7b26\uff0c\u4ee5\u53ca\u5224\u65ad\u6587\u4ef6\u7ed3\u675f\u3002</p> <pre><code>in := bufio.NewReader(os.Stdin)\nfor {\n    r, _, err := in.ReadRune()\n    if err == io.EOF {\n        break // finished reading\n    }\n    if err != nil {\n        return fmt.Errorf(\"read failed:%v\", err)\n    }\n    // ...use r\u2026\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#_53","title":"\u51fd\u6570\u503c\uff08\u95ed\u5305\uff09","text":"<p>\u95ed\u5305\u7684\u6982\u5ff5\u8be6\u89c1\uff1ahttps://juejin.cn/post/7084549768067678245</p> <p>Go \u8bed\u8a00\u4e2d\u7684\u51fd\u6570\u4e5f\u662f\u4e00\u79cd\u503c\uff0c\u62e5\u6709\u7c7b\u578b\uff0c\u53ef\u4ee5\u88ab\u4f20\u9012\uff0c\u8ddf C++ \u51fd\u6570\u5bf9\u8c61\u3001 Python \u51fd\u6570\u7c7b\u4f3c\u3002</p> <pre><code>func square(n int) int { return n * n }\n    func negative(n int) int { return -n }\n    func product(m, n int) int { return m * n }\n\n    f := square\n    fmt.Println(f(3)) // \"9\"\n\n    f = negative\n    fmt.Println(f(3))     // \"-3\"\n    fmt.Printf(\"%T\\n\", f) // \"func(int) int\"\n\n    f = product // compile error: can't assign func(int, int) int to func(int) int\n</code></pre> <p>\u51fd\u6570\u7c7b\u578b\u7684\u96f6\u503c\u662fnil\u3002\u8c03\u7528\u503c\u4e3anil\u7684\u51fd\u6570\u503c\u4f1a\u5f15\u8d77panic\u9519\u8bef\uff1a</p> <pre><code>    var f func(int) int\n    f(3) // \u6b64\u5904f\u7684\u503c\u4e3anil, \u4f1a\u5f15\u8d77panic\u9519\u8bef\n</code></pre> <p>\u51fd\u6570\u503c\u53ef\u4ee5\u4e0enil\u6bd4\u8f83\uff1a</p> <pre><code>    var f func(int) int\n    if f != nil {\n        f(3)\n    }\n</code></pre> <p>\u4f46\u662f\u51fd\u6570\u503c\u4e4b\u95f4\u662f\u4e0d\u53ef\u6bd4\u8f83\u7684\uff0c\u4e5f\u4e0d\u80fd\u7528\u51fd\u6570\u503c\u4f5c\u4e3amap\u7684key\u3002</p> <p>\u8be6\u89c1https://golang-china.github.io/gopl-zh/ch5/ch5-05.html</p>"},{"location":"software_development/backend/language/Go/#_54","title":"\u533f\u540d\u51fd\u6570","text":"<p>\u533f\u540d\u51fd\u6570\uff0c\u53c8\u53eb\u51fd\u6570\u5b57\u9762\u91cf</p> <p>\u62e5\u6709\u51fd\u6570\u540d\u7684\u51fd\u6570\u53ea\u80fd\u5728\u5305\u7ea7\u8bed\u6cd5\u5757\u4e2d\u88ab\u58f0\u660e\uff0c\u901a\u8fc7\u51fd\u6570\u5b57\u9762\u91cf\uff08function literal\uff09\uff0c\u6211\u4eec\u53ef\u7ed5\u8fc7\u8fd9\u4e00\u9650\u5236\uff0c\u5728\u4efb\u4f55\u8868\u8fbe\u5f0f\u4e2d\u8868\u793a\u4e00\u4e2a\u51fd\u6570\u503c\u3002</p> <p>\u51fd\u6570\u5b57\u9762\u91cf\u7684\u8bed\u6cd5\u548c\u51fd\u6570\u58f0\u660e\u76f8\u4f3c\uff0c\u533a\u522b\u5728\u4e8efunc\u5173\u952e\u5b57\u540e\u6ca1\u6709\u51fd\u6570\u540d\u3002\u51fd\u6570\u503c\u5b57\u9762\u91cf\u662f\u4e00\u79cd\u8868\u8fbe\u5f0f\uff0c\u5b83\u7684\u503c\u88ab\u79f0\u4e3a\u533f\u540d\u51fd\u6570\uff08anonymous function\uff09\u3002</p> <p>\u51fd\u6570\u5b57\u9762\u91cf\u5141\u8bb8\u6211\u4eec\u5728\u4f7f\u7528\u51fd\u6570\u65f6\uff0c\u518d\u5b9a\u4e49\u5b83\u3002</p> <p>\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u5b9a\u4e49\u7684\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u5b8c\u6574\u7684\u8bcd\u6cd5\u73af\u5883\uff08lexical environment\uff09\uff0c\u8fd9\u610f\u5473\u7740\u5728\u51fd\u6570\u4e2d\u5b9a\u4e49\u7684\u5185\u90e8\u51fd\u6570\u53ef\u4ee5\u5f15\u7528\u8be5\u51fd\u6570\u7684\u53d8\u91cf\uff0c\u5982\u4e0b\u4f8b\u6240\u793a\uff1a</p> <pre><code>// squares\u8fd4\u56de\u4e00\u4e2a\u533f\u540d\u51fd\u6570\u3002\n// \u8be5\u533f\u540d\u51fd\u6570\u6bcf\u6b21\u88ab\u8c03\u7528\u65f6\u90fd\u4f1a\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6570\u7684\u5e73\u65b9\u3002\nfunc squares() func() int {\n    var x int\n    return func() int {\n        x++\n        return x * x\n    }\n}\nfunc main() {\n    f := squares()\n    fmt.Println(f()) // \"1\"\n    fmt.Println(f()) // \"4\"\n    fmt.Println(f()) // \"9\"\n    fmt.Println(f()) // \"16\"\n}\n</code></pre> <p>\u51fd\u6570squares\u8fd4\u56de\u53e6\u4e00\u4e2a\u7c7b\u578b\u4e3a func() int \u7684\u51fd\u6570\u3002\u5bf9squares\u7684\u4e00\u6b21\u8c03\u7528\u4f1a\u751f\u6210\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cfx\u5e76\u8fd4\u56de\u4e00\u4e2a\u533f\u540d\u51fd\u6570\u3002\u6bcf\u6b21\u8c03\u7528\u533f\u540d\u51fd\u6570\u65f6\uff0c\u8be5\u51fd\u6570\u90fd\u4f1a\u5148\u4f7fx\u7684\u503c\u52a01\uff0c\u518d\u8fd4\u56dex\u7684\u5e73\u65b9\u3002\u7b2c\u4e8c\u6b21\u8c03\u7528squares\u65f6\uff0c\u4f1a\u751f\u6210\u7b2c\u4e8c\u4e2ax\u53d8\u91cf\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u533f\u540d\u51fd\u6570\u3002\u65b0\u533f\u540d\u51fd\u6570\u64cd\u4f5c\u7684\u662f\u7b2c\u4e8c\u4e2ax\u53d8\u91cf\u3002</p>"},{"location":"software_development/backend/language/Go/#_55","title":"\u95ed\u5305\u6355\u83b7\u8fed\u4ee3\u53d8\u91cf\u95ee\u9898","text":"<p>\u5f53\u5728\u4e00\u4e2a\u5faa\u73af\u5185\u90e8\u521b\u5efa\u95ed\u5305\uff08\u533f\u540d\u51fd\u6570\uff09\u65f6\uff0c\u5982\u679c\u95ed\u5305\u5f15\u7528\u4e86\u5faa\u73af\u53d8\u91cf\uff0c\u90a3\u4e48\u6240\u6709\u95ed\u5305\u5b9e\u9645\u4e0a\u5f15\u7528\u7684\u662f\u540c\u4e00\u4e2a\u53d8\u91cf\u7684\u5185\u5b58\u5730\u5740\uff0c\u800c\u4e0d\u662f\u8be5\u53d8\u91cf\u5728\u67d0\u6b21\u8fed\u4ee3\u4e2d\u7684\u503c\u3002\u8fd9\u4f1a\u5bfc\u81f4\u6240\u6709\u95ed\u5305\u5728\u6267\u884c\u65f6\u770b\u5230\u7684\u90fd\u662f\u6700\u540e\u4e00\u6b21\u8fed\u4ee3\u540e\u7684\u5faa\u73af\u53d8\u91cf\u503c\u3002</p> <p>\u6b63\u786e\u7684\u505a\u6cd5</p> <pre><code>var rmdirs []func()\nfor _, d := range tempDirs() {\n    dir := d // \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5c40\u90e8\u53d8\u91cf\u6765\u4fdd\u5b58\u5f53\u524d\u8fed\u4ee3\u7684\u503c\n    os.MkdirAll(dir, 0755)\n    rmdirs = append(rmdirs, func() {\n        os.RemoveAll(dir) // \u4f7f\u7528\u65b0\u7684\u5c40\u90e8\u53d8\u91cf\n    })\n}\n</code></pre> <p>\u5728\u8fd9\u91cc\uff0c<code>dir := d</code> \u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u5c40\u90e8\u53d8\u91cf <code>dir</code>\uff0c\u5b83\u72ec\u7acb\u4e8e\u5faa\u73af\u53d8\u91cf <code>d</code>\u3002\u6bcf\u6b21\u5faa\u73af\u8fed\u4ee3\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 <code>dir</code> \u53d8\u91cf\uff0c\u5e76\u4e14\u6bcf\u4e2a\u95ed\u5305\u90fd\u6301\u6709\u8fd9\u4e2a\u65b0\u53d8\u91cf\u7684\u5f15\u7528\uff0c\u56e0\u6b64\u6bcf\u4e2a\u95ed\u5305\u90fd\u80fd\u6b63\u786e\u5730\u5f15\u7528\u5230\u5404\u81ea\u7684\u76ee\u5f55\u8def\u5f84\u3002</p> <p>\u9519\u8bef\u7684\u505a\u6cd5</p> <pre><code>var rmdirs []func()\nfor _, dir := range tempDirs() {\n    os.MkdirAll(dir, 0755)\n    rmdirs = append(rmdirs, func() {\n        os.RemoveAll(dir) // \u6240\u6709\u95ed\u5305\u90fd\u5f15\u7528\u540c\u4e00\u4e2a\u5faa\u73af\u53d8\u91cf\n    })\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6240\u6709\u7684\u95ed\u5305\u90fd\u5f15\u7528\u4e86\u540c\u4e00\u4e2a <code>dir</code> \u5faa\u73af\u53d8\u91cf\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u4f1a\u5728\u5b9e\u9645\u6267\u884c\u65f6\u4f7f\u7528\u5faa\u73af\u7ed3\u675f\u65f6 <code>dir</code> \u7684\u6700\u7ec8\u503c\uff0c\u5bfc\u81f4\u6240\u6709\u5220\u9664\u64cd\u4f5c\u90fd\u4f5c\u7528\u4e8e\u6700\u540e\u4e00\u4e2a\u76ee\u5f55\u4e0a\uff0c\u8fd9\u4e0d\u662f\u9884\u671f\u7684\u884c\u4e3a\u3002</p> <p>\u5bf9\u4e8e\u57fa\u4e8e\u7d22\u5f15\u7684for\u5faa\u73af\u4e5f\u662f\u4e00\u6837\uff1a</p> <pre><code>var rmdirs []func()\ndirs := tempDirs()\nfor i := 0; i &lt; len(dirs); i++ {\n    os.MkdirAll(dirs[i], 0755)\n    rmdirs = append(rmdirs, func() {\n        os.RemoveAll(dirs[i]) // \u8fd9\u91cc\u7684i\u662f\u4e00\u4e2a\u5171\u4eab\u7684\u5faa\u73af\u53d8\u91cf\n    })\n}\n</code></pre> <p>\u540c\u6837\uff0c\u8fd9\u91cc\u7684 <code>i</code> \u662f\u4e00\u4e2a\u5171\u4eab\u7684\u5faa\u73af\u53d8\u91cf\uff0c\u6240\u4ee5\u6240\u6709\u95ed\u5305\u90fd\u5c06\u5c1d\u8bd5\u79fb\u9664 <code>dirs</code> \u5217\u8868\u4e2d\u7531\u6700\u7ec8\u7684 <code>i</code> \u503c\u6240\u6307\u5411\u7684\u5143\u7d20\u3002</p>"},{"location":"software_development/backend/language/Go/#_56","title":"\u53ef\u53d8\u53c2\u6570","text":"<p>\u53c2\u6570\u6570\u91cf\u53ef\u53d8\u7684\u51fd\u6570\u79f0\u4e3a\u53ef\u53d8\u53c2\u6570\u51fd\u6570\u3002\u5178\u578b\u7684\u4f8b\u5b50\u5c31\u662ffmt.Printf\u548c\u7c7b\u4f3c\u51fd\u6570\u3002Printf\u9996\u5148\u63a5\u6536\u4e00\u4e2a\u5fc5\u5907\u7684\u53c2\u6570\uff0c\u4e4b\u540e\u63a5\u6536\u4efb\u610f\u4e2a\u6570\u7684\u540e\u7eed\u53c2\u6570\u3002</p> <p>\u5728\u58f0\u660e\u53ef\u53d8\u53c2\u6570\u51fd\u6570\u65f6\uff0c\u9700\u8981\u5728\u53c2\u6570\u5217\u8868\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u7c7b\u578b\u4e4b\u524d\u52a0\u4e0a\u7701\u7565\u7b26\u53f7\u201c...\u201d\uff0c\u8fd9\u8868\u793a\u8be5\u51fd\u6570\u4f1a\u63a5\u6536\u4efb\u610f\u6570\u91cf\u7684\u8be5\u7c7b\u578b\u53c2\u6570\u3002</p> <pre><code>func sum(vals ...int) int {\n    total := 0\n    for _, val := range vals {\n        total += val\n    }\n    return total\n}\n</code></pre> <p>sum\u51fd\u6570\u8fd4\u56de\u4efb\u610f\u4e2aint\u578b\u53c2\u6570\u7684\u548c\u3002\u5728\u51fd\u6570\u4f53\u4e2d\uff0cvals\u88ab\u770b\u4f5c\u662f\u7c7b\u578b\u4e3a[] int\u7684\u5207\u7247\u3002sum\u53ef\u4ee5\u63a5\u6536\u4efb\u610f\u6570\u91cf\u7684int\u578b\u53c2\u6570\uff1a</p> <pre><code>fmt.Println(sum())           // \"0\"\nfmt.Println(sum(3))          // \"3\"\nfmt.Println(sum(1, 2, 3, 4)) // \"10\"\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u8c03\u7528\u8005\u9690\u5f0f\u7684\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\uff0c\u5e76\u5c06\u539f\u59cb\u53c2\u6570\u590d\u5236\u5230\u6570\u7ec4\u4e2d\uff0c\u518d\u628a\u6570\u7ec4\u7684\u4e00\u4e2a\u5207\u7247\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9\u88ab\u8c03\u7528\u51fd\u6570\u3002</p> <p>\u5982\u679c\u539f\u59cb\u53c2\u6570\u5df2\u7ecf\u662f\u5207\u7247\u7c7b\u578b\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u4f20\u9012\u7ed9sum\uff1f\u53ea\u9700\u5728\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u540e\u52a0\u4e0a\u7701\u7565\u7b26\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u529f\u80fd\u4e0e\u4e0a\u4e2a\u4f8b\u5b50\u4e2d\u6700\u540e\u4e00\u6761\u8bed\u53e5\u76f8\u540c\u3002</p> <pre><code>values := []int{1, 2, 3, 4}\nfmt.Println(sum(values...)) // \"10\"\n</code></pre> <p>\u867d\u7136\u5728\u53ef\u53d8\u53c2\u6570\u51fd\u6570\u5185\u90e8\uff0c...int \u578b\u53c2\u6570\u7684\u884c\u4e3a\u770b\u8d77\u6765\u5f88\u50cf\u5207\u7247\u7c7b\u578b\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u53ef\u53d8\u53c2\u6570\u51fd\u6570\u548c\u4ee5\u5207\u7247\u4f5c\u4e3a\u53c2\u6570\u7684\u51fd\u6570\u662f\u4e0d\u540c\u7684\u3002</p> <pre><code>func f(...int) {}\nfunc g([]int) {}\nfmt.Printf(\"%T\\n\", f) // \"func(...int)\"\nfmt.Printf(\"%T\\n\", g) // \"func([]int)\"\n</code></pre> <p>\u53ef\u53d8\u53c2\u6570\u51fd\u6570\u7ecf\u5e38\u88ab\u7528\u4e8e\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u3002\u4e0b\u9762\u7684errorf\u51fd\u6570\u6784\u9020\u4e86\u4e00\u4e2a\u4ee5\u884c\u53f7\u5f00\u5934\u7684\uff0c\u7ecf\u8fc7\u683c\u5f0f\u5316\u7684\u9519\u8bef\u4fe1\u606f\u3002\u51fd\u6570\u540d\u7684\u540e\u7f00f\u662f\u4e00\u79cd\u901a\u7528\u7684\u547d\u540d\u89c4\u8303\uff0c\u4ee3\u8868\u8be5\u53ef\u53d8\u53c2\u6570\u51fd\u6570\u53ef\u4ee5\u63a5\u6536Printf\u98ce\u683c\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u3002</p> <pre><code>func errorf(linenum int, format string, args ...interface{}) {\n    fmt.Fprintf(os.Stderr, \"Line %d: \", linenum)\n    fmt.Fprintf(os.Stderr, format, args...)\n    fmt.Fprintln(os.Stderr)\n}\nlinenum, name := 12, \"count\"\nerrorf(linenum, \"undefined: %s\", name) // \"Line 12: undefined: count\"\n</code></pre> <p>interface{}\u8868\u793a\u51fd\u6570\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u53ef\u4ee5\u63a5\u6536\u4efb\u610f\u7c7b\u578b</p>"},{"location":"software_development/backend/language/Go/#defer","title":"defer","text":"<p>\u76f4\u5230\u5305\u542b\u8be5defer\u8bed\u53e5\u7684\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u65f6\uff0cdefer\u540e\u7684\u51fd\u6570\u624d\u4f1a\u88ab\u6267\u884c\uff0c\u4e0d\u8bba\u5305\u542bdefer\u8bed\u53e5\u7684\u51fd\u6570\u662f\u901a\u8fc7return\u6b63\u5e38\u7ed3\u675f\uff0c\u8fd8\u662f\u7531\u4e8epanic\u5bfc\u81f4\u7684\u5f02\u5e38\u7ed3\u675f\u3002</p> <p><code>defer</code> \u8bed\u53e5\u7684\u6267\u884c\u987a\u5e8f</p> <ol> <li> <p>\u540e\u8fdb\u5148\u51fa\uff08LIFO\uff09\uff1a\u5f53\u4f60\u5728\u4e00\u4e2a\u51fd\u6570\u4e2d\u591a\u6b21\u4f7f\u7528<code>defer</code>\u65f6\uff0c\u8fd9\u4e9b\u8bed\u53e5\u4f1a\u6309\u7167\u540e\u8fdb\u5148\u51fa\u7684\u987a\u5e8f\u6267\u884c\uff0c\u5373\u6700\u540e\u58f0\u660e\u7684<code>defer</code>\u8bed\u53e5\u4f1a\u6700\u5148\u6267\u884c\u3002</p> </li> <li> <p>\u5728\u51fd\u6570\u8fd4\u56de\u524d\u6267\u884c\uff1a<code>defer</code>\u8bed\u53e5\u4f1a\u5728\u5305\u542b\u5b83\u7684\u51fd\u6570\u8fd4\u56de\u4e4b\u524d\u6267\u884c\uff0c\u4f46\u662f\u5b83\u4f1a\u5728\u6240\u6709\u4ee3\u7801\u6267\u884c\u5b8c\u6bd5\u3001\u5305\u62ec\u4efb\u4f55<code>return</code>\u8bed\u53e5\u4e4b\u540e\u7acb\u5373\u6267\u884c\u3002\u8fd9\u610f\u5473\u7740<code>defer</code>\u8bed\u53e5\u4f1a\u5728<code>return</code>\u8bed\u53e5\u6267\u884c\u4f46\u5c1a\u672a\u9000\u51fa\u51fd\u6570\u65f6\u8c03\u7528\u3002\u5982\u679c<code>return</code>\u8bed\u53e5\u6709\u8fd4\u56de\u503c\uff0c\u90a3\u4e48\u8fd9\u4e9b\u8fd4\u56de\u503c\u4f1a\u5728<code>defer</code>\u8bed\u53e5\u6267\u884c\u4e4b\u524d\u88ab\u786e\u5b9a\u4e0b\u6765\u3002</p> </li> <li> <p>\u8fd4\u56de\u503c\u53ef\u4fee\u6539\uff1a\u4eceGo 1.8\u5f00\u59cb\uff0c\u5982\u679c\u4f60\u6709\u4e00\u4e2a<code>defer</code>\u7684\u51fd\u6570\u8c03\u7528\uff0c\u5e76\u4e14\u8be5\u51fd\u6570\u8c03\u7528\u4fee\u6539\u4e86\u8fd4\u56de\u503c\uff08\u901a\u8fc7\u53c2\u6570\u5f15\u7528\uff09\uff0c\u90a3\u4e48\u8fd9\u4e9b\u4fee\u6539\u4f1a\u5f71\u54cd\u6700\u7ec8\u7684\u8fd4\u56de\u503c\u3002\u8fd9\u5141\u8bb8\u4f60\u5728<code>defer</code>\u8bed\u53e5\u4e2d\u4fee\u6539\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002</p> </li> <li> <p>\u5728Go\u7684panic\u673a\u5236\u4e2d\uff0c\u5ef6\u8fdf\u51fd\u6570\u7684\u8c03\u7528\u5728\u91ca\u653e\u5806\u6808\u4fe1\u606f\u4e4b\u524d\u3002</p> </li> </ol> <p>\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86<code>defer</code>\u8bed\u53e5\u548c<code>return</code>\u8bed\u53e5\u4e4b\u95f4\u7684\u4ea4\u4e92\uff1a</p> <pre><code>func example() (result int) {\n    defer func() {\n        result++\n        fmt.Println(\"Deferred function executed\")\n    }()\n\n    return 42 // \u8fd4\u56de\u503c\u662f\u5728deferred\u51fd\u6570\u6267\u884c\u4e4b\u524d\u786e\u5b9a\u7684\n}\n\nfunc main() {\n    fmt.Println(example()) // \u8f93\u51fa: Deferred function executed\\n43\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5c3d\u7ba1<code>return</code>\u8bed\u53e5\u6307\u5b9a\u4e86\u8fd4\u56de\u503c\u4e3a42\uff0c\u4f46\u5728\u51fd\u6570\u8fd4\u56de\u4e4b\u524d\uff0c<code>defer</code>\u8bed\u53e5\u4e2d\u7684\u533f\u540d\u51fd\u6570\u88ab\u6267\u884c\uff0c\u5c06\u8fd4\u56de\u503c<code>result</code>\u589e\u52a0\u4e861\uff0c\u56e0\u6b64\u6700\u7ec8\u8f93\u51fa\u7684\u662f43\u3002</p> <p>\u5173\u4e8e<code>return</code>\u8bed\u53e5\u548c<code>defer</code>\u8bed\u53e5</p> <ul> <li>\u5f53<code>return</code>\u8bed\u53e5\u88ab\u6267\u884c\u65f6\uff0c\u5b83\u9996\u5148\u8ba1\u7b97\u5e76\u8bb0\u4f4f\u4e86\u8981\u8fd4\u56de\u7684\u503c\u3002</li> <li>\u7136\u540e\uff0c\u6240\u6709\u5df2\u7ecf<code>defer</code>\u7684\u51fd\u6570\u6309\u540e\u8fdb\u5148\u51fa\u987a\u5e8f\u4f9d\u6b21\u6267\u884c\u3002</li> <li>\u6700\u540e\uff0c\u51fd\u6570\u8fd4\u56de\uff0c\u5e26\u7740\u53ef\u80fd\u5df2\u7ecf\u88ab<code>defer</code>\u8bed\u53e5\u4fee\u6539\u8fc7\u7684\u8fd4\u56de\u503c\u3002</li> </ul> <p>\u6240\u4ee5\uff0c\u867d\u7136\u770b\u8d77\u6765<code>defer</code>\u8bed\u53e5\u662f\u5728<code>return</code>\u4e4b\u540e\u6267\u884c\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b83\u4eec\u662f\u7d27\u5bc6\u76f8\u5173\u7684\uff1a<code>defer</code>\u8bed\u53e5\u5728<code>return</code>\u8bed\u53e5\u786e\u5b9a\u8fd4\u56de\u503c\u4e4b\u540e\u3001\u4f46\u5728\u51fd\u6570\u771f\u6b63\u9000\u51fa\u4e4b\u524d\u6267\u884c\u3002</p>"},{"location":"software_development/backend/language/Go/#panic","title":"panic","text":"<p>\u5f53panic\u5f02\u5e38\u53d1\u751f\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u4e2d\u65ad\u8fd0\u884c\uff0c\u5e76\u7acb\u5373\u6267\u884c\u5728\u8be5goroutine\u4e2d\u88ab\u5ef6\u8fdf\u7684\u51fd\u6570\uff08defer \u673a\u5236\uff09\u3002\u968f\u540e\uff0c\u7a0b\u5e8f\u5d29\u6e83\u5e76\u8f93\u51fa\u65e5\u5fd7\u4fe1\u606f\u3002\u65e5\u5fd7\u4fe1\u606f\u5305\u62ecpanic value\u548c\u51fd\u6570\u8c03\u7528\u7684\u5806\u6808\u8ddf\u8e2a\u4fe1\u606f\u3002panic value\u901a\u5e38\u662f\u67d0\u79cd\u9519\u8bef\u4fe1\u606f\u3002\u5bf9\u4e8e\u6bcf\u4e2agoroutine\uff0c\u65e5\u5fd7\u4fe1\u606f\u4e2d\u90fd\u4f1a\u6709\u4e0e\u4e4b\u76f8\u5bf9\u7684\uff0c\u53d1\u751fpanic\u65f6\u7684\u51fd\u6570\u8c03\u7528\u5806\u6808\u8ddf\u8e2a\u4fe1\u606f\u3002\u901a\u5e38\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u518d\u6b21\u8fd0\u884c\u7a0b\u5e8f\u53bb\u5b9a\u4f4d\u95ee\u9898\uff0c\u65e5\u5fd7\u4fe1\u606f\u5df2\u7ecf\u63d0\u4f9b\u4e86\u8db3\u591f\u7684\u8bca\u65ad\u4f9d\u636e\u3002\u56e0\u6b64\uff0c\u5728\u6211\u4eec\u586b\u5199\u95ee\u9898\u62a5\u544a\u65f6\uff0c\u4e00\u822c\u4f1a\u5c06panic\u5f02\u5e38\u548c\u65e5\u5fd7\u4fe1\u606f\u4e00\u5e76\u8bb0\u5f55\u3002</p> <p>\u5176\u4ed6\u8be6\u89c1\uff1a</p> <p>https://golang-china.github.io/gopl-zh/ch5/ch5-09.html#:~:text=5.9.-,Panic%E5%BC%82%E5%B8%B8,-Go%E7%9A%84%E7%B1%BB%E5%9E%8B</p>"},{"location":"software_development/backend/language/Go/#recover","title":"recover","text":"<p>\u5982\u679c\u5728deferred\u51fd\u6570\u4e2d\u8c03\u7528\u4e86\u5185\u7f6e\u51fd\u6570recover\uff0c\u5e76\u4e14\u5b9a\u4e49\u8be5defer\u8bed\u53e5\u7684\u51fd\u6570\u53d1\u751f\u4e86panic\u5f02\u5e38\uff0crecover\u4f1a\u4f7f\u7a0b\u5e8f\u4ecepanic\u4e2d\u6062\u590d\uff0c\u5e76\u8fd4\u56depanic value\u3002\u5bfc\u81f4panic\u5f02\u5e38\u7684\u51fd\u6570\u4e0d\u4f1a\u7ee7\u7eed\u8fd0\u884c\uff0c\u4f46\u80fd\u6b63\u5e38\u8fd4\u56de\u3002\u5728\u672a\u53d1\u751fpanic\u65f6\u8c03\u7528recover\uff0crecover\u4f1a\u8fd4\u56denil\u3002</p> <p>\u5176\u4ed6\u8be6\u89c1</p> <p>https://golang-china.github.io/gopl-zh/ch5/ch5-10.html#:~:text=wa%2Dlang/wabook-,5.10.%20Recover%E6%8D%95%E8%8E%B7%E5%BC%82%E5%B8%B8,-%E9%80%9A%E5%B8%B8%E6%9D%A5%E8%AF%B4%EF%BC%8C%E4%B8%8D</p>"},{"location":"software_development/backend/language/Go/#_57","title":"\u65b9\u6cd5","text":""},{"location":"software_development/backend/language/Go/#_58","title":"\u65b9\u6cd5\u58f0\u660e","text":"<p>\u548c\u5176\u4ed6\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u4e0d\u540c\uff0cGo\u63a5\u6536\u5668\u4e0d\u662fself\u6216this\uff0c\u800c\u662f\u81ea\u5b9a\u4e49\uff08\u5f53\u7136\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u53d6\u7b2c\u4e00\u4e2a\u5b57\u6bcd\uff09</p> <p>\u5e76\u4e14Go\u80fd\u591f\u7ed9\u300c\u4efb\u610f\u81ea\u5b9a\u4e49\u300d\u7c7b\u578b\u5b9a\u4e49\u65b9\u6cd5\uff0c\u53ea\u8981\u8fd9\u4e2a\u7c7b\u578b\u7684\u5e95\u5c42\u7c7b\u578b\u4e0d\u662f\u6307\u9488\u6216\u8005interface\u3002</p> <p>\u4efb\u610f\u81ea\u5b9a\u4e49\u7c7b\u578b\u6307\u7684\u662f\uff1a\u5e95\u5c42\u7c7b\u578b\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\uff0c\u4f46\u662f\u9700\u8981\u81ea\u5b9a\u4e49\u4e00\u4e2a\u547d\u540d\u7c7b\u578b\uff08\u4f7f\u7528type\uff09</p> <p>\u3010\u4f8b1:\u7ed9int\u7c7b\u578b\u5b9a\u4e49\u65b9\u6cd5\u3011</p> <p>\u8fd9\u79cd\u5b9a\u4e49\u662f\u9519\u7684</p> <pre><code>func (x int) Distance(y int) int {\n    return y - x\n}\n</code></pre> <p>\u6b63\u786e\u5b9a\u4e49\uff1a</p> <pre><code>type Value int\n\nfunc (x Value) Distance(y Value) Value {\n    return y - x\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#_59","title":"\u65b9\u6cd5\u8c03\u7528","text":"<p>\u8981\u4e48\u63a5\u6536\u5668\u7684\u5b9e\u9645\u53c2\u6570\u548c\u5176\u5f62\u5f0f\u53c2\u6570\u662f\u76f8\u540c\u7684\u7c7b\u578b\uff0c\u6bd4\u5982\u4e24\u8005\u90fd\u662f\u7c7b\u578bT\u6216\u8005\u90fd\u662f\u7c7b\u578b<code>*T</code>\uff1a</p> <pre><code>Point{1, 2}.Distance(q) //  Point\npptr.ScaleBy(2)         // *Point\n</code></pre> <p>\u6216\u8005\u63a5\u6536\u5668\u5b9e\u53c2\u662f\u7c7b\u578bT\uff0c\u4f46\u63a5\u6536\u5668\u5f62\u53c2\u662f\u7c7b\u578b<code>*T</code>\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7f16\u8bd1\u5668\u4f1a\u9690\u5f0f\u5730\u4e3a\u6211\u4eec\u53d6\u53d8\u91cf\u7684\u5730\u5740\uff1a</p> <pre><code>p.ScaleBy(2) // implicit (&amp;p)\n</code></pre> <p>\u6216\u8005\u63a5\u6536\u5668\u5b9e\u53c2\u662f\u7c7b\u578b<code>*T</code>\uff0c\u5f62\u53c2\u662f\u7c7b\u578bT\u3002\u7f16\u8bd1\u5668\u4f1a\u9690\u5f0f\u5730\u4e3a\u6211\u4eec\u89e3\u5f15\u7528\uff0c\u53d6\u5230\u6307\u9488\u6307\u5411\u7684\u5b9e\u9645\u53d8\u91cf\uff1a</p> <pre><code>pptr.Distance(q) // implicit (*pptr)\n</code></pre> <p>\u9700\u8981\u6ce8\u610f\uff1a</p> <ol> <li>\u4e0d\u7ba1\u4f60\u7684method\u7684receiver\u662f\u6307\u9488\u7c7b\u578b\u8fd8\u662f\u975e\u6307\u9488\u7c7b\u578b\uff0c\u90fd\u662f\u53ef\u4ee5\u901a\u8fc7\u6307\u9488/\u975e\u6307\u9488\u7c7b\u578b\u8fdb\u884c\u8c03\u7528\u7684\uff0c\u7f16\u8bd1\u5668\u4f1a\u5e2e\u4f60\u505a\u7c7b\u578b\u8f6c\u6362\u3002</li> <li>\u5728\u58f0\u660e\u4e00\u4e2amethod\u7684receiver\u8be5\u662f\u6307\u9488\u8fd8\u662f\u975e\u6307\u9488\u7c7b\u578b\u65f6\uff0c\u4f60\u9700\u8981\u8003\u8651\u4e24\u65b9\u9762\u7684\u56e0\u7d20\uff0c\u7b2c\u4e00\u65b9\u9762\u662f\u8fd9\u4e2a\u5bf9\u8c61\u672c\u8eab\u662f\u4e0d\u662f\u7279\u522b\u5927\uff0c\u5982\u679c\u58f0\u660e\u4e3a\u975e\u6307\u9488\u53d8\u91cf\u65f6\uff0c\u8c03\u7528\u4f1a\u4ea7\u751f\u4e00\u6b21\u62f7\u8d1d\uff1b\u7b2c\u4e8c\u65b9\u9762\u662f\u5982\u679c\u4f60\u7528\u6307\u9488\u7c7b\u578b\u4f5c\u4e3areceiver\uff0c\u90a3\u4e48\u4f60\u4e00\u5b9a\u8981\u6ce8\u610f\uff0c\u8fd9\u79cd\u6307\u9488\u7c7b\u578b\u6307\u5411\u7684\u59cb\u7ec8\u662f\u4e00\u5757\u5185\u5b58\u5730\u5740\uff0c\u5c31\u7b97\u4f60\u5bf9\u5176\u8fdb\u884c\u4e86\u62f7\u8d1d\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u62f7\u8d1d\u4e86\u5185\u5b58\u5730\u5740\uff0c\u4ecd\u7136\u80fd\u4fee\u6539\u5bf9\u5e94\u5730\u5740\u7684\u503c\uff09</li> <li>\u63a5\u6536\u5668\u53ef\u4ee5\u4f20nil\u503c\u4f5c\u4e3a\u5b9e\u53c2</li> </ol>"},{"location":"software_development/backend/language/Go/#_60","title":"\u901a\u8fc7\u5d4c\u5165\u7ed3\u6784\u4f53\u6765\u6269\u5c55\u7c7b\u578b","text":"<pre><code>import \"image/color\"\n\ntype Point struct{ X, Y float64 }\n\ntype ColoredPoint struct {\n    Point\n    Color color.RGBA\n}\n</code></pre> <p>\u5728\u4ee5\u4e0a\u5d4c\u5165\u7ed3\u6784\u4f53\u4e2d\uff0c\u5185\u5d4c\u53ef\u4ee5\u4f7f\u6211\u4eec\u5728\u5b9a\u4e49ColoredPoint\u65f6\u5f97\u5230\u4e00\u79cd\u53e5\u6cd5\u4e0a\u7684\u7b80\u5199\u5f62\u5f0f\uff0c\u5e76\u4f7f\u5176\u5305\u542bPoint\u7c7b\u578b\u6240\u5177\u6709\u7684\u4e00\u5207\u5b57\u6bb5\uff0c\u7136\u540e\u518d\u5b9a\u4e49\u4e00\u4e9b\u81ea\u5df1\u7684\u3002</p> <p>\u7136\u800c\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u5305\u542bPoint\u7c7b\u578b\u7684\u6240\u6709\u5b57\u6bb5\uff0c\u8fd8\u53ef\u4ee5\u5305\u542bPoint\u7c7b\u578b\u6240\u6709\u65b9\u6cd5</p> <p>Point\u7c7b\u578b\u62e5\u6709\u4ee5\u4e0b\u65b9\u6cd5</p> <pre><code>func (p Point) Distance(q Point) float64 {\n    return math.Hypot(q.X-p.X, q.Y-p.Y)\n}\n\nfunc (p *Point) ScaleBy(factor float64) {\n    p.X *= factor\n    p.Y *= factor\n}\n</code></pre> <p>\u5185\u5d4c\u5b57\u6bb5\u4f1a\u6307\u5bfc\u7f16\u8bd1\u5668\u53bb\u751f\u6210\u989d\u5916\u7684\u5305\u88c5\u65b9\u6cd5\u6765\u59d4\u6258\u5df2\u7ecf\u58f0\u660e\u597d\u7684\u65b9\u6cd5\uff0c\u548c\u4e0b\u9762\u7684\u5f62\u5f0f\u662f\u7b49\u4ef7\u7684\uff1a</p> <pre><code>func (p ColoredPoint) Distance(q Point) float64 {\n    return p.Point.Distance(q)\n}\n\nfunc (p *ColoredPoint) ScaleBy(factor float64) {\n    p.Point.ScaleBy(factor)\n}\n</code></pre> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5185\u5d4c\u4f1a\u6839\u636e\u88ab\u5d4c\u5165\u7ed3\u6784\u4f53\uff08Point\uff09\u5305\u88c5\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\uff0c\u5728\u8fd9\u4e2a\u51fd\u6570\u91cc\u9762\uff1a</p> <ul> <li>\u63a5\u6536\u5668\u7c7b\u578b\u6539\u4e3a\u5d4c\u5165\u7ed3\u6784\u4f53\uff08ColoredPoint\uff09\u7684\u7c7b\u578b</li> <li>\u51fd\u6570\u5185\u90e8\u8c03\u7528\u88ab\u5d4c\u5165\u7ed3\u6784\u4f53\uff08Point\uff09\u7684\u65b9\u6cd5<code>p.Point.Distance(q)</code></li> <li>\u51fd\u6570\u7b7e\u540d\u5176\u4f59\u90e8\u5206\u4e0d\u53d8</li> </ul> <p>\u5728\u7c7b\u578b\u4e2d\u5185\u5d4c\u7684\u533f\u540d\u5b57\u6bb5\u4e5f\u53ef\u80fd\u662f\u4e00\u4e2a\u547d\u540d\u7c7b\u578b\u7684\u6307\u9488\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5b57\u6bb5\u548c\u65b9\u6cd5\u4f1a\u88ab\u95f4\u63a5\u5730\u5f15\u5165\u5230\u5f53\u524d\u7684\u7c7b\u578b\u4e2d\uff08\u8bd1\u6ce8\uff1a\u8bbf\u95ee\u9700\u8981\u901a\u8fc7\u8be5\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u53bb\u53d6\uff09\u3002\u6dfb\u52a0\u8fd9\u4e00\u5c42\u95f4\u63a5\u5173\u7cfb\u8ba9\u6211\u4eec\u53ef\u4ee5\u5171\u4eab\u901a\u7528\u7684\u7ed3\u6784\u5e76\u52a8\u6001\u5730\u6539\u53d8\u5bf9\u8c61\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u4e0b\u9762\u8fd9\u4e2aColoredPoint\u7684\u58f0\u660e\u5185\u5d4c\u4e86\u4e00\u4e2a*Point\u7684\u6307\u9488\u3002</p> <pre><code>type ColoredPoint struct {\n    *Point\n    Color color.RGBA\n}\n\np := ColoredPoint{&amp;Point{1, 1}, red}\nq := ColoredPoint{&amp;Point{5, 4}, blue}\nfmt.Println(p.Distance(*q.Point)) // \"5\"\nq.Point = p.Point                 // p and q now share the same Point\np.ScaleBy(2)\nfmt.Println(*p.Point, *q.Point) // \"{2 2} {2 2}\"\n</code></pre> <p>\u6211\u4eec\u66fe\u7ecf\u63d0\u5230\uff0c\u65b9\u6cd5\u53ea\u80fd\u5728\u547d\u540d\u7c7b\u578b\uff08\u50cfPoint\uff09\u6216\u8005\u6307\u5411\u7c7b\u578b\u7684\u6307\u9488\u4e0a\u5b9a\u4e49\uff0c\u4f46\u662f\u591a\u4e8f\u4e86\u5185\u5d4c\uff0c\u6709\u4e9b\u65f6\u5019\u6211\u4eec\u7ed9\u533f\u540dstruct\u7c7b\u578b\u6765\u5b9a\u4e49\u65b9\u6cd5\u4e5f\u6709\u4e86\u624b\u6bb5\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u5c0ftrick\u3002\u8fd9\u4e2a\u4f8b\u5b50\u5c55\u793a\u4e86\u7b80\u5355\u7684cache\uff0c\u5176\u4f7f\u7528\u4e24\u4e2a\u5305\u7ea7\u522b\u7684\u53d8\u91cf\u6765\u5b9e\u73b0\uff0c\u4e00\u4e2amutex\u4e92\u65a5\u9501\uff08\u00a79.2\uff09\u548c\u5b83\u6240\u64cd\u4f5c\u7684cache\uff1a</p> <pre><code>var (\n    mu sync.Mutex // guards mapping\n    mapping = make(map[string]string)\n)\n\nfunc Lookup(key string) string {\n    mu.Lock()\n    v := mapping[key]\n    mu.Unlock()\n    return v\n}\n</code></pre> <p>\u4e0b\u9762\u8fd9\u4e2a\u7248\u672c\u5728\u529f\u80fd\u4e0a\u662f\u4e00\u81f4\u7684\uff0c\u4f46\u5c06\u4e24\u4e2a\u5305\u7ea7\u522b\u7684\u53d8\u91cf\u653e\u5728\u4e86cache\u8fd9\u4e2astruct\u4e00\u7ec4\u5185\uff1a</p> <pre><code>var cache = struct {\n    sync.Mutex\n    mapping map[string]string\n}{\n    mapping: make(map[string]string),\n}\n\n\nfunc Lookup(key string) string {\n    cache.Lock()\n    v := cache.mapping[key]\n    cache.Unlock()\n    return v\n}\n</code></pre> <p>\u6211\u4eec\u7ed9\u65b0\u7684\u53d8\u91cf\u8d77\u4e86\u4e00\u4e2a\u66f4\u5177\u8868\u8fbe\u6027\u7684\u540d\u5b57\uff1acache\u3002\u56e0\u4e3async.Mutex\u5b57\u6bb5\u4e5f\u88ab\u5d4c\u5165\u5230\u4e86\u8fd9\u4e2astruct\u91cc\uff0c\u5176Lock\u548cUnlock\u65b9\u6cd5\u4e5f\u5c31\u90fd\u88ab\u5f15\u5165\u5230\u4e86\u8fd9\u4e2a\u533f\u540d\u7ed3\u6784\u4e2d\u4e86\uff0c\u8fd9\u8ba9\u6211\u4eec\u80fd\u591f\u4ee5\u4e00\u4e2a\u7b80\u5355\u660e\u4e86\u7684\u8bed\u6cd5\u6765\u5bf9\u5176\u8fdb\u884c\u52a0\u9501\u89e3\u9501\u64cd\u4f5c\u3002</p>"},{"location":"software_development/backend/language/Go/#_61","title":"\u65b9\u6cd5\u503c\u548c\u65b9\u6cd5\u8868\u8fbe\u5f0f","text":"<p>\u65b9\u6cd5\u503c\u548c\u51fd\u6570\u503c\u610f\u601d\u4e00\u6837\uff0c\u539f\u5148\u8c03\u7528\u65b9\u5f0f\u4e3a<code>p.Distance(q)</code>\uff0c\u53ef\u4ee5\u5206\u4e3a\u4e24\u6b65\uff1a</p> <ul> <li>\u53d6\u65b9\u6cd5\u503c<code>p.Distance</code>\u7ed9\u53e6\u4e00\u4e2a\u53d8\u91cff</li> <li>\u518d\u586b\u5165\u53c2\u6570q\uff0c\u5982<code>f(q)</code></li> </ul> <p>\u65b9\u6cd5\u8868\u8fbe\u5f0f\uff1a\u5728\u65b9\u6cd5\u503c\u57fa\u7840\u4e0a\uff0c\u4e0d\u5199\u63a5\u6536\u5668\uff0c\u4ee5\u63a5\u6536\u5668\u7684\u7c7b\u578b\u53d6\u4ee3\u5177\u4f53\u7684\u63a5\u6536\u5668\uff0c\u5728\u51fd\u6570\u591a\u52a0\u4e00\u4e2a\u53c2\u6570\uff0c\u9ed8\u8ba4\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u63a5\u6536\u5668</p> <p>\u3010\u4f8b1\uff1a\u65b9\u6cd5\u503c\u548c\u65b9\u6cd5\u8868\u8fbe\u5f0f\u4f7f\u7528\u3011</p> <pre><code>package main\n\nimport \"fmt\"\n\ntype Point struct {\n    x, y int\n}\n\nfunc (p *Point) Distance(q *Point) int {\n    return (p.x-q.x)*(p.x-q.x) + (p.y-q.y)*(p.y-q.y)\n}\n\nfunc (p *Point) IncreBy(incre int) {\n    p.x++\n    p.y++\n}\n\nfunc main() {\n    p1 := Point{1, 2}\n    p2 := Point{2, 4}\n\n    // \u65b9\u6cd5\u503c\n    distanceFunc1 := p1.Distance\n    fmt.Println(distanceFunc1(&amp;p2))\n\n    // \u65b9\u6cd5\u8868\u8fbe\u5f0f\n    distanceFunc2 := (*Point).Distance\n    fmt.Println(distanceFunc2(&amp;p1, &amp;p2))\n}\n</code></pre> <p>\u3010\u4f8b2:\u65b9\u6cd5\u8868\u8fbe\u5f0f\u5e94\u7528\u3011</p> <p>\u5f53\u4f60\u6839\u636e\u4e00\u4e2a\u53d8\u91cf\u6765\u51b3\u5b9a\u8c03\u7528\u540c\u4e00\u4e2a\u7c7b\u578b\u7684\u54ea\u4e2a\u51fd\u6570\u65f6\uff0c\u65b9\u6cd5\u8868\u8fbe\u5f0f\u5c31\u663e\u5f97\u5f88\u6709\u7528\u4e86\u3002\u4f60\u53ef\u4ee5\u6839\u636e\u9009\u62e9\u6765\u8c03\u7528\u63a5\u6536\u5668\u5404\u4e0d\u76f8\u540c\u7684\u65b9\u6cd5\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\uff0c\u53d8\u91cfop\u4ee3\u8868Point\u7c7b\u578b\u7684addition\u6216\u8005subtraction\u65b9\u6cd5\uff0cPath.TranslateBy\u65b9\u6cd5\u4f1a\u4e3a\u5176Path\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4e2aPoint\u6765\u8c03\u7528\u5bf9\u5e94\u7684\u65b9\u6cd5\uff1a</p> <pre><code>type Point struct{ X, Y float64 }\n\nfunc (p Point) Add(q Point) Point { return Point{p.X + q.X, p.Y + q.Y} }\nfunc (p Point) Sub(q Point) Point { return Point{p.X - q.X, p.Y - q.Y} }\n\ntype Path []Point\n\nfunc (path Path) TranslateBy(offset Point, add bool) {\n    var op func(p, q Point) Point\n    if add {\n        op = Point.Add\n    } else {\n        op = Point.Sub\n    }\n    for i := range path {\n        // Call either path[i].Add(offset) or path[i].Sub(offset).\n        path[i] = op(path[i], offset)\n    }\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#_62","title":"\u63a5\u53e3","text":"<p>\u63a5\u53e3\u8868\u793a\u4e00\u7cfb\u5217\u884c\u4e3a\u7684\u96c6\u5408</p>"},{"location":"software_development/backend/language/Go/#_63","title":"\u63a5\u53e3\u5185\u5d4c","text":"<p>\u548c\u5d4c\u5165\u7ed3\u6784\u4f53\u4e00\u6837\uff0c\u4ee5\u4e0b\u51e0\u79cd\u5199\u6cd5\u540c\u4e00\u4e2a\u610f\u601d</p> <p>\u5199\u6cd5\u4e00</p> <pre><code>type ReadWriter interface {\n    Reader\n    Writer\n}\n</code></pre> <p>\u5199\u6cd5\u4e8c</p> <pre><code>type ReadWriter interface {\n    Read(p []byte) (n int, err error)\n    Write(p []byte) (n int, err error)\n}\n</code></pre> <p>\u5199\u6cd5\u4e09\uff1a\u751a\u81f3\u4f7f\u7528\u4e00\u79cd\u6df7\u5408\u7684\u98ce\u683c\uff1a</p> <pre><code>type ReadWriter interface {\n    Read(p []byte) (n int, err error)\n    Writer\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#_64","title":"\u5b9e\u73b0\u63a5\u53e3\u7684\u6761\u4ef6","text":"<p>\u4e00\u4e2a\u7c7b\u578b\u5982\u679c\u62e5\u6709\u4e00\u4e2a\u63a5\u53e3\u9700\u8981\u7684\u6240\u6709\u65b9\u6cd5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7c7b\u578b\u5c31\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3\u3002</p> <p>\u67d0\u7c7b\u578ba\u5b9e\u73b0\u4e00\u4e2a\u63a5\u53e3\u7c7b\u578bA\uff0c\u90a3\u4e48a\u53ef\u4ee5\u7528A\u6765\u8868\u793a\u3002</p> <pre><code>var w io.Writer\nw = os.Stdout           // OK: *os.File has Write method\nw = new(bytes.Buffer)   // OK: *bytes.Buffer has Write method\nw = time.Second         // compile error: time.Duration lacks Write method\n\nvar rwc io.ReadWriteCloser\nrwc = os.Stdout         // OK: *os.File has Read, Write, Close methods\nrwc = new(bytes.Buffer) // compile error: *bytes.Buffer lacks Close method\n</code></pre> <p>\u8fd9\u4e2a\u89c4\u5219\u751a\u81f3\u9002\u7528\u4e8e\u7b49\u5f0f\u53f3\u8fb9\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u63a5\u53e3\u7c7b\u578b</p> <pre><code>w = rwc                 // OK: io.ReadWriteCloser has Write method\nrwc = w                 // compile error: io.Writer lacks Close method\n</code></pre> <p>\u7279\u522b\u5728\u51fd\u6570\u4e2d\uff0c\u63a5\u53e3\u7c7b\u578b\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\uff0c\u8868\u793a\u4efb\u4f55\u5b9e\u73b0\u8be5\u63a5\u53e3\u7684\u7c7b\u578b\u90fd\u53ef\u4ee5\u4f20\u5165\u51fd\u6570</p> <p>Interface{}\u8868\u793a\u7a7a\u63a5\u53e3\uff0c\u4efb\u4f55\u53c2\u6570\u90fd\u53ef\u4ee5\u5b9e\u73b0\u7a7a\u63a5\u53e3\uff0c\u56e0\u6b64interface{}\u53ef\u4ee5\u8868\u793a\u4efb\u4f55\u7c7b\u578b\u7684\u503c</p> <p>\u5c3d\u7ba1Go\u62e5\u6709\u4e00\u4e2a\u8bed\u6cd5\u7cd6\uff1a\u65e0\u8bba\u63a5\u6536\u5668\u662f\u7c7b\u578bT\u8fd8\u662f\u7c7b\u578bT\u7684\u6307\u9488\uff0c\u8c03\u7528\u65f6(&amp;p).DIstance()\u548cp.Distance()\u90fd\u53ef\u4ee5\uff0c\u7f16\u8bd1\u5668\u8fdb\u884c\u4e86\u9ed8\u8ba4\u7684\u53d6\u5730\u5740</p> <p>func (p *Point) Distance(){ ....}</p> <p>\u7136\u800c\u5b9e\u9645\u4e0a\uff0c\u63a5\u6536\u5668\u4e0d\u540c\u5bf9\u5e94\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u56e0\u6b64\u5bf9\u5e94\u7684\u63a5\u53e3\u4f1a\u533a\u5206\u63a5\u6536\u5668\u4e0d\u540c\u7684\u65b9\u6cd5</p> <p>\u4f8b\u5982\uff1a</p> <p>IntSet\u7c7b\u578b\u7684String\u65b9\u6cd5\u7684\u63a5\u6536\u8005\u662f\u4e00\u4e2a\u6307\u9488\u7c7b\u578b\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u5728\u4e00\u4e2a\u4e0d\u80fd\u5bfb\u5740\u7684IntSet\u503c\u4e0a\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff1a</p> <pre><code>type IntSet struct { /* ... */ }\nfunc (*IntSet) String() string\nvar _ = IntSet{}.String() // compile error: String requires *IntSet receiver\n</code></pre> <p>\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u4e2aIntSet\u53d8\u91cf\u4e0a\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff1a</p> <pre><code>var s IntSet\nvar _ = s.String() // OK: s is a variable and &amp;s has a String method\n</code></pre> <p>\u7136\u800c\uff0c\u7531\u4e8e\u53ea\u6709<code>*IntSet</code>\u7c7b\u578b\u6709String\u65b9\u6cd5\uff0c\u6240\u4ee5\u4e5f\u53ea\u6709<code>*IntSet</code>\u7c7b\u578b\u5b9e\u73b0\u4e86fmt.Stringer\u63a5\u53e3\uff1a</p> <pre><code>var _ fmt.Stringer = &amp;s // OK\nvar _ fmt.Stringer = s  // compile error: IntSet lacks String method\n</code></pre> <p>\u4e0eJava\u4e0d\u540c\uff0cGo\u5b9e\u73b0\u63a5\u53e3\u4e0d\u9700\u8981\u663e\u6027\u5b9a\u4e49\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u4e0d\u4fee\u6539\u5177\u4f53\u7c7b\u578b\u7684\u524d\u63d0\u4e0b\uff0c\u63d0\u53d6\u51fa\u65b0\u7684\u5171\u6027\u4f5c\u4e3a\u65b0\u63a5\u53e3\uff0c\u4f8b\u5982\uff1a</p> <pre><code>type Audio interface {\n    Stream() (io.ReadCloser, error)\n    RunningTime() time.Duration\n    Format() string // e.g., \"MP3\", \"WAV\"\n}\ntype Video interface {\n    Stream() (io.ReadCloser, error)\n    RunningTime() time.Duration\n    Format() string // e.g., \"MP4\", \"WMV\"\n    Resolution() (x, y int)\n}\n</code></pre> <p>\u5982\u679c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u9700\u8981\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u5904\u7406Audio\u548cVideo\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2aStreamer\u63a5\u53e3\u6765\u4ee3\u8868\u5b83\u4eec\u4e4b\u95f4\u76f8\u540c\u7684\u90e8\u5206\u800c\u4e0d\u5fc5\u5bf9\u5df2\u7ecf\u5b58\u5728\u7684\u7c7b\u578b\u505a\u6539\u53d8\u3002</p> <pre><code>type Streamer interface {\n    Stream() (io.ReadCloser, error)\n    RunningTime() time.Duration\n    Format() string\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#_65","title":"\u63a5\u53e3\u503c","text":"<p>\u8fd9\u4e00\u8282\u6709\u70b9\u50cf\u8bb2\u63a5\u53e3\u7684\u539f\u7406</p> <p>\u63a5\u53e3\u503c\u6709\u4e24\u90e8\u5206\u7ec4\u6210\uff1a</p> <ul> <li>\u5177\u4f53\u7c7b\u578b\uff0c\u79f0\u4e3a\u63a5\u53e3\u7684\u52a8\u6001\u7c7b\u578b</li> <li>\u5177\u4f53\u7c7b\u578b\u7684\u503c\uff0c\u79f0\u4e3a\u63a5\u53e3\u7684\u52a8\u6001\u503c</li> </ul> <p>\u7531\u4e8eGo\u662f\u9759\u6001\u8bed\u8a00\uff0c\u56e0\u6b64\u7c7b\u578b\u662f\u7f16\u8bd1\u671f\u80fd\u591f\u786e\u5b9a\u7684</p> <p>\u4f46\u63a5\u53e3\u503c\u65e0\u6cd5\u5728\u7f16\u8bd1\u671f\u786e\u5b9a\uff0c\u5b83\u662f\u8fd0\u884c\u65f6\u786e\u5b9a\u7684</p> <p>\u4e3e\u4f8b\u8bf4\u660e</p> <p>\u4e0b\u97624\u4e2a\u8bed\u53e5\u4e2d\uff0c\u53d8\u91cfw\u5f97\u5230\u4e863\u4e2a\u4e0d\u540c\u7684\u503c\u3002\uff08\u5f00\u59cb\u548c\u6700\u540e\u7684\u503c\u662f\u76f8\u540c\u7684\uff09</p> <pre><code>var w io.Writer\nw = os.Stdout\nw = new(bytes.Buffer)\nw = nil\n</code></pre> <p>\u7b2c\u4e00\u4e2a\u8bed\u53e5\u5b9a\u4e49\u4e86\u53d8\u91cfw:</p> <pre><code>var w io.Writer\n</code></pre> <p>\u5728Go\u8bed\u8a00\u4e2d\uff0c\u53d8\u91cf\u603b\u662f\u88ab\u4e00\u4e2a\u5b9a\u4e49\u660e\u786e\u7684\u503c\u521d\u59cb\u5316\uff0c\u5373\u4f7f\u63a5\u53e3\u7c7b\u578b\u4e5f\u4e0d\u4f8b\u5916\u3002\u5bf9\u4e8e\u4e00\u4e2a\u63a5\u53e3\u7684\u96f6\u503c\u5c31\u662f\u5b83\u7684\u7c7b\u578b\u548c\u503c\u7684\u90e8\u5206\u90fd\u662fnil\uff08\u56fe7.1\uff09\u3002</p> <p></p> <p>\u4e00\u4e2a\u63a5\u53e3\u503c\u57fa\u4e8e\u5b83\u7684\u52a8\u6001\u7c7b\u578b\u88ab\u63cf\u8ff0\u4e3a\u7a7a\u6216\u975e\u7a7a\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u7a7a\u7684\u63a5\u53e3\u503c\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528w==nil\u6216\u8005w!=nil\u6765\u5224\u65ad\u63a5\u53e3\u503c\u662f\u5426\u4e3a\u7a7a\u3002\u8c03\u7528\u4e00\u4e2a\u7a7a\u63a5\u53e3\u503c\u4e0a\u7684\u4efb\u610f\u65b9\u6cd5\u90fd\u4f1a\u4ea7\u751fpanic:</p> <pre><code>w.Write([]byte(\"hello\")) // panic: nil pointer dereference\n</code></pre> <p>\u7b2c\u4e8c\u4e2a\u8bed\u53e5\u5c06\u4e00\u4e2a<code>*os.File</code>\u7c7b\u578b\u7684\u503c\u8d4b\u7ed9\u53d8\u91cfw:</p> <pre><code>w = os.Stdout\n</code></pre> <p>\u8fd9\u4e2a\u8d4b\u503c\u8fc7\u7a0b\u8c03\u7528\u4e86\u4e00\u4e2a\u5177\u4f53\u7c7b\u578b\u5230\u63a5\u53e3\u7c7b\u578b\u7684\u9690\u5f0f\u8f6c\u6362\uff0c\u8fd9\u548c\u663e\u5f0f\u7684\u4f7f\u7528io.Writer(os.Stdout)\u662f\u7b49\u4ef7\u7684\u3002</p> <p>\u8fd9\u4e2a\u63a5\u53e3\u503c\u7684\u52a8\u6001\u7c7b\u578b\u4e3a<code>*os.File</code>\uff0c\u5b83\u7684\u52a8\u6001\u503c\u4e3aos.Stdout\u7684\u62f7\u8d1d</p> <p>os.Stdout\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u7c7b\u578b\u4e3a*os.FIle\u3002</p> <p></p> <p>\u8c03\u7528\u4e00\u4e2a\u5305\u542b<code>*os.File</code>\u7c7b\u578b\u6307\u9488\u7684\u63a5\u53e3\u503c\u7684Write\u65b9\u6cd5\uff0c\u4f7f\u5f97<code>(*os.File).Write</code>\u65b9\u6cd5\u88ab\u8c03\u7528\u3002\u8fd9\u4e2a\u8c03\u7528\u8f93\u51fa\u201chello\u201d\u3002</p> <pre><code>w.Write([]byte(\"hello\")) // \"hello\"\n</code></pre> <p>\u63a5\u53e3\u503c\u7684\u8c03\u7528\u65b9\u6cd5\u4f7f\u7528\u4e86\u52a8\u6001\u5206\u914d(dynamic dispatch)\uff1a</p> <ul> <li>\u627e\u5230\u52a8\u6001\u7c7b\u578b\u5bf9\u5e94\u7684\u65b9\u6cd5<code>(*os.File).Write</code></li> <li>\u5c06\u52a8\u6001\u503c\u7684\u62f7\u8d1d\u4f5c\u4e3a\u8be5\u65b9\u6cd5\u7684\u63a5\u6536\u5668</li> </ul> <p>\u6548\u679c\u548c\u4e0b\u9762\u8fd9\u4e2a\u76f4\u63a5\u8c03\u7528\u4e00\u6837\uff1a</p> <pre><code>os.Stdout.Write([]byte(\"hello\")) // \"hello\"\n</code></pre> <p>\u4e00\u4e2a\u63a5\u53e3\u503c\u53ef\u4ee5\u6301\u6709\u4efb\u610f\u5927\u7684\u52a8\u6001\u503c\u3002\u4f8b\u5982\uff0c\u8868\u793a\u65f6\u95f4\u5b9e\u4f8b\u7684time.Time\u7c7b\u578b\uff0c\u8fd9\u4e2a\u7c7b\u578b\u6709\u51e0\u4e2a\u5bf9\u5916\u4e0d\u516c\u5f00\u7684\u5b57\u6bb5\u3002\u6211\u4eec\u4ece\u5b83\u4e0a\u9762\u521b\u5efa\u4e00\u4e2a\u63a5\u53e3\u503c\uff1a</p> <pre><code>var x interface{} = time.Now()\n</code></pre> <p>\u7ed3\u679c\u53ef\u80fd\u548c\u56fe7.4\u76f8\u4f3c\u3002\u4ece\u6982\u5ff5\u4e0a\u8bb2\uff0c\u4e0d\u8bba\u63a5\u53e3\u503c\u591a\u5927\uff0c\u52a8\u6001\u503c\u603b\u662f\u53ef\u4ee5\u5bb9\u4e0b\u5b83\u3002\uff08\u8fd9\u53ea\u662f\u4e00\u4e2a\u6982\u5ff5\u4e0a\u7684\u6a21\u578b\uff1b\u5177\u4f53\u7684\u5b9e\u73b0\u53ef\u80fd\u4f1a\u975e\u5e38\u4e0d\u540c\uff09</p> <p></p>"},{"location":"software_development/backend/language/Go/#_66","title":"\u63a5\u53e3\u4f7f\u7528\u6ce8\u610f\u4e8b\u9879","text":""},{"location":"software_development/backend/language/Go/#_67","title":"\u63a5\u53e3\u503c\u7684\u6bd4\u8f83","text":"<p>\u63a5\u53e3\u503c\u53ef\u4ee5\u4f7f\u7528==\u548c!\uff1d\u6765\u8fdb\u884c\u6bd4\u8f83\u3002\u4e24\u4e2a\u63a5\u53e3\u503c\u76f8\u7b49\u4ec5\u5f53\uff1a</p> <ul> <li>\u5b83\u4eec\u90fd\u662fnil\u503c</li> <li>\u6216\u8005\u5b83\u4eec\u7684\u52a8\u6001\u7c7b\u578b\u76f8\u540c\uff0c\u5e76\u4e14\u52a8\u6001\u7c7b\u578b\u5c5e\u4e8e\u53ef\u6bd4\u8f83\u7684\u7c7b\u578b\uff0c\u5e76\u4e14\u52a8\u6001\u503c\u76f8\u7b49\u3002</li> </ul> <p>\u56e0\u4e3a\u63a5\u53e3\u503c\u662f\u53ef\u6bd4\u8f83\u7684\uff0c\u6240\u4ee5\u5b83\u4eec\u53ef\u4ee5\u7528\u5728map\u7684\u952e\u6216\u8005\u4f5c\u4e3aswitch\u8bed\u53e5\u7684\u64cd\u4f5c\u6570\u3002</p> <p>\u4f46\u662f\u5982\u679c\u4e24\u4e2a\u63a5\u53e3\u503c\u7684\u52a8\u6001\u7c7b\u578b\u76f8\u540c\uff0c\u4f46\u662f\u8fd9\u4e2a\u52a8\u6001\u7c7b\u578b\u662f\u4e0d\u53ef\u6bd4\u8f83\u7684\uff08\u6bd4\u5982\u5207\u7247\uff09\uff0c\u5c06\u5b83\u4eec\u8fdb\u884c\u6bd4\u8f83\u5c31\u4f1a\u5931\u8d25\u5e76\u4e14panic:</p> <pre><code>var x interface{} = []int{1, 2, 3}\nfmt.Println(x == x) // panic: comparing uncomparable type []int\n</code></pre> <p>\u8003\u8651\u5230\u8fd9\u70b9\uff0c\u63a5\u53e3\u7c7b\u578b\u662f\u975e\u5e38\u4e0e\u4f17\u4e0d\u540c\u7684\u3002\u5176\u5b83\u7c7b\u578b\u8981\u4e48\u662f\u5b89\u5168\u7684\u53ef\u6bd4\u8f83\u7c7b\u578b\uff08\u5982\u57fa\u672c\u7c7b\u578b\u548c\u6307\u9488\uff09\u8981\u4e48\u662f\u5b8c\u5168\u4e0d\u53ef\u6bd4\u8f83\u7684\u7c7b\u578b\uff08\u5982\u5207\u7247\uff0c\u6620\u5c04\u7c7b\u578b\uff0c\u548c\u51fd\u6570\uff09\uff0c\u4f46\u662f\u5728\u6bd4\u8f83\u63a5\u53e3\u503c\u6216\u8005\u5305\u542b\u4e86\u63a5\u53e3\u503c\u7684\u805a\u5408\u7c7b\u578b\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u610f\u8bc6\u5230\u6f5c\u5728\u7684panic\u3002\u540c\u6837\u7684\u98ce\u9669\u4e5f\u5b58\u5728\u4e8e\u4f7f\u7528\u63a5\u53e3\u4f5c\u4e3amap\u7684\u952e\u6216\u8005switch\u7684\u64cd\u4f5c\u6570\u3002\u53ea\u80fd\u6bd4\u8f83\u4f60\u975e\u5e38\u786e\u5b9a\u5b83\u4eec\u7684\u52a8\u6001\u503c\u662f\u53ef\u6bd4\u8f83\u7c7b\u578b\u7684\u63a5\u53e3\u503c\u3002</p> <p>\u5f53\u6211\u4eec\u5904\u7406\u9519\u8bef\u6216\u8005\u8c03\u8bd5\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5f97\u77e5\u63a5\u53e3\u503c\u7684\u52a8\u6001\u7c7b\u578b\u662f\u975e\u5e38\u6709\u5e2e\u52a9\u7684\u3002\u6240\u4ee5\u6211\u4eec\u4f7f\u7528fmt\u5305\u7684%T\u52a8\u4f5c:</p> <pre><code>var w io.Writer\nfmt.Printf(\"%T\\n\", w) // \"&lt;nil&gt;\"\nw = os.Stdout\nfmt.Printf(\"%T\\n\", w) // \"*os.File\"\nw = new(bytes.Buffer)\nfmt.Printf(\"%T\\n\", w) // \"*bytes.Buffer\"\n</code></pre>"},{"location":"software_development/backend/language/Go/#nilnil","title":"\u4e00\u4e2a\u5305\u542bnil\u6307\u9488\u7684\u63a5\u53e3\u4e0d\u662fnil\u63a5\u53e3","text":"<p>\u4e00\u4e2a\u4e0d\u5305\u542b\u4efb\u4f55\u503c\u7684nil\u63a5\u53e3\u503c\u548c\u4e00\u4e2a\u521a\u597d\u5305\u542bnil\u6307\u9488\u7684\u63a5\u53e3\u503c\u662f\u4e0d\u540c\u7684\u3002</p> <p>\u601d\u8003\u4e0b\u9762\u7684\u7a0b\u5e8f\u3002\u5f53debug\u53d8\u91cf\u8bbe\u7f6e\u4e3atrue\u65f6\uff0cmain\u51fd\u6570\u4f1a\u5c06f\u51fd\u6570\u7684\u8f93\u51fa\u6536\u96c6\u5230\u4e00\u4e2abytes.Buffer\u7c7b\u578b\u4e2d\u3002</p> <pre><code>const debug = true\n\nfunc main() {\n    var buf *bytes.Buffer\n    if debug {\n        buf = new(bytes.Buffer) // enable collection of output\n    }\n    f(buf) // NOTE: subtly incorrect!\n    if debug {\n        // ...use buf...\n    }\n}\n\n// If out is non-nil, output will be written to it.\nfunc f(out io.Writer) {\n    // ...do something...\n    if out != nil {\n        out.Write([]byte(\"done!\\n\"))\n    }\n}\n</code></pre> <p>\u6211\u4eec\u53ef\u80fd\u4f1a\u9884\u8ba1\u5f53\u628a\u53d8\u91cfdebug\u8bbe\u7f6e\u4e3afalse\u65f6\u53ef\u4ee5\u7981\u6b62\u5bf9\u8f93\u51fa\u7684\u6536\u96c6\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5728out.Write\u65b9\u6cd5\u8c03\u7528\u65f6\u7a0b\u5e8f\u53d1\u751f\u4e86panic\uff1a</p> <pre><code>if out != nil {\n    out.Write([]byte(\"done!\\n\")) // panic: nil pointer dereference\n}\n</code></pre> <p>\u5f53main\u51fd\u6570\u8c03\u7528\u51fd\u6570f\u65f6\uff0c\u5b83\u7ed9f\u51fd\u6570\u7684out\u53c2\u6570\u8d4b\u4e86\u4e00\u4e2a<code>*bytes.Buffer</code>\u7684\u7a7a\u6307\u9488\uff0c\u6240\u4ee5out\u7684\u52a8\u6001\u503c\u662fnil\u3002\u7136\u800c\uff0c\u5b83\u7684\u52a8\u6001\u7c7b\u578b\u662f<code>*bytes.Buffer</code>\uff0c\u610f\u601d\u5c31\u662fout\u53d8\u91cf\u662f\u4e00\u4e2a\u5305\u542b\u7a7a\u6307\u9488\u503c\u7684\u975e\u7a7a\u63a5\u53e3\uff08\u5982\u56fe7.5\uff09\uff0c\u6240\u4ee5\u9632\u5fa1\u6027\u68c0\u67e5out!=nil\u7684\u7ed3\u679c\u4f9d\u7136\u662ftrue\u3002</p> <p></p> <p>\u52a8\u6001\u5206\u914d\u673a\u5236\u4f9d\u7136\u51b3\u5b9a<code>(*bytes.Buffer).Write</code>\u7684\u65b9\u6cd5\u4f1a\u88ab\u8c03\u7528\uff0c\u4f46\u662f\u8fd9\u6b21\u7684\u63a5\u6536\u8005\u7684\u503c\u662fnil\u3002\u5bf9\u4e8e\u4e00\u4e9b\u5982<code>*os.File</code>\u7684\u7c7b\u578b\uff0cnil\u662f\u4e00\u4e2a\u6709\u6548\u7684\u63a5\u6536\u8005\uff08\u00a76.2.1\uff09\u3002</p> <p>\u4f46\u95ee\u9898\u5728\u4e8e\u5c3d\u7ba1\u4e00\u4e2anil\u7684<code>*bytes.Buffer</code>\u6307\u9488\u6709\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u7684\u65b9\u6cd5\uff0c\u4f46<code>(*bytes.Buffer).Write</code>\u65b9\u6cd5\u7684\u63a5\u6536\u8005\u4e0d\u80fd\u4e3a\u7a7a\uff0c\u6240\u4ee5\u5c06nil\u6307\u9488\u8d4b\u7ed9\u8fd9\u4e2a\u63a5\u53e3\u662f\u9519\u8bef\u7684\uff0c\u4f1a\u5f15\u53d1panic</p> <p>\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u5c06main\u51fd\u6570\u4e2d\u7684\u53d8\u91cfbuf\u7684\u7c7b\u578b\u6539\u4e3aio.Writer\uff0c\u56e0\u6b64\u53ef\u4ee5\u907f\u514d\u4e00\u5f00\u59cb\u5c31\u5c06\u4e00\u4e2a\u4e0d\u5b8c\u6574\u7684\u503c\u8d4b\u503c\u7ed9\u8fd9\u4e2a\u63a5\u53e3\uff1a</p> <pre><code>var buf io.Writer\nif debug {\n    buf = new(bytes.Buffer) // enable collection of output\n}\nf(buf) // OK\n</code></pre>"},{"location":"software_development/backend/language/Go/#_68","title":"\u7279\u6b8a\u63a5\u53e3\u7c7b\u578b","text":""},{"location":"software_development/backend/language/Go/#sortinterface","title":"sort.Interface","text":"<p>sort\u5305\u63d0\u4f9b\u81ea\u5b9a\u4e49\u7c7b\u578b\u6392\u5e8f\u65b9\u6cd5\u7684\u63a5\u53e3sort.Interface\uff0c\u53ea\u8981\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528sort.Sort\u8fdb\u884c\u81ea\u5b9a\u4e49\u6392\u5e8f</p> <p>sort.Interface\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>package sort\n\ntype Interface interface {\n    Len() int\n    Less(i, j int) bool // i, j are indices of sequence elements\n    Swap(i, j int)\n}\n</code></pre> <p>\u4e3e\u4e2a\u4f8b\u5b50</p> <pre><code>type Track struct {\n    Title  string\n    Artist string\n    Album  string\n    Year   int\n    Length time.Duration\n}\n\ntype byArtist []*Track\nfunc (x byArtist) Len() int           { return len(x) }\nfunc (x byArtist) Less(i, j int) bool { return x[i].Artist &lt; x[j].Artist }\nfunc (x byArtist) Swap(i, j int)      { x[i], x[j] = x[j], x[i] }\n\nsort.Sort(byArtist(tracks))\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u53cd\u5411\u6392\u5e8f\uff0c\u4e0d\u9700\u8981\u91cd\u65b0\u5b9e\u73b0\u63a5\u53e3</p> <pre><code>sort.Sort(sort.Reverse(byArtist(tracks)))\n</code></pre> <p><code>sort.Reverse</code> \u63a5\u53d7\u4e00\u4e2a\u5b9e\u73b0\u4e86 <code>sort.Interface</code> \u7684\u63a5\u53e3\u4f5c\u4e3a\u53c2\u6570\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 <code>sort.Interface</code> \u5b9e\u73b0\uff0c\u8fd9\u4e2a\u65b0\u7684\u5b9e\u73b0\u4f1a\u5c06\u539f\u63a5\u53e3\u4e2d\u7684 <code>Less</code> \u65b9\u6cd5\u7684\u884c\u4e3a\u53cd\u8f6c\uff0c\u4ece\u800c\u6539\u53d8\u6392\u5e8f\u7684\u65b9\u5411\u3002</p> <p>sort\u5305\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4e0d\u516c\u5f00\u7684struct\u7c7b\u578breverse\uff0c\u5b83\u5d4c\u5165\u4e86\u4e00\u4e2asort.Interface\u3002reverse\u7684Less\u65b9\u6cd5\u8c03\u7528\u4e86\u5185\u5d4c\u7684sort.Interface\u503c\u7684Less\u65b9\u6cd5\uff0c\u4f46\u662f\u901a\u8fc7\u4ea4\u6362\u7d22\u5f15\u7684\u65b9\u5f0f\u4f7f\u6392\u5e8f\u7ed3\u679c\u53d8\u6210\u9006\u5e8f\u3002</p> <pre><code>package sort\n\ntype reverse struct{ Interface } // that is, sort.Interface\n\nfunc (r reverse) Less(i, j int) bool { return r.Interface.Less(j, i) }\n\nfunc Reverse(data Interface) Interface { return reverse{data} }\n</code></pre> <p>reverse\u7684\u53e6\u5916\u4e24\u4e2a\u65b9\u6cd5Len\u548cSwap\u9690\u5f0f\u5730\u7531\u539f\u6709\u5185\u5d4c\u7684sort.Interface\u63d0\u4f9b\u3002\u56e0\u4e3areverse\u662f\u4e00\u4e2a\u4e0d\u516c\u5f00\u7684\u7c7b\u578b\uff0c\u6240\u4ee5\u5bfc\u51fa\u51fd\u6570Reverse\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u539f\u6709sort.Interface\u503c\u7684reverse\u7c7b\u578b\u5b9e\u4f8b\u3002</p>"},{"location":"software_development/backend/language/Go/#httphandler","title":"http.Handler","text":""},{"location":"software_development/backend/language/Go/#error","title":"error","text":"<p>error\u5176\u5b9e\u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>type error interface {\n    Error() string\n}\n</code></pre> <p>\u521b\u5efa\u4e00\u4e2aerror\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u8c03\u7528errors.New\u51fd\u6570\uff0c\u5b83\u4f1a\u6839\u636e\u4f20\u5165\u7684\u9519\u8bef\u4fe1\u606f\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684error\u3002\u6574\u4e2aerrors\u5305\u4ec5\u53ea\u67094\u884c\uff1a</p> <pre><code>package errors\n\nfunc New(text string) error { return &amp;errorString{text} }\n\ntype errorString struct { text string }\n\nfunc (e *errorString) Error() string { return e.text }\n</code></pre> <p>\u627f\u8f7derrorString\u7684\u7c7b\u578b\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u800c\u975e\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8fd9\u662f\u4e3a\u4e86\u4fdd\u62a4\u5b83\u8868\u793a\u7684\u9519\u8bef\u907f\u514d\u7c97\u5fc3\uff08\u6216\u6709\u610f\uff09\u7684\u66f4\u65b0\u3002\u5e76\u4e14\u56e0\u4e3a\u662f\u6307\u9488\u7c7b\u578b<code>*errorString</code>\u6ee1\u8db3error\u63a5\u53e3\u800c\u975eerrorString\u7c7b\u578b\uff0c\u6240\u4ee5\u6bcf\u4e2aNew\u51fd\u6570\u7684\u8c03\u7528\u90fd\u5206\u914d\u4e86\u4e00\u4e2a\u72ec\u7279\u7684\u548c\u5176\u4ed6\u9519\u8bef\u4e0d\u76f8\u540c\u7684\u5b9e\u4f8b\u3002</p> <p>\u5982\u4e0b\u4f8b\uff0c<code>errors.New</code> \u51fd\u6570\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5b9e\u73b0\u4e86 <code>error</code> \u63a5\u53e3\u7684\u65b0\u5bf9\u8c61\u3002\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u5b58\u5730\u5740\uff0c\u5373\u4f7f\u5b83\u4eec\u7684\u5185\u5bb9\u76f8\u540c\uff0c\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u4e5f\u4e0d\u4f1a\u88ab\u8ba4\u4e3a\u662f\u76f8\u7b49\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u662f\u540c\u4e00\u4e2a\u5b9e\u4f8b\u3002</p> <pre><code>fmt.Println(errors.New(\"EOF\") == errors.New(\"EOF\")) // \"false\"\n</code></pre> <p>\u6211\u4eec\u4e5f\u4e0d\u60f3\u8981\u91cd\u8981\u7684error\u4f8b\u5982io.EOF\u548c\u4e00\u4e2a\u521a\u597d\u6709\u76f8\u540c\u9519\u8bef\u6d88\u606f\u7684error\u6bd4\u8f83\u540e\u76f8\u7b49\u3002</p> <p>\u8c03\u7528errors.New\u51fd\u6570\u662f\u975e\u5e38\u7a00\u5c11\u7684\uff0c\u56e0\u4e3a\u6709\u4e00\u4e2a\u65b9\u4fbf\u7684\u5c01\u88c5\u51fd\u6570fmt.Errorf\uff0c\u5b83\u8fd8\u4f1a\u5904\u7406\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u3002</p> <pre><code>package fmt\n\nimport \"errors\"\n\nfunc Errorf(format string, args ...interface{}) error {\n    return errors.New(Sprintf(format, args...))\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#goroutineschannel","title":"Goroutines\u548cChannel","text":""},{"location":"software_development/backend/language/Go/#goroutines","title":"Goroutines","text":"<p>\u5f53\u4e00\u4e2a\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0c\u5176\u4e3b\u51fd\u6570\u5373\u5728\u4e00\u4e2a\u5355\u72ec\u7684goroutine\u4e2d\u8fd0\u884c\uff0c\u6211\u4eec\u53eb\u5b83main goroutine\u3002\u65b0\u7684goroutine\u4f1a\u7528go\u8bed\u53e5\u6765\u521b\u5efa\u3002</p> <p>\u4e3b\u51fd\u6570\u8fd4\u56de\u65f6\uff0c\u6240\u6709\u7684goroutine\u90fd\u4f1a\u88ab\u76f4\u63a5\u6253\u65ad\uff0c\u7a0b\u5e8f\u9000\u51fa\u3002</p> <p>\u9664\u4e86\u4ece\u4e3b\u51fd\u6570\u9000\u51fa\u6216\u8005\u76f4\u63a5\u7ec8\u6b62\u7a0b\u5e8f\u4e4b\u5916\uff0c\u6ca1\u6709\u5176\u5b83\u7684\u7f16\u7a0b\u65b9\u6cd5\u80fd\u591f\u8ba9\u4e00\u4e2agoroutine\u6765\u6253\u65ad\u53e6\u4e00\u4e2a\u7684\u6267\u884c\uff0c\u4f46\u662f\u4e4b\u540e\u53ef\u4ee5\u770b\u5230\u4e00\u79cd\u65b9\u5f0f\u6765\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u7684\uff0c\u901a\u8fc7goroutine\u4e4b\u95f4\u7684\u901a\u4fe1\u6765\u8ba9\u4e00\u4e2agoroutine\u8bf7\u6c42\u5176\u5b83\u7684goroutine\uff0c\u5e76\u8ba9\u88ab\u8bf7\u6c42\u7684goroutine\u81ea\u884c\u7ed3\u675f\u6267\u884c\u3002</p> <p>\u3010\u4f8b1:Goroutines\u7684\u5e94\u7528\u3011</p> <p>\u6211\u89c9\u5f97\u8fd9\u4e2a\u4f8b\u5b50\u5f88\u6709\u8da3\u54c8\u54c8\u54c8\u6240\u4ee5\u653e\u4e0a\u6765\u4e86</p> <pre><code>func main() {\n    go spinner(100 * time.Millisecond)\n    const n = 45\n    fibN := fib(n) // slow\n    fmt.Printf(\"\\rFibonacci(%d) = %d\\n\", n, fibN)\n}\n\nfunc spinner(delay time.Duration) {\n    for {\n        for _, r := range `-\\|/` {\n            fmt.Printf(\"\\r%c\", r)\n            time.Sleep(delay)\n        }\n    }\n}\n\nfunc fib(x int) int {\n    if x &lt; 2 {\n        return x\n    }\n    return fib(x-1) + fib(x-2)\n}\n</code></pre> <p>\u56de\u8f66\u7b26 <code>\\r</code> \u7684\u4f5c\u7528</p> <p>\u56de\u8f66\u7b26\uff1a\u5c06\u5149\u6807\u79fb\u56de\u5230\u5f53\u524d\u884c\u7684\u5f00\u5934\uff0c\u4f46\u4e0d\u4f1a\u79fb\u52a8\u5230\u4e0b\u4e00\u884c\u3002\u8fd9\u610f\u5473\u7740\u4efb\u4f55\u540e\u7eed\u7684\u8f93\u51fa\u90fd\u4f1a\u8986\u76d6\u5f53\u524d\u884c\u7684\u5185\u5bb9\uff0c\u76f4\u5230\u9047\u5230\u6362\u884c\u7b26 <code>\\n</code> \u6216\u5230\u8fbe\u73b0\u6709\u6587\u672c\u7684\u672b\u5c3e\u3002</p> <p>\u4f7f\u7528\u573a\u666f</p> <ol> <li>\u66f4\u65b0\u540c\u4e00\u884c\u7684\u5185\u5bb9\uff1a\u5f53\u4f60\u60f3\u5728\u540c\u4e00\u884c\u4e0a\u66f4\u65b0\u4fe1\u606f\u800c\u4e0d\u6eda\u52a8\u5c4f\u5e55\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>\\r</code>\u3002\u8fd9\u5728\u663e\u793a\u8fdb\u5ea6\u6761\u6216\u5b9e\u65f6\u66f4\u65b0\u72b6\u6001\u4fe1\u606f\u65f6\u975e\u5e38\u6709\u7528\u3002</li> <li>\u6a21\u62df\u8986\u76d6\u6548\u679c\uff1a\u5982\u679c\u4f60\u60f3\u8981\u8986\u76d6\u4e4b\u524d\u6253\u5370\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u5148\u6253\u5370\u4e00\u6bb5\u6587\u672c\uff0c\u7136\u540e\u4f7f\u7528 <code>\\r</code> \u8fd4\u56de\u884c\u9996\u5e76\u6253\u5370\u65b0\u7684\u5185\u5bb9\u3002</li> </ol>"},{"location":"software_development/backend/language/Go/#channel","title":"Channel","text":"<p>\u4e00\u4e2achannel\u662f\u4e00\u4e2a\u901a\u4fe1\u673a\u5236\uff0c\u5b83\u53ef\u4ee5\u8ba9\u4e00\u4e2agoroutine\u901a\u8fc7\u5b83\u7ed9\u53e6\u4e00\u4e2agoroutine\u53d1\u9001\u503c\u4fe1\u606f\u3002</p> <p>\u6bcf\u4e2achannel\u90fd\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u7c7b\u578b\uff0c\u4e5f\u5c31\u662fchannels\u53ef\u53d1\u9001\u6570\u636e\u7684\u7c7b\u578b\u3002\u4e00\u4e2a\u53ef\u4ee5\u53d1\u9001int\u7c7b\u578b\u6570\u636e\u7684channel\u4e00\u822c\u5199\u4e3achan int\u3002</p> <p>\u4f7f\u7528\u5185\u7f6e\u7684make\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2achannel\uff1a</p> <pre><code>ch := make(chan int) // ch has type 'chan int'\n</code></pre> <p>\u4ee5\u6700\u7b80\u5355\u65b9\u5f0f\u8c03\u7528make\u51fd\u6570\u521b\u5efa\u7684\u662f\u4e00\u4e2a\u65e0\u7f13\u5b58\u7684channel\uff0c\u4f46\u662f\u6211\u4eec\u4e5f\u53ef\u4ee5\u6307\u5b9a\u7b2c\u4e8c\u4e2a\u6574\u578b\u53c2\u6570\uff0c\u5bf9\u5e94channel\u7684\u5bb9\u91cf\u3002\u5982\u679cchannel\u7684\u5bb9\u91cf\u5927\u4e8e\u96f6\uff0c\u90a3\u4e48\u8be5channel\u5c31\u662f\u5e26\u7f13\u5b58\u7684channel\u3002</p> <pre><code>ch = make(chan int)    // unbuffered channel\nch = make(chan int, 0) // unbuffered channel\nch = make(chan int, 3) // buffered channel with capacity 3\n</code></pre> <p>\u548cmap\u7c7b\u4f3c\uff0cchannel\u4e5f\u5bf9\u5e94\u4e00\u4e2amake\u521b\u5efa\u7684\u5e95\u5c42\u6570\u636e\u7ed3\u6784\u7684\u5f15\u7528\u3002\u5f53\u6211\u4eec\u590d\u5236\u4e00\u4e2achannel\u6216\u7528\u4e8e\u51fd\u6570\u53c2\u6570\u4f20\u9012\u65f6\uff0c\u6211\u4eec\u53ea\u662f\u62f7\u8d1d\u4e86\u4e00\u4e2achannel\u5f15\u7528\uff0c\u56e0\u6b64\u8c03\u7528\u8005\u548c\u88ab\u8c03\u7528\u8005\u5c06\u5f15\u7528\u540c\u4e00\u4e2achannel\u5bf9\u8c61\u3002\u548c\u5176\u5b83\u7684\u5f15\u7528\u7c7b\u578b\u4e00\u6837\uff0cchannel\u7684\u96f6\u503c\u4e5f\u662fnil\u3002</p> <p>\u4e24\u4e2a\u76f8\u540c\u7c7b\u578b\u7684channel\u53ef\u4ee5\u4f7f\u7528==\u8fd0\u7b97\u7b26\u6bd4\u8f83\u3002\u5982\u679c\u4e24\u4e2achannel\u5f15\u7528\u7684\u662f\u76f8\u540c\u7684\u5bf9\u8c61\uff0c\u90a3\u4e48\u6bd4\u8f83\u7684\u7ed3\u679c\u4e3a\u771f\u3002\u4e00\u4e2achannel\u4e5f\u53ef\u4ee5\u548cnil\u8fdb\u884c\u6bd4\u8f83\u3002</p> <p>channel\u7684\u53d1\u9001\u548c\u63a5\u6536\u64cd\u4f5c</p> <pre><code>ch &lt;- x  // a send statement\nx = &lt;-ch // a receive expression in an assignment statement\n&lt;-ch     // a receive statement; result is discarded\n</code></pre> <p>channel\u8fd8\u652f\u6301close\u64cd\u4f5c\uff0c\u7528\u4e8e\u5173\u95edchannel</p> <p>channel\u5173\u95ed\u540e\u4e0d\u80fd\u53d1\u9001\uff0c\u4f46\u662f\u53ef\u4ee5\u63a5\u6536</p> <ul> <li>\u5173\u95edchannel\u540e\uff0c\u5bf9\u57fa\u4e8e\u8be5channel\u7684\u4efb\u4f55\u53d1\u9001\u64cd\u4f5c\u90fd\u5c06\u5bfc\u81f4panic\u5f02\u5e38\u3002</li> <li>\u5bf9\u4e00\u4e2a\u5df2\u7ecf\u88abclose\u8fc7\u7684channel\u8fdb\u884c\u63a5\u6536\u64cd\u4f5c\u4f9d\u7136\u53ef\u4ee5\u63a5\u53d7\u5230\u4e4b\u524d\u5df2\u7ecf\u6210\u529f\u53d1\u9001\u7684\u6570\u636e\uff1b\u5982\u679cchannel\u4e2d\u5df2\u7ecf\u6ca1\u6709\u6570\u636e\u7684\u8bdd\u5c06\u4ea7\u751f\u4e00\u4e2a\u96f6\u503c\u7684\u6570\u636e\u3002</li> </ul> <p>\u4f7f\u7528\u5185\u7f6e\u7684close\u51fd\u6570\u5c31\u53ef\u4ee5\u5173\u95ed\u4e00\u4e2achannel\uff1a</p> <pre><code>close(ch)\n</code></pre>"},{"location":"software_development/backend/language/Go/#channel_1","title":"\u4e0d\u5e26\u7f13\u5b58\u7684channel","text":"<p>\u57fa\u4e8e\u65e0\u7f13\u5b58Channels\u7684\u53d1\u9001\u548c\u63a5\u6536\u64cd\u4f5c\u5c06\u5bfc\u81f4\u4e24\u4e2agoroutine\u505a\u4e00\u6b21\u540c\u6b65\u64cd\u4f5c\u3002\u56e0\u4e3a\u8fd9\u4e2a\u539f\u56e0\uff0c\u65e0\u7f13\u5b58Channels\u6709\u65f6\u5019\u4e5f\u88ab\u79f0\u4e3a\u540c\u6b65Channels\u3002</p> <p>\u4e00\u4e2a\u57fa\u4e8e\u65e0\u7f13\u5b58Channels\u7684\u53d1\u9001\u64cd\u4f5c\u5c06\u5bfc\u81f4\u53d1\u9001\u8005goroutine\u963b\u585e\uff0c\u76f4\u5230\u53e6\u4e00\u4e2agoroutine\u5728\u76f8\u540c\u7684Channels\u4e0a\u6267\u884c\u63a5\u6536\u64cd\u4f5c\uff0c\u5f53\u53d1\u9001\u7684\u503c\u901a\u8fc7Channels\u6210\u529f\u4f20\u8f93\u4e4b\u540e\uff0c\u4e24\u4e2agoroutine\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u540e\u9762\u7684\u8bed\u53e5\u3002\u53cd\u4e4b\uff0c\u5982\u679c\u63a5\u6536\u64cd\u4f5c\u5148\u53d1\u751f\uff0c\u90a3\u4e48\u63a5\u6536\u8005goroutine\u4e5f\u5c06\u963b\u585e\uff0c\u76f4\u5230\u6709\u53e6\u4e00\u4e2agoroutine\u5728\u76f8\u540c\u7684Channels\u4e0a\u6267\u884c\u53d1\u9001\u64cd\u4f5c\u3002</p> <p>\u3010\u4f8b\u5b50\u3011</p> <p>\u6211\u4eec\u9700\u8981\u8ba9\u4e3bgoroutine\u7b49\u5f85\u540e\u53f0goroutine\u5b8c\u6210\u5de5\u4f5c\u540e\u518d\u9000\u51fa\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2achannel\u6765\u540c\u6b65\u4e24\u4e2agoroutine\uff1a</p> <pre><code>func main() {\n    conn, err := net.Dial(\"tcp\", \"localhost:8000\")\n    if err != nil {\n        log.Fatal(err)\n    }\n    done := make(chan struct{})\n    go func() {\n        io.Copy(os.Stdout, conn) // NOTE: ignoring errors\n        log.Println(\"done\")\n        done &lt;- struct{}{} // signal the main goroutine\n    }()\n    mustCopy(conn, os.Stdin)\n    conn.Close()\n    &lt;-done // wait for background goroutine to finish\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#channel_2","title":"\u4e32\u8054\u7684channel","text":"<p>\u8be6\u89c1https://golang-china.github.io/gopl-zh/ch8/ch8-04.html#:~:text=%E4%B8%B2%E8%81%94%E7%9A%84Channels%EF%BC%88Pipeline%EF%BC%89</p> <p>channel\u53ef\u4ee5\u4f5c\u4e3a\u4e24\u4e2agoroutine\u4e4b\u95f4\u4f20\u8f93\u6570\u636e\u7684\u7ba1\u9053</p> <p>\u3010\u4f8b\u5b50\u3011</p> <p>\u5bf9\u4e8e\u53d1\u9001\u8005\uff0c\u5982\u679c\u6ca1\u6709\u6570\u636e\u9700\u8981\u53d1\u9001\uff0c\u53ef\u4ee5\u76f4\u63a5</p> <pre><code>close(naturals) // naturals\u5b9a\u4e49naturals := make(chan int)\n</code></pre> <p>\u4e00\u4e2achannel\u88ab\u5173\u95ed\u540e\uff0c\u518d\u5411\u8be5channel\u53d1\u9001\u6570\u636e\u5c06\u5bfc\u81f4panic\u5f02\u5e38\u3002</p> <p>\u5bf9\u4e8e\u63a5\u6536\u8005\uff0c\u53d1\u9001\u8005\u5173\u95edchannel\u5e76\u4e14channel\u7684\u6570\u636e\u90fd\u88ab\u63a5\u6536\u8005\u5904\u7406\u5b8c\u540e\uff0c\u63a5\u6536\u8005\u4e0d\u4f1a\u88ab\u963b\u585e\uff0c\u800c\u662f\u7acb\u5373\u8fd4\u56de\u96f6\u503c\uff08\u5373\u63a5\u6536\u8005\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u65e0\u6cd5\u77e5\u9053\u53d1\u9001\u8005\u662f\u5426\u5173\u95edchannel\uff09</p> <p>\u63a5\u6536\u64cd\u4f5c\u6709\u4e00\u4e2a\u53d8\u4f53\u5f62\u5f0f\uff1a\u5b83\u591a\u63a5\u6536\u4e00\u4e2a\u7ed3\u679c\uff0c\u591a\u63a5\u6536\u7684\u7b2c\u4e8c\u4e2a\u7ed3\u679c\u662f\u4e00\u4e2a\u5e03\u5c14\u503cok\uff0cture\u8868\u793a\u6210\u529f\u4ecechannels\u63a5\u6536\u5230\u503c\uff0cfalse\u8868\u793achannels\u5df2\u7ecf\u88ab\u5173\u95ed\u5e76\u4e14\u91cc\u9762\u6ca1\u6709\u503c\u53ef\u63a5\u6536\u3002\u4f7f\u7528\u8fd9\u4e2a\u7279\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u4fee\u6539squarer\u51fd\u6570\u4e2d\u7684\u5faa\u73af\u4ee3\u7801\uff0c\u5f53naturals\u5bf9\u5e94\u7684channel\u88ab\u5173\u95ed\u5e76\u6ca1\u6709\u503c\u53ef\u63a5\u6536\u65f6\u8df3\u51fa\u5faa\u73af\uff0c\u5e76\u4e14\u4e5f\u5173\u95edsquares\u5bf9\u5e94\u7684channel.</p> <pre><code>// Squarer\ngo func() {\n    for {\n        x, ok := &lt;-naturals\n        if !ok {\n            break // channel was closed and drained\n        }\n        squares &lt;- x * x\n    }\n    close(squares)\n}()\n</code></pre> <p>range\u5bf9\u4ee5\u4e0a\u65b9\u6cd5\u8fdb\u884c\u4e86\u7b80\u5316\uff0c\u7b49\u4ef7\u4e8e\u4ee5\u4e0b\u5f62\u5f0f</p> <p>\u5bf9\u4e8echannel\uff0c for range\u7ed3\u675f\u7684\u6761\u4ef6\u662f\uff1achannel\u88abclose</p> <pre><code>func main() {\n    naturals := make(chan int)\n    squares := make(chan int)\n\n    // Counter\n    go func() {\n        for x := 0; x &lt; 100; x++ {\n            naturals &lt;- x\n        }\n        close(naturals)\n    }()\n\n    // Squarer\n    go func() {\n        for x := range naturals {\n            squares &lt;- x * x\n        }\n        close(squares)\n    }()\n\n    // Printer (in main goroutine)\n    for x := range squares {\n        fmt.Println(x)\n    }\n}\n</code></pre> <p>\u5176\u5b9e\u4f60\u5e76\u4e0d\u9700\u8981\u5173\u95ed\u6bcf\u4e00\u4e2achannel\uff08\u53ea\u9700\u8981\u5173\u95ed\u53d1\u9001\u8005channel\uff09\u3002\u53ea\u6709\u5f53\u9700\u8981\u544a\u8bc9\u63a5\u6536\u8005goroutine\uff0c\u6240\u6709\u7684\u6570\u636e\u5df2\u7ecf\u5168\u90e8\u53d1\u9001\u65f6\u624d\u9700\u8981\u5173\u95edchannel\u3002\u4e0d\u7ba1\u4e00\u4e2achannel\u662f\u5426\u88ab\u5173\u95ed\uff0c\u5f53\u5b83\u6ca1\u6709\u88ab\u5f15\u7528\u65f6\u5c06\u4f1a\u88abGo\u8bed\u8a00\u7684\u5783\u573e\u81ea\u52a8\u56de\u6536\u5668\u56de\u6536\u3002\uff08\u4e0d\u8981\u5c06\u5173\u95ed\u4e00\u4e2a\u6253\u5f00\u6587\u4ef6\u7684\u64cd\u4f5c\u548c\u5173\u95ed\u4e00\u4e2achannel\u64cd\u4f5c\u6df7\u6dc6\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u6253\u5f00\u7684\u6587\u4ef6\uff0c\u90fd\u9700\u8981\u5728\u4e0d\u4f7f\u7528\u7684\u65f6\u5019\u8c03\u7528\u5bf9\u5e94\u7684Close\u65b9\u6cd5\u6765\u5173\u95ed\u6587\u4ef6\u3002\uff09</p> <p>\u8bd5\u56fe\u91cd\u590d\u5173\u95ed\u4e00\u4e2achannel\u5c06\u5bfc\u81f4panic\u5f02\u5e38\uff0c\u8bd5\u56fe\u5173\u95ed\u4e00\u4e2anil\u503c\u7684channel\u4e5f\u5c06\u5bfc\u81f4panic\u5f02\u5e38\u3002</p>"},{"location":"software_development/backend/language/Go/#channel_3","title":"\u5355\u65b9\u5411\u7684channel","text":"<ul> <li>\u7c7b\u578b<code>chan&lt;- int</code>\u8868\u793a\u4e00\u4e2a\u53ea\u53d1\u9001int\u7684channel\uff0c\u53ea\u80fd\u53d1\u9001\u4e0d\u80fd\u63a5\u6536\u3002</li> <li>\u7c7b\u578b<code>&lt;-chan int</code>\u8868\u793a\u4e00\u4e2a\u53ea\u63a5\u6536int\u7684channel\uff0c\u53ea\u80fd\u63a5\u6536\u4e0d\u80fd\u53d1\u9001\u3002</li> </ul> <p>\uff08\u7bad\u5934<code>&lt;-</code>\u548c\u5173\u952e\u5b57chan\u7684\u76f8\u5bf9\u4f4d\u7f6e\u8868\u660e\u4e86channel\u7684\u65b9\u5411\u3002\uff09\u8fd9\u79cd\u9650\u5236\u5c06\u5728\u7f16\u8bd1\u671f\u68c0\u6d4b\u3002</p> <p>\u3010\u4f8b\u5b50\uff1a\u5728\u300c\u4e32\u8054\u7684channel\u300d\u7ae0\u8282\u6700\u540e\u51fa\u73b0\u7684\u4ee3\u7801\u8fdb\u884c\u4f18\u5316\u3011</p> <pre><code>unc counter(out chan&lt;- int) {\n    for x := 0; x &lt; 100; x++ {\n        out &lt;- x\n    }\n    close(out)\n}\n\nfunc squarer(out chan&lt;- int, in &lt;-chan int) {\n    for v := range in {\n        out &lt;- v * v\n    }\n    close(out)\n}\n\nfunc printer(in &lt;-chan int) {\n    for v := range in {\n        fmt.Println(v)\n    }\n}\n\nfunc main() {\n    naturals := make(chan int)\n    squares := make(chan int)\n    go counter(naturals)\n    go squarer(squares, naturals)\n    printer(squares)\n}\n</code></pre> <p>\u8c03\u7528counter\uff08naturals\uff09\u65f6\uff0cnaturals\u7684\u7c7b\u578b\u5c06\u9690\u5f0f\u5730\u4ecechan int\u8f6c\u6362\u6210chan&lt;- int\u3002\u8c03\u7528printer(squares)\u4e5f\u4f1a\u5bfc\u81f4\u76f8\u4f3c\u7684\u9690\u5f0f\u8f6c\u6362\uff0c\u8fd9\u4e00\u6b21\u662f\u8f6c\u6362\u4e3a<code>&lt;-chan int</code>\u7c7b\u578b\u53ea\u63a5\u6536\u578b\u7684channel\u3002\u4efb\u4f55\u53cc\u5411channel\u5411\u5355\u5411channel\u53d8\u91cf\u7684\u8d4b\u503c\u64cd\u4f5c\u90fd\u5c06\u5bfc\u81f4\u8be5\u9690\u5f0f\u8f6c\u6362\u3002\u8fd9\u91cc\u5e76\u6ca1\u6709\u53cd\u5411\u8f6c\u6362\u7684\u8bed\u6cd5\uff1a\u4e5f\u5c31\u662f\u4e0d\u80fd\u5c06\u4e00\u4e2a\u7c7b\u4f3c<code>chan&lt;- int</code>\u7c7b\u578b\u7684\u5355\u5411\u578b\u7684channel\u8f6c\u6362\u4e3a<code>chan int</code>\u7c7b\u578b\u7684\u53cc\u5411\u578b\u7684channel\u3002</p>"},{"location":"software_development/backend/language/Go/#channel_4","title":"\u5e26\u7f13\u5b58\u7684channel","text":"<p>\u5e26\u7f13\u5b58\u7684Channel\u5185\u90e8\u6301\u6709\u4e00\u4e2a\u5143\u7d20\u961f\u5217\u3002\u961f\u5217\u7684\u6700\u5927\u5bb9\u91cf\u662f\u5728\u8c03\u7528make\u51fd\u6570\u521b\u5efachannel\u65f6\u901a\u8fc7\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u7684\u3002\u4e0b\u9762\u7684\u8bed\u53e5\u521b\u5efa\u4e86\u4e00\u4e2a\u53ef\u4ee5\u6301\u6709\u4e09\u4e2a\u5b57\u7b26\u4e32\u5143\u7d20\u7684\u5e26\u7f13\u5b58Channel\u3002\u56fe8.2\u662fch\u53d8\u91cf\u5bf9\u5e94\u7684channel\u7684\u56fe\u5f62\u8868\u793a\u5f62\u5f0f\u3002</p> <pre><code>ch = make(chan string, 3)\n</code></pre> <p></p> <p>\u5411\u7f13\u5b58Channel\u7684\u53d1\u9001\u64cd\u4f5c\u5c31\u662f\u5411\u5185\u90e8\u7f13\u5b58\u961f\u5217\u7684\u5c3e\u90e8\u63d2\u5165\u5143\u7d20\uff0c\u63a5\u6536\u64cd\u4f5c\u5219\u662f\u4ece\u961f\u5217\u7684\u5934\u90e8\u5220\u9664\u5143\u7d20\u3002</p> <p>\u5982\u679c\u5185\u90e8\u7f13\u5b58\u961f\u5217\u662f\u6ee1\u7684\uff0c\u90a3\u4e48\u53d1\u9001\u64cd\u4f5c\u5c06\u963b\u585e\u76f4\u5230\u56e0\u53e6\u4e00\u4e2agoroutine\u6267\u884c\u63a5\u6536\u64cd\u4f5c\u800c\u91ca\u653e\u4e86\u65b0\u7684\u961f\u5217\u7a7a\u95f4\u3002\u76f8\u53cd\uff0c\u5982\u679cchannel\u662f\u7a7a\u7684\uff0c\u63a5\u6536\u64cd\u4f5c\u5c06\u963b\u585e\u76f4\u5230\u6709\u53e6\u4e00\u4e2agoroutine\u6267\u884c\u53d1\u9001\u64cd\u4f5c\u800c\u5411\u961f\u5217\u63d2\u5165\u5143\u7d20\u3002</p> <p>\u5728\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u7a0b\u5e8f\u53ef\u80fd\u9700\u8981\u77e5\u9053channel\u5185\u90e8\u7f13\u5b58\u7684\u5bb9\u91cf\uff0c\u53ef\u4ee5\u7528\u5185\u7f6e\u7684cap\u51fd\u6570\u83b7\u53d6\uff1a</p> <pre><code>fmt.Println(cap(ch)) // \"3\"\n</code></pre> <p>\u540c\u6837\uff0c\u5bf9\u4e8e\u5185\u7f6e\u7684len\u51fd\u6570\uff0c\u5982\u679c\u4f20\u5165\u7684\u662fchannel\uff0c\u90a3\u4e48\u5c06\u8fd4\u56dechannel\u5185\u90e8\u7f13\u5b58\u961f\u5217\u4e2d\u6709\u6548\u5143\u7d20\u7684\u4e2a\u6570\u3002</p> <pre><code>fmt.Println(len(ch)) // \"2\"\n</code></pre>"},{"location":"software_development/backend/language/Go/#goroutine","title":"goroutine\u6cc4\u6f0f","text":"<pre><code>func mirroredQuery() string {\n    responses := make(chan string, 3)\n    go func() { responses &lt;- request(\"asia.gopl.io\") }()\n    go func() { responses &lt;- request(\"europe.gopl.io\") }()\n    go func() { responses &lt;- request(\"americas.gopl.io\") }()\n    return &lt;-responses // return the quickest response\n}\n\nfunc request(hostname string) (response string) { /* ... */ }\n</code></pre> <p>\u5982\u679c\u6211\u4eec\u4f7f\u7528\u4e86\u65e0\u7f13\u5b58\u7684channel\uff0c\u90a3\u4e48\u4e24\u4e2a\u6162\u7684goroutines\u5c06\u4f1a\u56e0\u4e3a\u6ca1\u6709\u4eba\u63a5\u6536\u800c\u88ab\u6c38\u8fdc\u5361\u4f4f\u3002\u8fd9\u79cd\u60c5\u51b5\uff0c\u79f0\u4e3agoroutines\u6cc4\u6f0f\uff0c\u8fd9\u5c06\u662f\u4e00\u4e2aBUG\u3002\u548c\u5783\u573e\u53d8\u91cf\u4e0d\u540c\uff0c\u6cc4\u6f0f\u7684goroutines\u5e76\u4e0d\u4f1a\u88ab\u81ea\u52a8\u56de\u6536\uff0c\u56e0\u6b64\u786e\u4fdd\u6bcf\u4e2a\u4e0d\u518d\u9700\u8981\u7684goroutine\u80fd\u6b63\u5e38\u9000\u51fa\u662f\u91cd\u8981\u7684\u3002</p>"},{"location":"software_development/backend/language/Go/#channelchannel","title":"\u7f13\u5b58Channel\u548c\u65e0\u7f13\u5b58Channel\u7684\u9009\u62e9","text":"<ul> <li>\u65e0\u7f13\u5b58channel\u66f4\u5f3a\u5730\u4fdd\u8bc1\u4e86\u6bcf\u4e2a\u53d1\u9001\u64cd\u4f5c\u4e0e\u76f8\u5e94\u7684\u540c\u6b65\u63a5\u6536\u64cd\u4f5c\uff1b</li> <li>\u5bf9\u4e8e\u5e26\u7f13\u5b58channel\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u662f\u89e3\u8026\u7684\u3002\u5373\u4f7f\u6211\u4eec\u77e5\u9053\u5c06\u8981\u53d1\u9001\u5230\u4e00\u4e2achannel\u7684\u4fe1\u606f\u7684\u6570\u91cf\u4e0a\u9650\uff0c\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u5bb9\u91cf\u5927\u5c0f\u7684\u5e26\u7f13\u5b58channel\u4e5f\u662f\u4e0d\u73b0\u5b9e\u7684\uff0c\u56e0\u4e3a\u8fd9\u8981\u6c42\u5728\u6267\u884c\u4efb\u4f55\u63a5\u6536\u64cd\u4f5c\u4e4b\u524d\u7f13\u5b58\u6240\u6709\u5df2\u7ecf\u53d1\u9001\u7684\u503c\u3002\u5982\u679c\u672a\u80fd\u5206\u914d\u8db3\u591f\u7684\u7f13\u5b58\u5c06\u5bfc\u81f4\u7a0b\u5e8f\u6b7b\u9501\uff1a\u53d1\u9001\u8005\u4f1a\u5728\u5c1d\u8bd5\u53d1\u9001\u65b0\u6d88\u606f\u65f6\u963b\u585e\uff0c\u800c\u63a5\u6536\u8005\u53ef\u80fd\u8fd8\u672a\u51c6\u5907\u597d\u63a5\u6536\uff0c\u6700\u7ec8\u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u9677\u5165\u6b7b\u9501\u72b6\u6001\u3002</li> </ul> <p>\u4e24\u8005\u7684\u9009\u62e9\u8fd8\u4f1a\u7275\u626f\u5230\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u7684\u5173\u7cfb\uff0c\u6839\u636e\u751f\u4ea7\u901f\u5ea6\u548c\u6d88\u8d39\u901f\u5ea6\u8c03\u6574\u7f13\u5b58\u5927\u5c0f</p>"},{"location":"software_development/backend/language/Go/#_69","title":"\u4f7f\u7528\u573a\u666f","text":""},{"location":"software_development/backend/language/Go/#goroutinegoroutine","title":"\u4e3bgoroutine\u7b49\u5f85\u5176\u4ed6goroutine\u5b8c\u6210\u518d\u7ed3\u675f","text":"<p>\u4f7f\u7528\u65e0\u7f13\u5b58channel\uff0c\u53d1\u9001struct{}</p> <p>\u9519\u8bef\u5199\u6cd5</p> <p>for range [channel]\u7528\u4e8echannel\u5df2\u5173\u95ed\u7684\u65f6\u5019\uff0c\u5982\u679cchannel\u6ca1\u6709\u5173\u95ed\uff0c\u5219\u4f1a\u4e00\u76f4\u963b\u585e\uff0c\u7b49\u5f85channel\u4e0a\u6709\u65b0\u7684\u6570\u636e\u5230\u8fbe\u3002\u5b83\u4f1a\u6301\u7eed\u76d1\u542cchannel\uff0c\u76f4\u5230channel\u88ab\u5173\u95ed</p> <pre><code>func makeThumbnails3(filenames []string) {\n    ch := make(chan struct{})\n    for _, f := range filenames {\n        go func(f string) {\n            thumbnail.ImageFile(f) // NOTE: ignoring errors\n            ch &lt;- struct{}{}\n        }(f)\n    }\n    // \u8fd9\u91cc\u5199\u7684\u4e0d\u5bf9\uff01\n    for range ch {\n    }\n}\n</code></pre> <p>\u6b63\u786e\u5199\u6cd5</p> <pre><code>// makeThumbnails3 makes thumbnails of the specified files in parallel.\nfunc makeThumbnails3(filenames []string) {\n    ch := make(chan struct{})\n    for _, f := range filenames {\n        go func(f string) {\n            thumbnail.ImageFile(f) // NOTE: ignoring errors\n            ch &lt;- struct{}{}\n        }(f)\n    }\n    // Wait for goroutines to complete.\n    for range filenames {\n        &lt;-ch\n    }\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#worker-goroutinegoroutine","title":"\u5df2\u77e5\u8fed\u4ee3\u6b21\u6570\uff0cworker goroutine\u5f80\u4e3bgoroutine\u4e2d\u8fd4\u56de\u503c","text":"<p>\u9519\u8bef\u5199\u6cd5</p> <pre><code>// makeThumbnails4 makes thumbnails for the specified files in parallel.\n// It returns an error if any step failed.\nfunc makeThumbnails4(filenames []string) error {\n    errors := make(chan error)\n\n    for _, f := range filenames {\n        go func(f string) {\n            _, err := thumbnail.ImageFile(f)\n            errors &lt;- err\n        }(f)\n    }\n\n    for range filenames {\n        if err := &lt;-errors; err != nil {\n            return err // NOTE: incorrect: goroutine leak!\n        }\n    }\n\n    return nil\n}\n</code></pre> <p>\u8fd9\u4e2a\u7a0b\u5e8f\u6709\u4e00\u4e2a\u5fae\u5999\u7684bug\u3002\u5f53\u5b83\u9047\u5230\u7b2c\u4e00\u4e2a\u975enil\u7684error\u65f6\u4f1a\u76f4\u63a5\u5c06error\u8fd4\u56de\u5230\u8c03\u7528\u65b9\uff0c\u4f7f\u5f97\u6ca1\u6709\u4e00\u4e2agoroutine\u53bb\u6392\u7a7aerrors channel\u3002\u8fd9\u6837\u5269\u4e0b\u7684worker goroutine\u5728\u5411\u8fd9\u4e2achannel\u4e2d\u53d1\u9001\u503c\u65f6\uff0c\u90fd\u4f1a\u6c38\u8fdc\u5730\u963b\u585e\u4e0b\u53bb\uff0c\u5e76\u4e14\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u9000\u51fa\u3002\u8fd9\u79cd\u60c5\u51b5\u53eb\u505agoroutine\u6cc4\u9732\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6574\u4e2a\u7a0b\u5e8f\u5361\u4f4f\u6216\u8005\u8dd1\u51faout of memory\u7684\u9519\u8bef\u3002</p> <p>\u89e3\u51b3\u529e\u6cd5</p> <p>\u6700\u7b80\u5355\u7684\u89e3\u51b3\u529e\u6cd5\u5c31\u662f\u7528\u4e00\u4e2a\u5177\u6709\u5408\u9002\u5927\u5c0f\u7684buffered channel\uff0c\u8fd9\u6837\u8fd9\u4e9bworker goroutine\u5411channel\u4e2d\u53d1\u9001\u9519\u8bef\u65f6\u5c31\u4e0d\u4f1a\u88ab\u963b\u585e\u3002\uff08\u4e00\u4e2a\u53ef\u9009\u7684\u89e3\u51b3\u529e\u6cd5\u662f\u521b\u5efa\u4e00\u4e2a\u53e6\u5916\u7684goroutine\uff0c\u5f53main goroutine\u8fd4\u56de\u7b2c\u4e00\u4e2a\u9519\u8bef\u7684\u540c\u65f6\u53bb\u6392\u7a7achannel\u3002\uff09</p> <p>\u6b63\u786e\u5199\u6cd5</p> <pre><code>// makeThumbnails5 makes thumbnails for the specified files in parallel.\n// It returns the generated file names in an arbitrary order,\n// or an error if any step failed.\nfunc makeThumbnails5(filenames []string) (thumbfiles []string, err error) {\n    type item struct {\n        thumbfile string\n        err       error\n    }\n\n    ch := make(chan item, len(filenames))\n    for _, f := range filenames {\n        go func(f string) {\n            var it item\n            it.thumbfile, it.err = thumbnail.ImageFile(f)\n            ch &lt;- it\n        }(f)\n    }\n\n    for range filenames {\n        it := &lt;-ch\n        if it.err != nil {\n            return nil, it.err\n        }\n        thumbfiles = append(thumbfiles, it.thumbfile)\n    }\n\n    return thumbfiles, nil\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#goroutine_1","title":"\u4e0d\u77e5\u9053\u8fed\u4ee3\u6b21\u6570\uff0c\u7edf\u8ba1\u6bcf\u4e2agoroutine\u7684\u8fd4\u56de\u503c","text":"<p>\u4e3a\u4e86\u77e5\u9053\u6700\u540e\u4e00\u4e2agoroutine\u4ec0\u4e48\u65f6\u5019\u7ed3\u675f\uff08\u6700\u540e\u4e00\u4e2a\u7ed3\u675f\u5e76\u4e0d\u4e00\u5b9a\u662f\u6700\u540e\u4e00\u4e2a\u5f00\u59cb\uff09\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u9012\u589e\u7684\u8ba1\u6570\u5668\uff0c\u5728\u6bcf\u4e00\u4e2agoroutine\u542f\u52a8\u65f6\u52a0\u4e00\uff0c\u5728goroutine\u9000\u51fa\u65f6\u51cf\u4e00\u3002\u8fd9\u9700\u8981\u4e00\u79cd\u7279\u6b8a\u7684\u8ba1\u6570\u5668\uff0c\u8fd9\u4e2a\u8ba1\u6570\u5668\u9700\u8981\u5728\u591a\u4e2agoroutine\u64cd\u4f5c\u65f6\u505a\u5230\u5b89\u5168\u5e76\u4e14\u63d0\u4f9b\u5728\u5176\u51cf\u4e3a\u96f6\u4e4b\u524d\u4e00\u76f4\u7b49\u5f85\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\u8fd9\u79cd\u8ba1\u6570\u7c7b\u578b\u88ab\u79f0\u4e3async.WaitGroup\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5c31\u7528\u5230\u4e86\u8fd9\u79cd\u65b9\u6cd5\uff1a</p> <pre><code>// makeThumbnails6 makes thumbnails for each file received from the channel.\n// It returns the number of bytes occupied by the files it creates.\nfunc makeThumbnails6(filenames &lt;-chan string) int64 {\n    sizes := make(chan int64)\n    var wg sync.WaitGroup // number of working goroutines\n    for f := range filenames {\n        wg.Add(1)\n        // worker\n        go func(f string) {\n            defer wg.Done()\n            thumb, err := thumbnail.ImageFile(f)\n            if err != nil {\n                log.Println(err)\n                return\n            }\n            info, _ := os.Stat(thumb) // OK to ignore error\n            sizes &lt;- info.Size()\n        }(f)\n    }\n\n    // closer\n    go func() {\n        wg.Wait()\n        close(sizes)\n    }()\n\n    var total int64\n    for size := range sizes {\n        total += size\n    }\n    return total\n}\n</code></pre> <p>\u6ce8\u610fAdd\u548cDone\u65b9\u6cd5\u7684\u4e0d\u5bf9\u79f0\u3002Add\u662f\u4e3a\u8ba1\u6570\u5668\u52a0\u4e00\uff0c\u5fc5\u987b\u5728worker goroutine\u5f00\u59cb\u4e4b\u524d\u8c03\u7528\uff0c\u800c\u4e0d\u662f\u5728goroutine\u4e2d\uff1b\u5426\u5219\u7684\u8bdd\u6211\u4eec\u6ca1\u529e\u6cd5\u786e\u5b9aAdd\u662f\u5728\"closer\" goroutine\u8c03\u7528Wait\u4e4b\u524d\u88ab\u8c03\u7528\u3002\u5e76\u4e14Add\u8fd8\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u4f46Done\u5374\u6ca1\u6709\u4efb\u4f55\u53c2\u6570\uff1b\u5176\u5b9e\u5b83\u548cAdd(-1)\u662f\u7b49\u4ef7\u7684\u3002\u6211\u4eec\u4f7f\u7528defer\u6765\u786e\u4fdd\u8ba1\u6570\u5668\u5373\u4f7f\u662f\u5728\u51fa\u9519\u7684\u60c5\u51b5\u4e0b\u4f9d\u7136\u80fd\u591f\u6b63\u786e\u5730\u88ab\u51cf\u6389\u3002\u4e0a\u9762\u7684\u7a0b\u5e8f\u4ee3\u7801\u7ed3\u6784\u662f\u5f53\u6211\u4eec\u4f7f\u7528\u5e76\u53d1\u5faa\u73af\uff0c\u4f46\u53c8\u4e0d\u77e5\u9053\u8fed\u4ee3\u6b21\u6570\u65f6\u5f88\u901a\u5e38\u800c\u4e14\u5f88\u5730\u9053\u7684\u5199\u6cd5\u3002</p> <p>sizes channel\u643a\u5e26\u4e86\u6bcf\u4e00\u4e2a\u6587\u4ef6\u7684\u5927\u5c0f\u5230main goroutine\uff0c\u5728main goroutine\u4e2d\u4f7f\u7528\u4e86range loop\u6765\u8ba1\u7b97\u603b\u548c\u3002\u89c2\u5bdf\u4e00\u4e0b\u6211\u4eec\u662f\u600e\u6837\u521b\u5efa\u4e00\u4e2acloser goroutine\uff0c\u5e76\u8ba9\u5176\u5728\u6240\u6709worker goroutine\u4eec\u7ed3\u675f\u4e4b\u540e\u518d\u5173\u95edsizes channel\u7684\u3002\u4e24\u6b65\u64cd\u4f5c\uff1await\u548cclose\uff0c\u5fc5\u987b\u662f\u57fa\u4e8esizes\u7684\u5faa\u73af\u7684\u5e76\u53d1\u3002\u8003\u8651\u4e00\u4e0b\u53e6\u4e00\u79cd\u65b9\u6848\uff1a\u5982\u679c\u7b49\u5f85\u64cd\u4f5c\u88ab\u653e\u5728\u4e86main goroutine\u4e2d\uff0c\u5728\u5faa\u73af\u4e4b\u524d\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u7ed3\u675f\u4e86\uff0c\u5982\u679c\u5728\u5faa\u73af\u4e4b\u540e\uff0c\u90a3\u4e48\u53c8\u53d8\u6210\u4e86\u4e0d\u53ef\u8fbe\u7684\u90e8\u5206\uff0c\u56e0\u4e3a\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\u53bb\u5173\u95ed\u8fd9\u4e2achannel\uff0c\u8fd9\u4e2a\u5faa\u73af\u5c31\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u7ec8\u6b62\u3002</p>"},{"location":"software_development/backend/language/Go/#_70","title":"\u63a7\u5236\u5e76\u53d1\u91cf","text":"<p>\u5bf9links.Extract\u7684\u8c03\u7528\u64cd\u4f5c\u7528\u83b7\u53d6\u3001\u91ca\u653etoken\u7684\u64cd\u4f5c\u5305\u88f9\u8d77\u6765\uff0c\u6765\u786e\u4fdd\u540c\u4e00\u65f6\u95f4\u5bf9\u5176\u53ea\u670920\u4e2a\u8c03\u7528\u3002\u4fe1\u53f7\u91cf\u6570\u91cf\u548c\u5176\u80fd\u64cd\u4f5c\u7684IO\u8d44\u6e90\u6570\u91cf\u5e94\u4fdd\u6301\u63a5\u8fd1\u3002</p> <pre><code>// tokens is a counting semaphore used to\n// enforce a limit of 20 concurrent requests.\nvar tokens = make(chan struct{}, 20)\n\nfunc crawl(url string) []string {\n    fmt.Println(url)\n    tokens &lt;- struct{}{} // acquire a token\n    list, err := links.Extract(url)\n    &lt;-tokens // release the token\n    if err != nil {\n        log.Print(err)\n    }\n    return list\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#_71","title":"\u57fa\u4e8e\u5171\u4eab\u53d8\u91cf\u7684\u5e76\u53d1","text":"<p>\u5f53\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u81ea\u4fe1\u5730\u786e\u8ba4\u4e00\u4e2a\u4e8b\u4ef6\u662f\u5728\u53e6\u4e00\u4e2a\u4e8b\u4ef6\u7684\u524d\u9762\u6216\u8005\u540e\u9762\u53d1\u751f\u7684\u8bdd\uff0c\u5c31\u8bf4\u660ex\u548cy\u8fd9\u4e24\u4e2a\u4e8b\u4ef6\u662f\u5e76\u53d1\u7684\u3002</p> <p>\u8003\u8651\u4e00\u4e0b\uff0c\u4e00\u4e2a\u51fd\u6570\u5728\u7ebf\u6027\u7a0b\u5e8f\u4e2d\u53ef\u4ee5\u6b63\u786e\u5730\u5de5\u4f5c\u3002\u5982\u679c\u5728\u5e76\u53d1\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u51fd\u6570\u4f9d\u7136\u53ef\u4ee5\u6b63\u786e\u5730\u5de5\u4f5c\u7684\u8bdd\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8bf4\u8fd9\u4e2a\u51fd\u6570\u662f\u5e76\u53d1\u5b89\u5168\u7684\uff0c\u5e76\u53d1\u5b89\u5168\u7684\u51fd\u6570\u4e0d\u9700\u8981\u989d\u5916\u7684\u540c\u6b65\u5de5\u4f5c\u3002</p> <p>\u5171\u4eab\u53d8\u91cf\u5b89\u5168\u5e76\u53d1\u7684\u4e09\u79cd\u60c5\u51b5</p> <ul> <li>\u591a\u4e2agoroutine\u4e0d\u5199\u5171\u4eab\u53d8\u91cf\uff0c\u53ea\u8bfb\u5171\u4eab\u53d8\u91cf</li> <li>\u7ed1\u5b9a\uff1a\u53ea\u6709\u4e00\u4e2agoroutine\u80fd\u8bbf\u95ee\u53d8\u91cf\uff0c\u5176\u5b83\u7684goroutine\u4e0d\u80fd\u591f\u76f4\u63a5\u8bbf\u95ee\u53d8\u91cf\uff0c\u5b83\u4eec\u53ea\u80fd\u4f7f\u7528\u4e00\u4e2achannel\u6765\u53d1\u9001\u8bf7\u6c42\u7ed9\u6307\u5b9a\u7684goroutine\u6765\u67e5\u8be2\u66f4\u65b0\u53d8\u91cf\u3002</li> <li>\u4e92\u65a5\uff1a\u5141\u8bb8\u5f88\u591agoroutine\u53bb\u8bbf\u95ee\u53d8\u91cf\uff0c\u4f46\u662f\u5728\u540c\u4e00\u4e2a\u65f6\u523b\u6700\u591a\u53ea\u6709\u4e00\u4e2agoroutine\u5728\u8bbf\u95ee\u3002</li> </ul> <p>\u5bfc\u51fa\u7684\u51fd\u6570\u901a\u5e38\u662f\u5e76\u53d1\u5b89\u5168\u7684</p>"},{"location":"software_development/backend/language/Go/#syncmutex","title":"sync.Mutex\u4e92\u65a5\u9501","text":"<p>\u539f\u59cb\u5b9e\u73b0\u4e92\u65a5\u9501\u7684\u65b9\u6cd5</p> <pre><code>var (\n    sema    = make(chan struct{}, 1) // a binary semaphore guarding balance\n    balance int\n)\n\nfunc Deposit(amount int) {\n    sema &lt;- struct{}{} // acquire token\n    balance = balance + amount\n    &lt;-sema // release token\n}\n\nfunc Balance() int {\n    sema &lt;- struct{}{} // acquire token\n    b := balance\n    &lt;-sema // release token\n    return b\n}\n</code></pre> <p>go\u652f\u6301\u4e92\u65a5\u9501</p> <pre><code>import \"sync\"\n\nvar (\n    mu      sync.Mutex // guards balance\n    balance int\n)\n\nfunc Deposit(amount int) {\n    mu.Lock()\n    balance = balance + amount\n    mu.Unlock()\n}\n\nfunc Balance() int {\n    mu.Lock()\n    defer mu.Unlock()\n    return balance\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#syncrwmutex","title":"Sync.RWMutex\u8bfb\u5199\u9501","text":"<p>\u540c\u7406</p>"},{"location":"software_development/backend/language/Go/#_72","title":"\u5185\u5b58\u540c\u6b65","text":"<p>\u5982\u679c\u662f\u591a\u4e2agoroutine\u90fd\u9700\u8981\u8bbf\u95ee\u7684\u53d8\u91cf\uff0c\u4f7f\u7528\u4e92\u65a5\u6761\u4ef6\u6765\u8bbf\u95ee\u3002</p> <p>\u4ee5\u4e0bx, y\u90fd\u662f\u5171\u4eab\u53d8\u91cf\uff0c\u6ca1\u6709\u4e92\u65a5\uff0c\u56e0\u6b64\u4f1a\u4ea7\u751f\u6570\u636e\u7ade\u4e89</p> <pre><code>var x, y int\ngo func() {\n    x = 1 // A1\n    fmt.Print(\"y:\", y, \" \") // A2\n}()\ngo func() {\n    y = 1                   // B1\n    fmt.Print(\"x:\", x, \" \") // B2\n}()\n</code></pre> <p>\u4e0d\u4ec5\u4f1a\u51fa\u73b0</p> <pre><code>y:0 x:1\nx:0 y:1\nx:1 y:1\ny:1 x:1\n</code></pre> <p>\u8fd8\u4f1a\u51fa\u73b0</p> <pre><code>x:0 y:0\ny:0 x:0\n</code></pre> <p>\u524d\u56db\u79cd\u60c5\u51b5\u6bd4\u8f83\u597d\u89e3\u91ca\uff0c\u540e\u4e24\u79cd\u60c5\u51b5\u9700\u8981\u8fd9\u6837\u89e3\u91ca\uff1a</p> <p>\u5728\u591a\u6838CPU\u4e2d\uff0c\u6bcf\u4e2aCPU\u62e5\u6709\u81ea\u5df1\u7684cache\uff0c\u56e0\u6b64\u5f53CPU\u5b8c\u6210\u8ba1\u7b97\uff0ccache\u62e5\u6709\u6700\u65b0\u7684\u7248\u672c\uff0c\u4f46\u662f\u5185\u5b58\u8fd8\u6ca1\u6709\u66f4\u65b0\u3002</p> <p>\u9700\u8981\u5b58\u5728\u6bcf\u4e2aCPUcache\u62f7\u8d1d\u6570\u636e\u5230\u5185\u5b58\u7684\u8fc7\u7a0b</p> <p>\u800c\u53d8\u91cfx, y\u662f\u5b58\u50a8\u5728\u5185\u5b58\u800c\u4e0d\u662f\u5728cache\u4e2d\uff0c\u56e0\u6b64\u5047\u8bbegoroutine1\u66f4\u65b0\u4e86x = 1\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u5199\u8fdb\u5185\u5b58\u4e2d\uff0cgoroutine2\u65e0\u6cd5\u77e5\u9053x\u5df2\u7ecf\u88ab\u66f4\u65b0\uff0c\u76f4\u63a5\u6253\u5370x = 0\uff1by\u540c\u7406</p> <p>\u7f16\u8bd1\u5668\u548cCPU\u662f\u53ef\u4ee5\u968f\u610f\u5730\u53bb\u66f4\u6539\u8bbf\u95ee\u5185\u5b58\u7684\u6307\u4ee4\u987a\u5e8f\uff0c\u4ee5\u4efb\u610f\u65b9\u5f0f\uff0c\u53ea\u8981\u4fdd\u8bc1\u6bcf\u4e00\u4e2agoroutine\u81ea\u5df1\u7684\u6267\u884c\u987a\u5e8f\u4e00\u81f4\u3002</p>"},{"location":"software_development/backend/language/Go/#synconce","title":"sync.Once","text":"<p>\u7b80\u5355\u6765\u8bf4\uff0c<code>sync.Once</code>\u80fd\u591f\u8ba9\u51fd\u6570\u53ea\u6267\u884c\u4e00\u6b21</p> <ul> <li>sync.Once \u53ef\u4ee5\u5728\u4ee3\u7801\u7684\u4efb\u610f\u4f4d\u7f6e\u521d\u59cb\u5316\u548c\u8c03\u7528\uff0c\u56e0\u6b64\u53ef\u4ee5\u5ef6\u8fdf\u5230\u4f7f\u7528\u65f6\u518d\u6267\u884c\uff0c\u5e76\u53d1\u573a\u666f\u4e0b\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002</li> </ul> <p>\u5728\u591a\u6570\u60c5\u51b5\u4e0b\uff0c<code>sync.Once</code> \u88ab\u7528\u4e8e\u63a7\u5236\u53d8\u91cf\u7684\u521d\u59cb\u5316\uff0c\u8fd9\u4e2a\u53d8\u91cf\u7684\u8bfb\u5199\u6ee1\u8db3\u5982\u4e0b\u4e09\u4e2a\u6761\u4ef6\uff1a</p> <ul> <li>\u5f53\u4e14\u4ec5\u5f53\u7b2c\u4e00\u6b21\u8bbf\u95ee\u67d0\u4e2a\u53d8\u91cf\u65f6\uff0c\u8fdb\u884c\u521d\u59cb\u5316\uff08\u5199\uff09\uff1b</li> <li>\u53d8\u91cf\u521d\u59cb\u5316\u8fc7\u7a0b\u4e2d\uff0c\u6240\u6709\u8bfb\u90fd\u88ab\u963b\u585e\uff0c\u76f4\u5230\u521d\u59cb\u5316\u5b8c\u6210\uff1b</li> <li>\u53d8\u91cf\u4ec5\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u521d\u59cb\u5316\u5b8c\u6210\u540e\u9a7b\u7559\u5728\u5185\u5b58\u91cc</li> </ul> <pre><code>var loadIconsOnce sync.Once\nvar icons map[string]image.Image\n// Concurrency-safe.\nfunc Icon(name string) image.Image {\n    loadIconsOnce.Do(loadIcons)\n    return icons[name]\n}\n</code></pre> <p>\u6bcf\u4e00\u6b21\u5bf9Do(loadIcons)\u7684\u8c03\u7528\u90fd\u4f1a\u9501\u5b9amutex\uff0c\u5e76\u4f1a\u68c0\u67e5boolean\u53d8\u91cf\uff08\u8bd1\u6ce8\uff1aGo1.9\u4e2d\u4f1a\u5148\u5224\u65adboolean\u53d8\u91cf\u662f\u5426\u4e3a1(true)\uff0c\u53ea\u6709\u4e0d\u4e3a1\u624d\u9501\u5b9amutex\uff0c\u4e0d\u518d\u9700\u8981\u6bcf\u6b21\u90fd\u9501\u5b9amutex\uff09\u3002\u5728\u7b2c\u4e00\u6b21\u8c03\u7528\u65f6\uff0cboolean\u53d8\u91cf\u7684\u503c\u662ffalse\uff0cDo\u4f1a\u8c03\u7528loadIcons\u5e76\u4f1a\u5c06boolean\u53d8\u91cf\u8bbe\u7f6e\u4e3atrue\u3002\u968f\u540e\u7684\u8c03\u7528\u4ec0\u4e48\u90fd\u4e0d\u4f1a\u505a\uff0c\u4f46\u662fmutex\u540c\u6b65\u4f1a\u4fdd\u8bc1loadIcons\u5bf9\u5185\u5b58\uff08\u8fd9\u91cc\u5176\u5b9e\u5c31\u662f\u6307icons\u53d8\u91cf\u5566\uff09\u4ea7\u751f\u7684\u6548\u679c\u80fd\u591f\u5bf9\u6240\u6709goroutine\u53ef\u89c1\u3002\u7528\u8fd9\u79cd\u65b9\u5f0f\u6765\u4f7f\u7528sync.Once\u7684\u8bdd\uff0c\u6211\u4eec\u80fd\u591f\u907f\u514d\u5728\u53d8\u91cf\u88ab\u6784\u5efa\u5b8c\u6210\u4e4b\u524d\u548c\u5176\u5b83goroutine\u5171\u4eab\u8be5\u53d8\u91cf\u3002</p>"},{"location":"software_development/backend/language/Go/#_73","title":"\u7ade\u4e89\u6761\u4ef6\u68c0\u6d4b","text":"<p>\u53ea\u8981\u5728go build\uff0cgo run\u6216\u8005go test\u547d\u4ee4\u540e\u9762\u52a0\u4e0a-race\u7684flag\uff0c\u5c31\u4f1a\u4f7f\u7f16\u8bd1\u5668\u521b\u5efa\u4e00\u4e2a\u4f60\u7684\u5e94\u7528\u7684\u201c\u4fee\u6539\u201d\u7248\u6216\u8005\u4e00\u4e2a\u9644\u5e26\u4e86\u80fd\u591f\u8bb0\u5f55\u6240\u6709\u8fd0\u884c\u671f\u5bf9\u5171\u4eab\u53d8\u91cf\u8bbf\u95ee\u5de5\u5177\u7684test\uff0c\u5e76\u4e14\u4f1a\u8bb0\u5f55\u4e0b\u6bcf\u4e00\u4e2a\u8bfb\u6216\u8005\u5199\u5171\u4eab\u53d8\u91cf\u7684goroutine\u7684\u8eab\u4efd\u4fe1\u606f\u3002</p> <p>\u7ade\u4e89\u68c0\u67e5\u5668\u4f1a\u62a5\u544a\u6240\u6709\u7684\u5df2\u7ecf\u53d1\u751f\u7684\u6570\u636e\u7ade\u4e89\u3002\u7136\u800c\uff0c\u5b83\u53ea\u80fd\u68c0\u6d4b\u5230\u8fd0\u884c\u65f6\u7684\u7ade\u4e89\u6761\u4ef6\uff1b\u5e76\u4e0d\u80fd\u8bc1\u660e\u4e4b\u540e\u4e0d\u4f1a\u53d1\u751f\u6570\u636e\u7ade\u4e89\u3002\u6240\u4ee5\u4e3a\u4e86\u4f7f\u7ed3\u679c\u5c3d\u91cf\u6b63\u786e\uff0c\u8bf7\u4fdd\u8bc1\u4f60\u7684\u6d4b\u8bd5\u5e76\u53d1\u5730\u8986\u76d6\u5230\u4e86\u4f60\u7684\u5305\u3002</p>"},{"location":"software_development/backend/language/Go/#go_3","title":"Go\u5b9e\u73b0\u6570\u636e\u7c7b\u578b","text":""},{"location":"software_development/backend/language/Go/#_74","title":"\u6808","text":"<p>\u4e00\u4e2aslice\u53ef\u4ee5\u7528\u6765\u6a21\u62df\u4e00\u4e2astack\u3002\u6700\u521d\u7ed9\u5b9a\u7684\u7a7aslice\u5bf9\u5e94\u4e00\u4e2a\u7a7a\u7684stack\uff0c\u7136\u540e\u53ef\u4ee5\u4f7f\u7528append\u51fd\u6570\u5c06\u65b0\u7684\u503c\u538b\u5165stack\uff1a</p> <pre><code>stack = append(stack, v) // push v\n</code></pre> <p>stack\u7684\u9876\u90e8\u4f4d\u7f6e\u5bf9\u5e94slice\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff1a</p> <pre><code>top := stack[len(stack)-1] // top of stack\n</code></pre> <p>\u901a\u8fc7\u6536\u7f29stack\u53ef\u4ee5\u5f39\u51fa\u6808\u9876\u7684\u5143\u7d20</p> <pre><code>stack = stack[:len(stack)-1] // pop\n</code></pre> <p>\u8981\u5220\u9664slice\u4e2d\u95f4\u7684\u67d0\u4e2a\u5143\u7d20\u5e76\u4fdd\u5b58\u539f\u6709\u7684\u5143\u7d20\u987a\u5e8f\uff0c\u53ef\u4ee5\u901a\u8fc7\u5185\u7f6e\u7684copy\u51fd\u6570\u5c06\u540e\u9762\u7684\u5b50slice\u5411\u524d\u4f9d\u6b21\u79fb\u52a8\u4e00\u4f4d\u5b8c\u6210\uff1a</p> <pre><code>func remove(slice []int, i int) []int {\n    copy(slice[i:], slice[i+1:])\n    return slice[:len(slice)-1]\n}\n\nfunc main() {\n    s := []int{5, 6, 7, 8, 9}\n    fmt.Println(remove(s, 2)) // \"[5 6 8 9]\"\n}\n</code></pre> <p>\u5982\u679c\u5220\u9664\u5143\u7d20\u540e\u4e0d\u7528\u4fdd\u6301\u539f\u6765\u987a\u5e8f\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u7528\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u8986\u76d6\u88ab\u5220\u9664\u7684\u5143\u7d20\uff1a</p> <pre><code>func remove(slice []int, i int) []int {\n    slice[i] = slice[len(slice)-1]\n    return slice[:len(slice)-1]\n}\n\nfunc main() {\n    s := []int{5, 6, 7, 8, 9}\n    fmt.Println(remove(s, 2)) // \"[5 6 9 8]\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#_75","title":"Go","text":""},{"location":"software_development/backend/language/Go/#_76","title":"\u96c6\u5408","text":"<p>Go\u8bed\u8a00\u91cc\u7684\u96c6\u5408\u4e00\u822c\u4f1a\u7528map[T]bool\u8fd9\u79cd\u5f62\u5f0f\u6765\u8868\u793a\uff0cT\u4ee3\u8868\u5143\u7d20\u7c7b\u578b\u3002</p> <p>\u4f8b\u5982\u4e0b\u9762\u7684dedup\u7a0b\u5e8f\u8bfb\u53d6\u591a\u884c\u8f93\u5165\uff0c\u4f46\u662f\u53ea\u6253\u5370\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u884c\u3002\uff08\u5b83\u662f1.3\u8282\u4e2d\u51fa\u73b0\u7684dup\u7a0b\u5e8f\u7684\u53d8\u4f53\u3002\uff09dedup\u7a0b\u5e8f\u901a\u8fc7map\u6765\u8868\u793a\u6240\u6709\u7684\u8f93\u5165\u884c\u6240\u5bf9\u5e94\u7684set\u96c6\u5408\uff0c\u4ee5\u786e\u4fdd\u5df2\u7ecf\u5728\u96c6\u5408\u5b58\u5728\u7684\u884c\u4e0d\u4f1a\u88ab\u91cd\u590d\u6253\u5370\u3002</p> <pre><code>func main() {\n    seen := make(map[string]bool) // a set of strings\n    input := bufio.NewScanner(os.Stdin)\n    for input.Scan() {\n        line := input.Text()\n        if !seen[line] {\n            seen[line] = true\n            fmt.Println(line)\n        }\n    }\n\n    if err := input.Err(); err != nil {\n        fmt.Fprintf(os.Stderr, \"dedup: %v\\n\", err)\n        os.Exit(1)\n    }\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#map_2","title":"Map","text":"<p>\u539f\u751fmap\u5373\u53ef</p>"},{"location":"software_development/backend/language/Go/#bit","title":"Bit\u6570\u7ec4","text":"<p>https://golang-china.github.io/gopl-zh/ch6/ch6-05.html</p>"},{"location":"software_development/backend/language/Go/#go_4","title":"Go\u5e38\u7528\u5305","text":""},{"location":"software_development/backend/language/Go/#fmt","title":"fmt","text":""},{"location":"software_development/backend/language/Go/#printf","title":"Printf\u51fd\u6570","text":""},{"location":"software_development/backend/language/Go/#_77","title":"\u6253\u5370\u53d8\u91cf","text":"<p>%v</p>"},{"location":"software_development/backend/language/Go/#_78","title":"\u6253\u5370\u4e8c\u8fdb\u5236","text":"<p>\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u4f4d\u64cd\u4f5c\u89e3\u91cauint8\u7c7b\u578b\u503c\u76848\u4e2a\u72ec\u7acb\u7684bit\u4f4d\u3002\u5b83\u4f7f\u7528\u4e86Printf\u51fd\u6570\u7684%b\u53c2\u6570\u6253\u5370\u4e8c\u8fdb\u5236\u683c\u5f0f\u7684\u6570\u5b57\uff1b\u5176\u4e2d%08b\u4e2d08\u8868\u793a\u6253\u5370\u81f3\u5c118\u4e2a\u5b57\u7b26\u5bbd\u5ea6\uff0c\u4e0d\u8db3\u7684\u524d\u7f00\u90e8\u5206\u75280\u586b\u5145\u3002</p> <pre><code>var x uint8 = 1&lt;&lt;1 | 1&lt;&lt;5\nvar y uint8 = 1&lt;&lt;1 | 1&lt;&lt;2\n\nfmt.Printf(\"%08b\\n\", x) // \"00100010\", the set {1, 5}\nfmt.Printf(\"%08b\\n\", y) // \"00000110\", the set {1, 2}\n\nfmt.Printf(\"%08b\\n\", x&amp;y)  // \"00000010\", the intersection {1}\nfmt.Printf(\"%08b\\n\", x|y)  // \"00100110\", the union {1, 2, 5}\nfmt.Printf(\"%08b\\n\", x^y)  // \"00100100\", the symmetric difference {2, 5}\nfmt.Printf(\"%08b\\n\", x&amp;^y) // \"00100000\", the difference {5}\n\nfor i := uint(0); i &lt; 8; i++ {\n    if x&amp;(1&lt;&lt;i) != 0 { // membership test\n        fmt.Println(i) // \"1\", \"5\"\n    }\n}\n\nfmt.Printf(\"%08b\\n\", x&lt;&lt;1) // \"01000100\", the set {2, 6}\nfmt.Printf(\"%08b\\n\", x&gt;&gt;1) // \"00010001\", the set {0, 4}\n</code></pre>"},{"location":"software_development/backend/language/Go/#_79","title":"\u6253\u5370\u5176\u4ed6\u8fdb\u5236","text":"<pre><code>o := 0666\nfmt.Printf(\"%d %[1]o %#[1]o\\n\", o) // \"438 666 0666\"\nx := int64(0xdeadbeef)\nfmt.Printf(\"%d %[1]x %#[1]x %#[1]X\\n\", x)\n// Output:\n// 3735928559 deadbeef 0xdeadbeef 0XDEADBEEF\n</code></pre> <p>\u8bf7\u6ce8\u610ffmt\u7684\u4e24\u4e2a\u4f7f\u7528\u6280\u5de7\u3002\u901a\u5e38Printf\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u5305\u542b\u591a\u4e2a%\u53c2\u6570\u65f6\u5c06\u4f1a\u5305\u542b\u5bf9\u5e94\u76f8\u540c\u6570\u91cf\u7684\u989d\u5916\u64cd\u4f5c\u6570\uff0c\u4f46\u662f%\u4e4b\u540e\u7684<code>[1]</code>\u526f\u8bcd\u544a\u8bc9Printf\u51fd\u6570\u518d\u6b21\u4f7f\u7528\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6570\u3002\u7b2c\u4e8c\uff0c%\u540e\u7684<code>#</code>\u526f\u8bcd\u544a\u8bc9Printf\u5728\u7528%o\u3001%x\u6216%X\u8f93\u51fa\u65f6\u751f\u62100\u30010x\u62160X\u524d\u7f00\u3002</p> <p>\u5b57\u7b26\u9762\u503c\u901a\u8fc7\u4e00\u5bf9\u5355\u5f15\u53f7\u76f4\u63a5\u5305\u542b\u5bf9\u5e94\u5b57\u7b26\u3002\u6700\u7b80\u5355\u7684\u4f8b\u5b50\u662fASCII\u4e2d\u7c7b\u4f3c'a'\u5199\u6cd5\u7684\u5b57\u7b26\u9762\u503c\uff0c\u4f46\u662f\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8f6c\u4e49\u7684\u6570\u503c\u6765\u8868\u793a\u4efb\u610f\u7684Unicode\u7801\u70b9\u5bf9\u5e94\u7684\u5b57\u7b26\uff0c\u9a6c\u4e0a\u5c06\u4f1a\u770b\u5230\u8fd9\u6837\u7684\u4f8b\u5b50\u3002</p>"},{"location":"software_development/backend/language/Go/#_80","title":"\u6253\u5370\u5b57\u7b26","text":"<p>\u5b57\u7b26\u4f7f\u7528<code>%c</code>\u53c2\u6570\u6253\u5370\uff0c\u6216\u8005\u662f\u7528<code>%q</code>\u53c2\u6570\u6253\u5370\u5e26\u5355\u5f15\u53f7\u7684\u5b57\u7b26\uff1a</p> <pre><code>ascii := 'a'\nunicode := '\u56fd'\nnewline := '\\n'\nfmt.Printf(\"%d %[1]c %[1]q\\n\", ascii)   // \"97 a 'a'\"\nfmt.Printf(\"%d %[1]c %[1]q\\n\", unicode) // \"22269 \u56fd '\u56fd'\"\nfmt.Printf(\"%d %[1]q\\n\", newline)       // \"10 '\\n'\"\n</code></pre>"},{"location":"software_development/backend/language/Go/#_81","title":"\u6253\u5370\u6d6e\u70b9\u6570","text":"<p>\u6709\u4e09\u79cd\u6253\u5370\u65b9\u5f0f\uff0c\u5982\u4e0b\u56fe\uff1a</p> <pre><code>package main\n\nimport \"fmt\"\n\nfunc main(){\n    const a = 2e10\n    const b = 2e-10\n    fmt.Printf(\"%g %g\\n\",a,b) \n    //output: 2e+10 2e-10\n\n    fmt.Printf(\"%f %f\\n\",a,b) \n    //output: 20000000000.000000 0.000000\n\n    fmt.Printf(\"%e %e\\n\",a,b) \n    //output: 2.000000e+10 2.000000e-10\n\n}\n</code></pre> <p>\u7528Printf\u51fd\u6570\u7684%g\u53c2\u6570\u6253\u5370\u6d6e\u70b9\u6570\uff0c\u5c06\u91c7\u7528\u66f4\u7d27\u51d1\u7684\u8868\u793a\u5f62\u5f0f\u6253\u5370\uff0c\u5e76\u63d0\u4f9b\u8db3\u591f\u7684\u7cbe\u5ea6\uff0c\u4f46\u662f\u5bf9\u5e94\u8868\u683c\u7684\u6570\u636e\uff0c\u4f7f\u7528%e\uff08\u5e26\u6307\u6570\uff09\u6216%f\u7684\u5f62\u5f0f\u6253\u5370\u53ef\u80fd\u66f4\u5408\u9002\u3002</p> <p>\u6240\u6709\u7684\u8fd9\u4e09\u4e2a\u6253\u5370\u5f62\u5f0f\u90fd\u53ef\u4ee5\u6307\u5b9a\u6253\u5370\u7684\u5bbd\u5ea6\u548c\u63a7\u5236\u6253\u5370\u7cbe\u5ea6\u3002</p> <p>\u53e6\u4e00\u793a\u4f8b</p> <pre><code>for x := 0; x &lt; 8; x++ {\n    fmt.Printf(\"x = %d e^x = %8.3f\\n\", x, math.Exp(float64(x)))\n}\n\u4e0a\u9762\u4ee3\u7801\u6253\u5370e\u7684\u5e42\uff0c\u6253\u5370\u7cbe\u5ea6\u662f\u5c0f\u6570\u70b9\u540e\u4e09\u4e2a\u5c0f\u6570\u7cbe\u5ea6\u548c8\u4e2a\u5b57\u7b26\u5bbd\u5ea6\uff1a\n\n\nx = 0       e^x =    1.000\nx = 1       e^x =    2.718\nx = 2       e^x =    7.389\nx = 3       e^x =   20.086\nx = 4       e^x =   54.598\nx = 5       e^x =  148.413\nx = 6       e^x =  403.429\nx = 7       e^x = 1096.633\n</code></pre>"},{"location":"software_development/backend/language/Go/#_82","title":"\u6253\u5370\u5e03\u5c14\u503c","text":"<p>%t</p>"},{"location":"software_development/backend/language/Go/#flag","title":"flag","text":"<p><code>flag</code> \u5305\u7528\u4e8e\u89e3\u6790\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u4f7f\u7a0b\u5e8f\u80fd\u591f\u63a5\u53d7\u7528\u6237\u8f93\u5165\u7684\u5404\u79cd\u9009\u9879\u548c\u53c2\u6570\u3002</p>"},{"location":"software_development/backend/language/Go/#sort","title":"sort","text":""},{"location":"software_development/backend/language/Go/#_83","title":"\u6392\u5e8f\u51fd\u6570","text":"<ul> <li><code>sort.Slice(slice, less)</code>\uff1a\u5bf9\u4efb\u610f\u7c7b\u578b\u7684\u5207\u7247\u8fdb\u884c\u6392\u5e8f\uff0c<code>less</code> \u662f\u4e00\u4e2a\u6bd4\u8f83\u51fd\u6570\uff0c\u51b3\u5b9a\u5143\u7d20\u4e4b\u95f4\u7684\u987a\u5e8f\u3002</li> <li><code>sort.Ints(slice)</code>\uff1a\u5bf9 <code>[]int</code> \u7c7b\u578b\u7684\u5207\u7247\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002</li> <li><code>sort.Strings(slice)</code>\uff1a\u5bf9 <code>[]string</code> \u7c7b\u578b\u7684\u5207\u7247\u8fdb\u884c\u5b57\u5178\u5e8f\u6392\u5e8f\u3002</li> <li><code>sort.Float64s(slice)</code>\uff1a\u5bf9 <code>[]float64</code> \u7c7b\u578b\u7684\u5207\u7247\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002</li> <li><code>sort.Sort(data Interface)</code>\uff1a\u5bf9\u5b9e\u73b0\u4e86 <code>sort.Interface</code> \u63a5\u53e3\u7684\u7c7b\u578b\u8fdb\u884c\u6392\u5e8f\u3002</li> </ul>"},{"location":"software_development/backend/language/Go/#_84","title":"\u68c0\u67e5\u662f\u5426\u5df2\u6392\u5e8f","text":"<ul> <li><code>sort.IsSorted(data Interface)</code>\uff1a\u68c0\u67e5\u6570\u636e\u662f\u5426\u5df2\u7ecf\u6309\u7167 <code>Less</code> \u65b9\u6cd5\u6307\u5b9a\u7684\u987a\u5e8f\u6392\u597d\u5e8f\u3002</li> </ul>"},{"location":"software_development/backend/language/Go/#_85","title":"\u67e5\u627e\u5143\u7d20","text":"<ul> <li><code>sort.SearchInts(a []int, x int)</code>\uff1a\u5728\u4e00\u4e2a\u5df2\u7ecf\u6392\u5e8f\u7684 <code>[]int</code> \u4e2d\u67e5\u627e\u7ed9\u5b9a\u503c\u7684\u4f4d\u7f6e\u3002</li> <li><code>sort.SearchStrings(a []string, x string)</code>\uff1a\u5728\u4e00\u4e2a\u5df2\u7ecf\u6392\u5e8f\u7684 <code>[]string</code> \u4e2d\u67e5\u627e\u7ed9\u5b9a\u5b57\u7b26\u4e32\u7684\u4f4d\u7f6e\u3002</li> <li><code>sort.SearchFloat64s(a []float64, x float64)</code>\uff1a\u5728\u4e00\u4e2a\u5df2\u7ecf\u6392\u5e8f\u7684 <code>[]float64</code> \u4e2d\u67e5\u627e\u7ed9\u5b9a\u6d6e\u70b9\u6570\u7684\u4f4d\u7f6e\u3002</li> <li><code>sort.Search(n int, f func(int) bool)</code>\uff1a\u5728\u533a\u95f4 <code>[0, n)</code> \u5185\u6267\u884c\u4e8c\u5206\u641c\u7d22\uff0c\u8fd4\u56de\u6ee1\u8db3\u6761\u4ef6\u7684\u7b2c\u4e00\u4e2a\u7d22\u5f15\u3002</li> </ul>"},{"location":"software_development/backend/language/Go/#_86","title":"\u81ea\u5b9a\u4e49\u6392\u5e8f","text":"<p>\u4e3a\u4e86\u5bf9\u81ea\u5b9a\u4e49\u7c7b\u578b\u6216\u590d\u6742\u7ed3\u6784\u8fdb\u884c\u6392\u5e8f\uff0c\u4f60\u9700\u8981\u5b9e\u73b0 <code>sort.Interface</code> \u63a5\u53e3\uff0c\u8be5\u63a5\u53e3\u5305\u542b\u4e09\u4e2a\u65b9\u6cd5\uff1a</p> <ol> <li><code>Len() int</code>\uff1a\u8fd4\u56de\u5f85\u6392\u5e8f\u7684\u6570\u636e\u957f\u5ea6\u3002</li> <li><code>Less(i, j int) bool</code>\uff1a\u5b9a\u4e49\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u6bd4\u8f83\u89c4\u5219\u3002</li> <li><code>Swap(i, j int)</code>\uff1a\u4ea4\u6362\u4e24\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\u3002</li> </ol>"},{"location":"software_development/backend/language/Go/#log","title":"log","text":"<p>\u8fd9\u7bc7\u535a\u5ba2\u4ecb\u7ecd\u4e86\u65e5\u5fd7\u5982\u4f55\u6253\u5370</p> <p>https://blog.csdn.net/xmcy001122/article/details/119916227</p>"},{"location":"software_development/backend/language/Go/#_87","title":"\u8bb0\u5f55\u4fe1\u606f","text":"<ul> <li>\u7b80\u5355\u65e5\u5fd7\uff1a</li> </ul> <pre><code>log.Print(\"This is a simple message\")\nlog.Println(\"This will add a newline at the end\")\nlog.Printf(\"This uses formatted string: %d\", 42)\n</code></pre> <ul> <li>\u81f4\u547d\u9519\u8bef\uff1a\u8fd9\u4e9b\u51fd\u6570\u4f1a\u5728\u8bb0\u5f55\u65e5\u5fd7\u540e\u8c03\u7528 <code>os.Exit(1)</code> \u6765\u7ec8\u6b62\u7a0b\u5e8f\u3002</li> </ul> <pre><code>log.Fatal(\"An unrecoverable error occurred\")\nlog.Fatalf(\"Error occurred with value: %v\", err)\nlog.Fatalln(\"Exiting due to fatal error\")\n</code></pre> <ul> <li>\u6050\u614c\uff1a\u8fd9\u4e9b\u51fd\u6570\u4f1a\u8bb0\u5f55\u65e5\u5fd7\u5e76\u5f15\u53d1\u4e00\u4e2a <code>panic</code>\u3002</li> </ul> <pre><code>log.Panic(\"A panic situation occurred\")\nlog.Panicf(\"Panicking with value: %v\", err)\nlog.Panicln(\"Panic!\")\n</code></pre>"},{"location":"software_development/backend/language/Go/#_88","title":"\u914d\u7f6e\u65e5\u5fd7\u8bb0\u5f55\u5668","text":"<p>\u4f60\u53ef\u4ee5\u901a\u8fc7 <code>log.SetFlags</code> \u548c <code>log.SetPrefix</code> \u51fd\u6570\u6765\u81ea\u5b9a\u4e49\u65e5\u5fd7\u7684\u8f93\u51fa\u683c\u5f0f\uff1a</p> <pre><code>// \u8bbe\u7f6e\u65e5\u5fd7\u524d\u7f00\nlog.SetPrefix(\"[APP] \")\n\n// \u8bbe\u7f6e\u65e5\u5fd7\u683c\u5f0f\u6807\u5fd7\nlog.SetFlags(log.Ldate | log.Ltime | log.Lshortfile)\n\n// \u793a\u4f8b\u8f93\u51fa\uff1a2024/12/07 12:34:56 main.go:10: [APP] This is a log message\nlog.Println(\"This is a log message\")\n</code></pre> <p>\u53ef\u7528\u7684\u6807\u5fd7\u5305\u62ec\uff1a</p> <ul> <li><code>log.Ldate</code>\uff1a\u65e5\u671f</li> <li><code>log.Ltime</code>\uff1a\u65f6\u95f4</li> <li><code>log.Lmicroseconds</code>\uff1a\u5fae\u79d2\u7cbe\u5ea6\u7684\u65f6\u95f4</li> <li><code>log.Llongfile</code>\uff1a\u5b8c\u6574\u6587\u4ef6\u8def\u5f84\u548c\u884c\u53f7</li> <li><code>log.Lshortfile</code>\uff1a\u4ec5\u6587\u4ef6\u540d\u548c\u884c\u53f7</li> <li><code>log.LUTC</code>\uff1a\u4f7f\u7528 UTC \u65f6\u95f4</li> <li><code>log.LstdFlags</code>\uff1a\u7b49\u540c\u4e8e <code>Ldate | Ltime</code></li> </ul>"},{"location":"software_development/backend/language/Go/#_89","title":"\u81ea\u5b9a\u4e49\u8f93\u51fa","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c<code>log</code> \u5305\u4f1a\u5c06\u65e5\u5fd7\u8f93\u51fa\u5230\u6807\u51c6\u9519\u8bef\u6d41 (<code>stderr</code>)\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7 <code>log.SetOutput</code> \u6539\u53d8\u8f93\u51fa\u4f4d\u7f6e\uff1a</p> <pre><code>// \u5c06\u65e5\u5fd7\u8f93\u51fa\u5230\u6587\u4ef6\nfile, err := os.OpenFile(\"app.log\", os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0644)\nif err != nil {\n    log.Fatalf(\"failed to open log file: %v\", err)\n}\ndefer file.Close()\n\nlog.SetOutput(file)\n\n// \u73b0\u5728\u6240\u6709\u7684\u65e5\u5fd7\u90fd\u4f1a\u88ab\u5199\u5165\u5230 app.log \u6587\u4ef6\u4e2d\nlog.Println(\"Logging to file now\")\n</code></pre>"},{"location":"software_development/backend/language/Go/#_90","title":"\u521b\u5efa\u81ea\u5b9a\u4e49\u65e5\u5fd7\u8bb0\u5f55\u5668","text":"<p>\u6709\u65f6\u4f60\u53ef\u80fd\u9700\u8981\u5728\u540c\u4e00\u7a0b\u5e8f\u4e2d\u6709\u591a\u4e2a\u4e0d\u540c\u914d\u7f6e\u7684\u65e5\u5fd7\u8bb0\u5f55\u5668\u3002<code>log.New</code> \u51fd\u6570\u53ef\u4ee5\u5e2e\u52a9\u4f60\u521b\u5efa\u65b0\u7684\u65e5\u5fd7\u8bb0\u5f55\u5668\u5b9e\u4f8b\uff1a</p> <pre><code>logger := log.New(\n    os.Stdout,        // io.Writer\n    \"CUSTOM: \",       // prefix\n    log.Ldate|log.Ltime, // flags\n)\n\nlogger.Println(\"This is a custom logger message\")\n</code></pre>"},{"location":"software_development/backend/language/Go/#net","title":"net","text":"<p>Go \u8bed\u8a00\u7684 <code>net</code> \u5305\u63d0\u4f9b\u4e86\u5bf9\u7f51\u7edc\u7f16\u7a0b\u7684\u652f\u6301\uff0c\u5305\u62ec TCP\u3001UDP\u3001Unix \u57df\u5957\u63a5\u5b57\u7b49\u4f4e\u7ea7\u7f51\u7edc\u534f\u8bae\u7684\u64cd\u4f5c\uff0c\u4ee5\u53ca\u66f4\u9ad8\u5c42\u6b21\u7684\u62bd\u8c61\u5982 HTTP\u3001FTP \u7b49\u3002</p>"},{"location":"software_development/backend/language/Go/#go_5","title":"Go\u539f\u7406","text":""},{"location":"software_development/backend/language/Go/#goroutine_2","title":"Goroutine","text":""},{"location":"software_development/backend/language/Go/#goroutine_3","title":"Goroutine\u548c\u7ebf\u7a0b\u7684\u533a\u522b","text":"<p>\u6808\u7684\u5927\u5c0f</p> <p>\u6bcf\u4e00\u4e2aOS\u7ebf\u7a0b\u90fd\u6709\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u5185\u5b58\u5757\uff08\u4e00\u822c\u4f1a\u662f2MB\uff09\u6765\u505a\u6808\uff0c\u8fd9\u4e2a\u6808\u4f1a\u7528\u6765\u5b58\u50a8\u5f53\u524d\u6b63\u5728\u88ab\u8c03\u7528\u6216\u6302\u8d77\uff08\u6307\u5728\u8c03\u7528\u5176\u5b83\u51fd\u6570\u65f6\uff09\u7684\u51fd\u6570\u7684\u5185\u90e8\u53d8\u91cf\u3002</p> <p>\u4f46\u662f\u548cOS\u7ebf\u7a0b\u4e0d\u592a\u4e00\u6837\u7684\u662f\uff0c\u4e00\u4e2agoroutine\u7684\u6808\u5927\u5c0f\u5e76\u4e0d\u662f\u56fa\u5b9a\u7684\uff1b\u6808\u7684\u5927\u5c0f\u4f1a\u6839\u636e\u9700\u8981\u52a8\u6001\u5730\u4f38\u7f29\u3002\u800cgoroutine\u7684\u6808\u7684\u6700\u5927\u503c\u67091GB</p> <p>\u8c03\u5ea6</p> <p>OS\u7ebf\u7a0b\u4f1a\u88ab\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u8c03\u5ea6\u3002\u56e0\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u662f\u88ab\u5185\u6838\u6240\u8c03\u5ea6\uff0c\u6240\u4ee5\u4ece\u4e00\u4e2a\u7ebf\u7a0b\u5411\u53e6\u4e00\u4e2a\u201c\u79fb\u52a8\u201d\u9700\u8981\u5b8c\u6574\u7684\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4fdd\u5b58\u4e00\u4e2a\u7528\u6237\u7ebf\u7a0b\u7684\u72b6\u6001\u5230\u5185\u5b58\uff0c\u6062\u590d\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u7684\u5230\u5bc4\u5b58\u5668\uff0c\u7136\u540e\u66f4\u65b0\u8c03\u5ea6\u5668\u7684\u6570\u636e\u7ed3\u6784\u3002\u8fd9\u51e0\u6b65\u64cd\u4f5c\u5f88\u6162\uff0c\u56e0\u4e3a\u5176\u5c40\u90e8\u6027\u5f88\u5dee\u9700\u8981\u51e0\u6b21\u5185\u5b58\u8bbf\u95ee\uff0c\u5e76\u4e14\u4f1a\u589e\u52a0\u8fd0\u884c\u7684cpu\u5468\u671f\u3002</p> <p>Go\u7684\u8fd0\u884c\u65f6\u5305\u542b\u4e86\u5176\u81ea\u5df1\u7684\u8c03\u5ea6\u5668\uff0c\u8be5\u8c03\u5ea6\u5668\u4e0d\u662f\u786c\u4ef6\u5b9a\u65f6\u5668\u3002\u5f53\u4e00\u4e2agoroutine\u8c03\u7528\u4e86time.Sleep\uff0c\u6216\u8005\u88abchannel\u8c03\u7528\u6216\u8005mutex\u64cd\u4f5c\u963b\u585e\u65f6\uff0c\u8c03\u5ea6\u5668\u4f1a\u4f7f\u5176\u8fdb\u5165\u4f11\u7720\u5e76\u5f00\u59cb\u6267\u884c\u53e6\u4e00\u4e2agoroutine\uff0c\u76f4\u5230\u65f6\u673a\u5230\u4e86\u518d\u53bb\u5524\u9192\u7b2c\u4e00\u4e2agoroutine\u3002\u56e0\u4e3a\u8fd9\u79cd\u8c03\u5ea6\u65b9\u5f0f\u4e0d\u9700\u8981\u8fdb\u5165\u5185\u6838\u7684\u4e0a\u4e0b\u6587\uff0c\u6240\u4ee5\u91cd\u65b0\u8c03\u5ea6\u4e00\u4e2agoroutine\u6bd4\u8c03\u5ea6\u4e00\u4e2a\u7ebf\u7a0b\u4ee3\u4ef7\u8981\u4f4e\u5f97\u591a</p> <p>GOMAXPROCS</p> <p>Go\u7684\u8c03\u5ea6\u5668\u4f7f\u7528\u4e86\u4e00\u4e2a\u53eb\u505aGOMAXPROCS\u7684\u53d8\u91cf\u6765\u51b3\u5b9a\u4f1a\u6709\u591a\u5c11\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7684\u7ebf\u7a0b\u540c\u65f6\u6267\u884cGo\u7684\u4ee3\u7801\u3002\u5176\u9ed8\u8ba4\u7684\u503c\u662f\u8fd0\u884c\u673a\u5668\u4e0a\u7684CPU\u7684\u6838\u5fc3\u6570\uff0c\u6240\u4ee5\u5728\u4e00\u4e2a\u67098\u4e2a\u6838\u5fc3\u7684\u673a\u5668\u4e0a\u65f6\uff0c\u8c03\u5ea6\u5668\u4e00\u6b21\u4f1a\u57288\u4e2aOS\u7ebf\u7a0b\u4e0a\u53bb\u8c03\u5ea6GO\u4ee3\u7801\u3002\u5728\u4f11\u7720\u4e2d\u7684\u6216\u8005\u5728\u901a\u4fe1\u4e2d\u88ab\u963b\u585e\u7684goroutine\u662f\u4e0d\u9700\u8981\u4e00\u4e2a\u5bf9\u5e94\u7684\u7ebf\u7a0b\u6765\u505a\u8c03\u5ea6\u7684\u3002\u5728I/O\u4e2d\u6216\u7cfb\u7edf\u8c03\u7528\u4e2d\u6216\u8c03\u7528\u975eGo\u8bed\u8a00\u51fd\u6570\u65f6\uff0c\u662f\u9700\u8981\u4e00\u4e2a\u5bf9\u5e94\u7684\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u7684\uff0c\u4f46\u662fGOMAXPROCS\u5e76\u4e0d\u9700\u8981\u5c06\u8fd9\u51e0\u79cd\u60c5\u51b5\u8ba1\u7b97\u5728\u5185\u3002</p> <p>\u3010\u4f8b\u5b50\u3011</p> <pre><code>for {\n    go fmt.Print(0)\n    fmt.Print(1)\n}\n\n$ GOMAXPROCS=1 go run hacker-cliche\u0301.go\n111111111111111111110000000000000000000011111...\n\n$ GOMAXPROCS=2 go run hacker-cliche\u0301.go\n010101010101010101011001100101011010010100110...\n</code></pre> <p>\u5728\u7b2c\u4e00\u6b21\u6267\u884c\u65f6\uff0c\u6700\u591a\u540c\u65f6\u53ea\u80fd\u6709\u4e00\u4e2agoroutine\u88ab\u6267\u884c\u3002\u521d\u59cb\u60c5\u51b5\u4e0b\u53ea\u6709main goroutine\u88ab\u6267\u884c\uff0c\u6240\u4ee5\u4f1a\u6253\u5370\u5f88\u591a1\u3002\u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\u540e\uff0cGO\u8c03\u5ea6\u5668\u4f1a\u5c06\u5176\u7f6e\u4e3a\u4f11\u7720\uff0c\u5e76\u5524\u9192\u53e6\u4e00\u4e2agoroutine\uff0c\u8fd9\u65f6\u5019\u5c31\u5f00\u59cb\u6253\u5370\u5f88\u591a0\u4e86\uff0c\u5728\u6253\u5370\u7684\u65f6\u5019\uff0cgoroutine\u662f\u88ab\u8c03\u5ea6\u5230\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u4e0a\u7684\u3002\u5728\u7b2c\u4e8c\u6b21\u6267\u884c\u65f6\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e24\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\uff0c\u6240\u4ee5\u4e24\u4e2agoroutine\u53ef\u4ee5\u4e00\u8d77\u88ab\u6267\u884c\uff0c\u4ee5\u540c\u6837\u7684\u9891\u7387\u4ea4\u66ff\u6253\u53700\u548c1\u3002\u6211\u4eec\u5fc5\u987b\u5f3a\u8c03\u7684\u662fgoroutine\u7684\u8c03\u5ea6\u662f\u53d7\u5f88\u591a\u56e0\u5b50\u5f71\u54cd\u7684\uff0c\u800cruntime\u4e5f\u662f\u5728\u4e0d\u65ad\u5730\u53d1\u5c55\u6f14\u8fdb\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684\u4f60\u5b9e\u9645\u5f97\u5230\u7684\u7ed3\u679c\u53ef\u80fd\u4f1a\u56e0\u4e3a\u7248\u672c\u7684\u4e0d\u540c\u800c\u4e0e\u6211\u4eec\u8fd0\u884c\u7684\u7ed3\u679c\u6709\u6240\u4e0d\u540c\u3002</p> <p>Goroutine\u6ca1\u6709ID\u53f7</p> <p>\u8fd9\u90e8\u5206\u6211\u6ca1\u8bfb\u61c2</p> <p>https://golang-china.github.io/gopl-zh/ch9/ch9-08.html#:~:text=9.8.4.-,Goroutine%E6%B2%A1%E6%9C%89ID%E5%8F%B7,-%E5%9C%A8%E5%A4%A7%E5%A4%9A%E6%95%B0</p>"},{"location":"software_development/backend/language/Go/#go_6","title":"Go\u9762\u8bd5\u9898","text":""},{"location":"software_development/backend/language/Go/#go_7","title":"Go\u8bed\u8a00\u4e60\u60ef","text":"<p>\u672c\u4e13\u9898\u5c06\u6307\u51faGo\u8bed\u8a00\u7f16\u7a0b\u4e00\u4e9b\u597d\u7684\u4e60\u60ef\uff0c\u8fd9\u4e9b\u4e60\u60ef\u4e0d\u5f71\u54cd\u7a0b\u5e8f\u8fd0\u884c</p>"},{"location":"software_development/backend/language/Go/#_91","title":"\u53d8\u91cf","text":"<p>\u547d\u540d\u9a7c\u5cf0\u5f0f</p> <p>\u5982\u679c\u6ca1\u6709\u5bf9\u4e8e\u6027\u80fd\u7684\u9ad8\u8981\u6c42\uff0c\u4f7f\u7528\u4ee5\u4e0b\u7c7b\u578b\uff1a</p> <ul> <li>int</li> <li>uint</li> <li>float64</li> <li>complex128</li> </ul>"},{"location":"software_development/backend/language/Go/#_92","title":"\u9519\u8bef\u5904\u7406","text":"<p>if\u4e2d\u5904\u7406\u9519\u8bef\u7136\u540e\u76f4\u63a5\u8fd4\u56de\uff0c\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u6b63\u5e38\u6267\u884c\u7684\u8bed\u53e5\u4e0d\u9700\u8981\u4ee3\u7801\u7f29\u8fdb\u3002</p> <p>\u9519\u8bef\u793a\u8303</p> <pre><code>if f, err := os.Open(fname); err != nil {\n    return err\n} else {\n    // f and err are visible here too\n    f.ReadByte()\n    f.Close()\n}\n</code></pre> <p>\u6b63\u786e\u793a\u8303</p> <pre><code>f, err := os.Open(fname)\nif err != nil {\n    return err\n}\nf.ReadByte()\nf.Close()\n</code></pre> <p>\u5728Go\u4e2d\uff0c\u9519\u8bef\u5904\u7406\u6709\u4e00\u5957\u72ec\u7279\u7684\u7f16\u7801\u98ce\u683c\u3002\u68c0\u67e5\u67d0\u4e2a\u5b50\u51fd\u6570\u662f\u5426\u5931\u8d25\u540e\uff0c\u6211\u4eec\u901a\u5e38\u5c06\u5904\u7406\u5931\u8d25\u7684\u903b\u8f91\u4ee3\u7801\u653e\u5728\u5904\u7406\u6210\u529f\u7684\u4ee3\u7801\u4e4b\u524d\u3002\u5982\u679c\u67d0\u4e2a\u9519\u8bef\u4f1a\u5bfc\u81f4\u51fd\u6570\u8fd4\u56de\uff0c\u90a3\u4e48\u6210\u529f\u65f6\u7684\u903b\u8f91\u4ee3\u7801\u4e0d\u5e94\u653e\u5728else\u8bed\u53e5\u5757\u4e2d\uff0c\u800c\u5e94\u76f4\u63a5\u653e\u5728\u51fd\u6570\u4f53\u4e2d\u3002Go\u4e2d\u5927\u90e8\u5206\u51fd\u6570\u7684\u4ee3\u7801\u7ed3\u6784\u51e0\u4e4e\u76f8\u540c\uff0c\u9996\u5148\u662f\u4e00\u7cfb\u5217\u7684\u521d\u59cb\u68c0\u67e5\uff0c\u9632\u6b62\u9519\u8bef\u53d1\u751f\uff0c\u4e4b\u540e\u662f\u51fd\u6570\u7684\u5b9e\u9645\u903b\u8f91\u3002</p>"},{"location":"software_development/backend/language/Go/#_93","title":"\u6d6e\u70b9\u6570","text":"<p>\u4e00\u4e2afloat32\u7c7b\u578b\u7684\u6d6e\u70b9\u6570\u53ef\u4ee5\u63d0\u4f9b\u5927\u7ea66\u4e2a\u5341\u8fdb\u5236\u6570\u7684\u7cbe\u5ea6\uff0c\u800cfloat64\u5219\u53ef\u4ee5\u63d0\u4f9b\u7ea615\u4e2a\u5341\u8fdb\u5236\u6570\u7684\u7cbe\u5ea6\uff1b\u901a\u5e38\u5e94\u8be5\u4f18\u5148\u4f7f\u7528float64\u7c7b\u578b\uff0c\u56e0\u4e3afloat32\u7c7b\u578b\u7684\u7d2f\u8ba1\u8ba1\u7b97\u8bef\u5dee\u5f88\u5bb9\u6613\u6269\u6563\uff0c\u5e76\u4e14float32\u80fd\u7cbe\u786e\u8868\u793a\u7684\u6b63\u6574\u6570\u5e76\u4e0d\u662f\u5f88\u5927\uff08\u8bd1\u6ce8\uff1a\u56e0\u4e3afloat32\u7684\u6709\u6548bit\u4f4d\u53ea\u670923\u4e2a\uff0c\u5176\u5b83\u7684bit\u4f4d\u7528\u4e8e\u6307\u6570\u548c\u7b26\u53f7\uff1b\u5f53\u6574\u6570\u5927\u4e8e23bit\u80fd\u8868\u8fbe\u7684\u8303\u56f4\u65f6\uff0cfloat32\u7684\u8868\u793a\u5c06\u51fa\u73b0\u8bef\u5dee\uff09\uff1a</p> <pre><code>var f float32 = 16777216 // 1 &lt;&lt; 24\nfmt.Println(f == f+1)    // \"true\"!\n</code></pre>"},{"location":"software_development/backend/language/Go/#_94","title":"\u51fd\u6570","text":"<p>\u4e3a\u4e86\u4fdd\u8bc1\u53ef\u8bfb\u6027</p> <p>\u8fd4\u56de\u503c\u9700\u8981\u8d4b\u4e88\u53d8\u91cf\u540d\uff0creturn\u4e5f\u8981\u7ed9\u4e88\u53d8\u91cf\u540d</p> <pre><code>func getNum() (x, y int){\n        return x, y\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#defer_1","title":"defer","text":"<p>\u5728\u5faa\u73af\u4f53\u4e2d\u7684defer\u8bed\u53e5\u9700\u8981\u7279\u522b\u6ce8\u610f\uff0c\u56e0\u4e3a\u53ea\u6709\u5728\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u8fd9\u4e9b\u88ab\u5ef6\u8fdf\u7684\u51fd\u6570\u624d\u4f1a\u6267\u884c\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u8017\u5c3d\uff0c\u56e0\u4e3a\u5728\u6240\u6709\u6587\u4ef6\u90fd\u88ab\u5904\u7406\u4e4b\u524d\uff0c\u6ca1\u6709\u6587\u4ef6\u4f1a\u88ab\u5173\u95ed\u3002</p> <pre><code>for _, filename := range filenames {\n    f, err := os.Open(filename)\n    if err != nil {\n        return err\n    }\n    defer f.Close() // NOTE: risky; could run out of file descriptors\n    // ...process f\u2026\n}\n</code></pre> <p>\u4e00\u79cd\u89e3\u51b3\u65b9\u6cd5\u662f\u5c06\u5faa\u73af\u4f53\u4e2d\u7684defer\u8bed\u53e5\u79fb\u81f3\u53e6\u5916\u4e00\u4e2a\u51fd\u6570\u3002\u5728\u6bcf\u6b21\u5faa\u73af\u65f6\uff0c\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002</p> <pre><code>for _, filename := range filenames {\n    if err := doFile(filename); err != nil {\n        return err\n    }\n}\nfunc doFile(filename string) error {\n    f, err := os.Open(filename)\n    if err != nil {\n        return err\n    }\n    defer f.Close()\n    // ...process f\u2026\n}\n</code></pre>"},{"location":"software_development/backend/language/Go/#_95","title":"\u7ec4\u5408\uff08\u4ee3\u7801\u590d\u7528\uff09","text":"<p>\u5d4c\u5165\u7ed3\u6784\u4f53/\u63a5\u53e3\uff0c\u4f7f\u5f97\u65b0\u7684\u7ed3\u6784\u4f53\u80fd\u591f\u590d\u7528\u65b9\u6cd5\u548c\u53d8\u91cf\uff0c\u4ece\u800c\u5b9e\u73b0\u4ee3\u7801\u590d\u7528\uff0c\u5b9e\u73b0\u7c7b\u4f3c\u4e8e\u7ee7\u627f\u7684\u6548\u679c</p> <p>\u5f53\u4f60\u5728\u7ed3\u6784\u4f53\u4e2d\u5d4c\u5165\u4e00\u4e2a\u63a5\u53e3\u65f6\uff0c\u8fd9\u4e2a\u7ed3\u6784\u4f53\u81ea\u52a8\u83b7\u5f97\u4e86\u8be5\u63a5\u53e3\u7684\u6240\u6709\u65b9\u6cd5\u3002</p>"},{"location":"software_development/backend/language/Go/#go_8","title":"Go\u7248\u672c\u66f4\u65b0\u53d8\u66f4","text":"<p>\u4e4b\u524d\u5f3a\u8c03\u8fc7\u4e00\u4e2a\u5bb9\u6613\u72af\u9519\u7684\u95ee\u9898\uff0c\u5728for\u5faa\u73af\u4e2drange\u58f0\u660e\u7684\u53d8\u91cf\u5171\u4eab\u540c\u4e00\u5730\u5740\uff0c\u8fed\u4ee3\u7684\u65b9\u6cd5\u662f\u5728\u8fd9\u4e2a\u5730\u5740\u4e0a\u53d8\u66f4\u503c\u3002</p> <p>\u5bf9\u4e8efor\u4e2d\u7684\u95ed\u5305\u6765\u8bf4\uff0c\u95ed\u5305\u8bfb\u53d6\u7684\u662f\u53d8\u91cf\u5730\u5740\uff0c\u5e76\u4e14\u5faa\u73af\u540e\u624d\u6267\u884c\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u6bcf\u4e2a\u95ed\u5305\u4f7f\u7528\u7684\u662f\u8fed\u4ee3\u6700\u540e\u7684\u503c</p> <p>\u5982\u4e0b\u4f8b\u5b50\uff0c\u6253\u5370\u51fa\u6765\u7684&amp;value\u7684\u503c\u5e94\u4e3a\u540c\u4e00\u4e2a\u503c</p> <pre><code>intArr := []int{1, 2, 4, 5}\n    for _, value := range intArr {\n        fmt.Println(value)\n        fmt.Println(&amp;value)\n    }\n</code></pre> <p>\u4f7f\u7528\u95ed\u5305\u9700\u8981\u5199\u6210\u8fd9\u6837</p> <pre><code>    intArr := []int{1, 2, 4, 5}\n    for _, value := range intArr {\n    // \u9700\u8981\u989d\u5916\u4e00\u4e2a\u8d4b\u4e88\u95ed\u5305\u7684\u53d8\u91cf\n        v := value\n        func() {\n            fmt.Println(v)\n        }()\n    }\n</code></pre> <p>\u5728Go1.22.2\u540e\uff0c\u4fee\u590d\u4e86\u8fd9\u4e2abug\uff0c\u73b0\u5728range\u58f0\u660e\u7684\u53d8\u91cf\u5404\u81ea\u4eab\u6709\u5730\u5740\u3002\u56e0\u6b64\u4ee5\u4e0a\u63d0\u5230\u7684\u95ed\u5305\u7684bug\u88ab\u4fee\u590d</p> <p>\u5728\u4ee5\u4e0a\u4f8b\u5b50\u4e2d\uff0c\u6253\u5370\u51fa\u6765\u7684&amp;value\u7684\u503c\u4e0d\u662f\u540c\u4e00\u4e2a\u503c</p> <p>\u73b0\u5728\u4f7f\u7528\u95ed\u5305\u53ea\u9700\u8981\u5199\u6210\u8fd9\u6837</p> <pre><code>    intArr := []int{1, 2, 4, 5}\n    for _, value := range intArr {\n        func() {\n            fmt.Println(v)\n        }()\n    }\n</code></pre>"},{"location":"software_development/backend/language/Rust/","title":"Rust","text":""},{"location":"software_development/backend/language/Rust/#_1","title":"\u57fa\u672c\u4f7f\u7528","text":"<p>\u8fd9\u91cc\u4ec5\u63d0\u4e00\u5634\u5bb9\u6613\u5ffd\u7565\u7684\u7ec6\u8282</p> <p>\u5177\u4f53\u770brust\u8bed\u8a00\u5723\u7ecf</p>"},{"location":"software_development/backend/language/Rust/#_2","title":"\u57fa\u672c\u7c7b\u578b","text":"<p>\u5b57\u7b26char\u5360\u75284\u4e2a\u5b57\u8282\uff0c\u8868\u793a\u4e00\u4e2aUnicode</p> <p>\u5355\u5143\u7c7b\u578b()\uff0c\u5360\u4f4d\u7b26\uff0c\u4e0d\u5360\u7528\u4efb\u4f55\u5185\u5b58</p> <p>\u6253\u5370\u53d8\u91cf\u6240\u5360\u5b57\u8282</p> <pre><code>fn main() {\n    let x = 2;\n    println!(\"{}\",std::mem::size_of_val(&amp;x));\n}\n</code></pre> <p>\u51fd\u6570</p> <ul> <li>\u51fd\u6570\u540d\u548c\u53d8\u91cf\u540d\u4f7f\u7528\u86c7\u5f62\u547d\u540d\u6cd5(snake case)\uff0c\u4f8b\u5982 <code>fn add_two() -&gt; {}</code></li> <li>\u51fd\u6570\u7684\u4f4d\u7f6e\u53ef\u4ee5\u968f\u4fbf\u653e\uff0cRust \u4e0d\u5173\u5fc3\u6211\u4eec\u5728\u54ea\u91cc\u5b9a\u4e49\u4e86\u51fd\u6570\uff0c\u53ea\u8981\u6709\u5b9a\u4e49\u5373\u53ef</li> <li>\u6bcf\u4e2a\u51fd\u6570\u53c2\u6570\u90fd\u9700\u8981\u6807\u6ce8\u7c7b\u578b</li> </ul> <p>\u53d1\u6563\u51fd\u6570</p> <p>\u5f53\u7528 <code>!</code> \u4f5c\u51fd\u6570\u8fd4\u56de\u7c7b\u578b\u7684\u65f6\u5019\uff0c\u8868\u793a\u8be5\u51fd\u6570\u6c38\u4e0d\u8fd4\u56de( diverge function )\uff0c\u7279\u522b\u7684\uff0c\u8fd9\u79cd\u8bed\u6cd5\u5f80\u5f80\u7528\u505a\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u7684\u51fd\u6570\uff1a</p> <pre><code>fn dead_end() -&gt; ! {\n  panic!(\"\u4f60\u5df2\u7ecf\u5230\u4e86\u7a77\u9014\u672b\u8def\uff0c\u5d29\u6e83\u5427\uff01\");\n}\nNo output\n</code></pre> <p>\u4e0b\u9762\u7684\u51fd\u6570\u521b\u5efa\u4e86\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\uff0c\u8be5\u5faa\u73af\u6c38\u4e0d\u8df3\u51fa\uff0c\u56e0\u6b64\u51fd\u6570\u4e5f\u6c38\u4e0d\u8fd4\u56de\uff1a</p> <pre><code>fn forever() -&gt; ! {\n  loop {\n    //...\n  };\n}\n</code></pre> <p>\u4e3a\u4ec0\u4e48\u9700\u8981\u53d1\u6563\u51fd\u6570\uff1f</p> <p>\u4f8b\u5982\u4e00\u4e2a\u670d\u52a1\u5668\u7684\u5b88\u62a4\u8fdb\u7a0b\u53ef\u80fd\u662f\u65e0\u9650\u5faa\u73af\u7684\uff0c\u56e0\u6b64\u662f\u53d1\u6563\u51fd\u6570\u3002</p> <p>\u51fd\u6570\u91cc\u90e8\u5206\u4ee3\u7801\u56e0\u4e3a\u5404\u79cd\u539f\u56e0\u6682\u65f6\u7559\u7a7a\u4e0d\u5199\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u56e0\u4e3a\u7f3a\u5c11\u5bf9\u5e94\u7c7b\u578b\u8fd4\u56de\u503c\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1\uff1b\u5982\u679c\u6682\u65f6\u7ed9\u8fd4\u56de\u503c\u7c7b\u578b\u8bb0\u4f5c<code>()</code>\uff0c\u90a3\u4e48\u5230\u65f6\u8fd9\u4e9b\u51fd\u6570\u9700\u8981\u5168\u90e8\u90fd\u6279\u91cf\u4fee\u6539\u51fd\u6570\u7b7e\u540d\u4f1a\u5f88\u9ebb\u70e6\uff1b\u66f4\u4e0d\u7528\u8bf4\u5982\u679c\u6709\u5df2\u5b9e\u73b0\u5206\u652f\u8fd4\u56de\u9884\u671f\u7684\u7c7b\u578b\uff0c\u90a3\u4e48\u672a\u5b9e\u73b0\u7684\u5206\u652f\u5c31\u5fc5\u987b\u634f\u9020\u4e00\u4e2a\u7b26\u5408\u8fd4\u56de\u7c7b\u578b\u7684\u503c\u8fd4\u56de\uff0c\u8fd9\u975e\u5e38\u607c\u4eba\uff1b\u800c<code>todo!()</code> <code>unimplement!()</code>\u8fd9\u4e9b\u5b8f\u914d\u5408!\u7c7b\u578b\u4f7f\u7528\uff0c\u4fbf\u4e8e\u540e\u9762\u641c\u7d22\u5173\u952e\u8bcd\u8fdb\u884c\u4ee3\u7801\u8865\u5145\u3002</p> <p><code>unimplemented!()</code> \u544a\u8bc9\u7f16\u8bd1\u5668\u8be5\u51fd\u6570\u5c1a\u672a\u5b9e\u73b0\uff0c<code>unimplemented!()</code> \u6807\u8bb0\u901a\u5e38\u610f\u5473\u7740\u6211\u4eec\u671f\u671b\u5feb\u901f\u5b8c\u6210\u4e3b\u8981\u4ee3\u7801\uff0c\u56de\u5934\u518d\u901a\u8fc7\u641c\u7d22\u8fd9\u4e9b\u6807\u8bb0\u6765\u5b8c\u6210\u6b21\u8981\u4ee3\u7801\uff0c\u7c7b\u4f3c\u7684\u6807\u8bb0\u8fd8\u6709 <code>todo!()</code>\uff0c\u5f53\u4ee3\u7801\u6267\u884c\u5230\u8fd9\u79cd\u672a\u5b9e\u73b0\u7684\u5730\u65b9\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u76f4\u63a5\u62a5\u9519\u3002</p> <p>\u4f8b\u5982\uff1a</p> <pre><code>fn main() {\n    example1();\n    // example\u51fd\u6570\u4e0d\u8fd4\u56de\uff0c\u4e0d\u4f1a\u5230\u8fbe\u8fd9\u4e00\u6b65\n    println!(\"hello\");\n}\n\nfn example() -&gt; !{\n    unimplemented!();\n}\n</code></pre> <pre><code>fn main() {\n    example();\n    // example\u51fd\u6570\u4e0d\u8fd4\u56de\uff0c\u4e0d\u4f1a\u5230\u8fbe\u8fd9\u4e00\u6b65\n    println!(\"hello\");\n}\n\n\nfn example() -&gt; !{\n    todo!();\n}\n</code></pre>"},{"location":"software_development/backend/language/Rust/#_3","title":"\u590d\u5408\u7c7b\u578b","text":""},{"location":"software_development/backend/language/Rust/#_4","title":"\u5207\u7247","text":"<p>\u5f15\u7528\u96c6\u5408\u90e8\u5206\u8fde\u7eed\u7684\u5143\u7d20\u5e8f\u5217</p> <p>\u521b\u5efa\u5207\u7247\u7684\u8bed\u6cd5\uff0c\u4f7f\u7528\u65b9\u62ec\u53f7\u5305\u62ec\u7684\u4e00\u4e2a\u5e8f\u5217\uff1a[\u5f00\u59cb\u7d22\u5f15..\u7ec8\u6b62\u7d22\u5f15]\uff0c\u5176\u4e2d\u5f00\u59cb\u7d22\u5f15\u662f\u5207\u7247\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u4f4d\u7f6e\uff0c\u800c\u7ec8\u6b62\u7d22\u5f15\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u540e\u9762\u7684\u7d22\u5f15\u4f4d\u7f6e</p>"},{"location":"software_development/backend/language/Rust/#_5","title":"\u5b57\u7b26\u4e32","text":"<p>Rust \u4e2d\u7684\u5b57\u7b26\u662f Unicode \u7c7b\u578b\uff0c\u56e0\u6b64\u6bcf\u4e2a\u5b57\u7b26\u5360\u636e 4 \u4e2a\u5b57\u8282\u5185\u5b58\u7a7a\u95f4\uff0c\u4f46\u662f\u5728\u5b57\u7b26\u4e32\u4e2d\u4e0d\u4e00\u6837\uff0c\u5b57\u7b26\u4e32\u662f UTF-8 \u7f16\u7801\uff0c\u4e5f\u5c31\u662f\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u6240\u5360\u7684\u5b57\u8282\u6570\u662f\u53d8\u5316\u7684(1 - 4)\uff0c\u8fd9\u6837\u6709\u52a9\u4e8e\u5927\u5e45\u964d\u4f4e\u5b57\u7b26\u4e32\u6240\u5360\u7528\u7684\u5185\u5b58\u7a7a\u95f4\u3002</p> <p><code>str</code> \u7c7b\u578b\u662f\u786c\u7f16\u7801\u8fdb\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u4e5f\u65e0\u6cd5\u88ab\u4fee\u6539\uff08\u6b63\u5e38\u60c5\u51b5\u4e0b\u6211\u4eec\u65e0\u6cd5\u4f7f\u7528 <code>str</code> \u7c7b\u578b\uff09</p> <p>\u4f46\u662f <code>String</code> \u5219\u662f\u4e00\u4e2a\u53ef\u589e\u957f\u3001\u53ef\u6539\u53d8\u4e14\u5177\u6709\u6240\u6709\u6743\u7684 UTF-8 \u7f16\u7801\u5b57\u7b26\u4e32\uff0c\u5f53 Rust \u7528\u6237\u63d0\u5230\u5b57\u7b26\u4e32\u65f6\uff0c\u5f80\u5f80\u6307\u7684\u5c31\u662f <code>String</code> \u7c7b\u578b\u548c <code>&amp;str</code> \u5b57\u7b26\u4e32\u5207\u7247\u7c7b\u578b\uff0c\u8fd9\u4e24\u4e2a\u7c7b\u578b\u90fd\u662f UTF-8 \u7f16\u7801\u3002</p> <p>\u9664\u4e86 <code>String</code> \u7c7b\u578b\u7684\u5b57\u7b26\u4e32\uff0cRust \u7684\u6807\u51c6\u5e93\u8fd8\u63d0\u4f9b\u4e86\u5176\u4ed6\u7c7b\u578b\u7684\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982 <code>OsString</code>\uff0c <code>OsStr</code>\uff0c <code>CsString</code> \u548c <code>CsStr</code> \u7b49\uff0c\u6ce8\u610f\u5230\u8fd9\u4e9b\u540d\u5b57\u90fd\u4ee5 <code>String</code> \u6216\u8005 <code>Str</code> \u7ed3\u5c3e\u4e86\u5417\uff1f\u5b83\u4eec\u5206\u522b\u5bf9\u5e94\u7684\u662f\u5177\u6709\u6240\u6709\u6743\u548c\u88ab\u501f\u7528\u7684\u53d8\u91cf\u3002</p> <p>UTF8 \u548cUnicode\u533a\u522b</p> <p>https://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html</p> <p>\u5b57\u7b26\u4e32\u5207\u7247</p> <p>\u5b57\u7b26\u4e32\u4e0d\u5141\u8bb8\u7d22\u5f15\uff0c\u53ea\u5141\u8bb8\u5b57\u7b26\u4e32\u5207\u7247\u7d22\u5f15</p> <pre><code>let s = String::from(\"hello world\");\nlet s1 = s[0]; // \u62a5\u9519\nlet s2 = &amp;s[0..1];\n</code></pre> <p>\u5728\u5bf9\u5b57\u7b26\u4e32\u4f7f\u7528\u5207\u7247\u8bed\u6cd5\u65f6\u9700\u8981\u683c\u5916\u5c0f\u5fc3\uff0c\u5207\u7247\u7684\u7d22\u5f15\u5fc5\u987b\u843d\u5728\u5b57\u7b26\u4e4b\u95f4\u7684\u8fb9\u754c\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f UTF-8 \u5b57\u7b26\u7684\u8fb9\u754c\uff0c\u4f8b\u5982\u4e2d\u6587\u5728 UTF-8 \u4e2d\u5360\u7528\u4e09\u4e2a\u5b57\u8282\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5c31\u4f1a\u5d29\u6e83\uff1a</p> <pre><code> let s = \"\u4e2d\u56fd\u4eba\";\n let a = &amp;s[0..2];\n println!(\"{}\",a);\n</code></pre> <p>\u56e0\u4e3a\u6211\u4eec\u53ea\u53d6 <code>s</code> \u5b57\u7b26\u4e32\u7684\u524d\u4e24\u4e2a\u5b57\u8282\uff0c\u4f46\u662f\u672c\u4f8b\u4e2d\u6bcf\u4e2a\u6c49\u5b57\u5360\u7528\u4e09\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u6ca1\u6709\u843d\u5728\u8fb9\u754c\u5904\uff0c\u4e5f\u5c31\u662f\u8fde <code>\u4e2d</code> \u5b57\u90fd\u53d6\u4e0d\u5b8c\u6574\uff0c\u6b64\u65f6\u7a0b\u5e8f\u4f1a\u76f4\u63a5\u5d29\u6e83\u9000\u51fa\uff0c\u5982\u679c\u6539\u6210 <code>&amp;s[0..3]</code>\uff0c\u5219\u53ef\u4ee5\u6b63\u5e38\u901a\u8fc7\u7f16\u8bd1\u3002 </p> <pre><code>let s = String::from(\"hello world\");\n\nlet hello = &amp;s[0..5];\nlet world = &amp;s[6..11];\n</code></pre> <p></p> <p>\u5b57\u7b26\u4e32\u5b57\u9762\u503c\uff1a</p> <ul> <li>\u7c7b\u578b\u4e3a&amp;str</li> <li>\u672c\u8d28\u4e0a\u5b57\u9762\u503c\u7684\u503c\u5b58\u50a8\u5728\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\uff0c\u5b57\u7b26\u4e32\u5b57\u9762\u503c\u4e3a\u8be5\u503c\u7684\u5f15\u7528\uff0c\u56e0\u6b64\u8fd4\u56de&amp;str</li> </ul>"},{"location":"software_development/backend/language/Rust/#_6","title":"\u5b57\u7b26\u4e32\u4e0e\u5b57\u7b26\u4e32\u5207\u7247\u76f8\u4e92\u8f6c\u6362","text":"<pre><code>let s1 = String::from(\"hello\"); //&amp;str -&gt; String\nlet s2 = &amp;s1; //&amp;String -&gt; &amp;str\nlet s3 = &amp;s1[1..3]; //&amp;String -&gt; &amp;str\nlet s4 = s1.as_str(); //&amp;String -&gt; &amp;str\nlet s5 = \"hello\".to_string(); //&amp;str -&gt; String\n</code></pre> <p>\u524d\u6587\u63d0\u5230\u4e86\u51e0\u79cd\u4f7f\u7528 UTF-8 \u5b57\u7b26\u4e32\u7684\u65b9\u5f0f\uff0c\u4e0b\u9762\u6765\u4e00\u4e00\u8bf4\u660e\u3002</p>"},{"location":"software_development/backend/language/Rust/#_7","title":"\u904d\u5386\u5b57\u7b26\u4e32","text":"<p>\u5b57\u7b26</p> <p>\u5982\u679c\u4f60\u60f3\u8981\u4ee5 Unicode \u5b57\u7b26\u7684\u65b9\u5f0f\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u6700\u597d\u7684\u529e\u6cd5\u662f\u4f7f\u7528 <code>chars</code> \u65b9\u6cd5\uff0c\u4f8b\u5982\uff1a</p> <pre><code>for c in \"\u4e2d\u56fd\u4eba\".chars() {\n    println!(\"{}\", c);\n}\n</code></pre> <p>\u8f93\u51fa\u5982\u4e0b</p> <pre><code>\u4e2d\n\u56fd\n\u4eba\n</code></pre> <p>\u5b57\u8282</p> <p>\u8fd9\u79cd\u65b9\u5f0f\u662f\u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u5e95\u5c42\u5b57\u8282\u6570\u7ec4\u8868\u73b0\u5f62\u5f0f\uff1a</p> <pre><code>for b in \"\u4e2d\u56fd\u4eba\".bytes() {\n    println!(\"{}\", b);\n}\n</code></pre> <p>\u8f93\u51fa\u5982\u4e0b\uff1a</p> <pre><code>228\n184\n173\n229\n155\n189\n228\n186\n186\n</code></pre> <p>\u83b7\u53d6\u5b50\u4e32</p> <p>\u60f3\u8981\u51c6\u786e\u7684\u4ece UTF-8 \u5b57\u7b26\u4e32\u4e2d\u83b7\u53d6\u5b50\u4e32\u662f\u8f83\u4e3a\u590d\u6742\u7684\u4e8b\u60c5\uff0c\u4f8b\u5982\u60f3\u8981\u4ece <code>holla\u4e2d\u56fd\u4eba\u0928\u092e\u0938\u094d\u0924\u0947</code> \u8fd9\u79cd\u53d8\u957f\u7684\u5b57\u7b26\u4e32\u4e2d\u53d6\u51fa\u67d0\u4e00\u4e2a\u5b50\u4e32\uff0c\u4f7f\u7528\u6807\u51c6\u5e93\u4f60\u662f\u505a\u4e0d\u5230\u7684\u3002 \u4f60\u9700\u8981\u5728 <code>crates.io</code> \u4e0a\u641c\u7d22 <code>utf8</code> \u6765\u5bfb\u627e\u60f3\u8981\u7684\u529f\u80fd\u3002</p> <p>\u53ef\u4ee5\u8003\u8651\u5c1d\u8bd5\u4e0b\u8fd9\u4e2a\u5e93\uff1autf8_slice\u3002</p>"},{"location":"software_development/backend/language/Rust/#_8","title":"\u5b57\u7b26\u4e32\u57fa\u672c\u4f7f\u7528","text":"<p>https://course.rs/basic/compound-type/string-slice.html#%E6%93%8D%E4%BD%9C%E5%AD%97%E7%AC%A6%E4%B8%B2</p> <p>\u62fc\u63a5\u5b57\u7b26\u4e32</p> <pre><code>fn main() {\n    let s1 = String::from(\"hello,\");\n    let s2 = String::from(\"world!\");\n    //let s3 = s1+ &amp;s2; \u4f1a\u5bfc\u81f4s1\u7684\u6240\u6709\u6743\u8f6c\u79fb\u7ed9s3\n    let s3 = s1.clone() + &amp;s2; \n    assert_eq!(s3,\"hello,world!\");\n    println!(\"{}\",s1);\n}\n</code></pre>"},{"location":"software_development/backend/language/Rust/#_9","title":"\u7ed3\u6784\u4f53","text":"<p>\u5148\u6765\u770b\u4ee5\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>#[derive(Debug)]\n struct File {\n   name: String,\n   data: Vec&lt;u8&gt;,\n }\n\n fn main() {\n   let f1 = File {\n     name: String::from(\"f1.txt\"),\n     data: Vec::new(),\n   };\n\n   let f1_name = &amp;f1.name;\n   let f1_length = &amp;f1.data.len();\n\n   println!(\"{:?}\", f1);\n   println!(\"{} is {} bytes long\", f1_name, f1_length);\n }\n</code></pre> <p>\u4e0a\u9762\u5b9a\u4e49\u7684 <code>File</code> \u7ed3\u6784\u4f53\u5728\u5185\u5b58\u4e2d\u7684\u6392\u5217\u5982\u4e0b\u56fe\u6240\u793a\uff1a </p> <p>\u4ece\u56fe\u4e2d\u53ef\u4ee5\u6e05\u6670\u5730\u770b\u51fa <code>File</code> \u7ed3\u6784\u4f53\u4e24\u4e2a\u5b57\u6bb5 <code>name</code> \u548c <code>data</code> \u5206\u522b\u62e5\u6709\u5e95\u5c42\u4e24\u4e2a <code>[u8]</code> \u6570\u7ec4\u7684\u6240\u6709\u6743\uff08<code>String</code> \u7c7b\u578b\u7684\u5e95\u5c42\u4e5f\u662f <code>[u8]</code> \u6570\u7ec4\uff09\uff0c\u901a\u8fc7 <code>ptr</code> \u6307\u9488\u6307\u5411\u5e95\u5c42\u6570\u7ec4\u7684\u5185\u5b58\u5730\u5740\uff0c\u8fd9\u91cc\u4f60\u53ef\u4ee5\u628a <code>ptr</code> \u6307\u9488\u7406\u89e3\u4e3a Rust \u4e2d\u7684\u5f15\u7528\u7c7b\u578b\u3002</p> <p>\u8be5\u56fe\u7247\u4e5f\u4fa7\u9762\u5370\u8bc1\u4e86\uff1a\u628a\u7ed3\u6784\u4f53\u4e2d\u5177\u6709\u6240\u6709\u6743\u7684\u5b57\u6bb5\u8f6c\u79fb\u51fa\u53bb\u540e\uff0c\u5c06\u65e0\u6cd5\u518d\u8bbf\u95ee\u8be5\u5b57\u6bb5\uff0c\u4f46\u662f\u53ef\u4ee5\u6b63\u5e38\u8bbf\u95ee\u5176\u5b83\u7684\u5b57\u6bb5\u3002</p>"},{"location":"software_development/backend/language/Rust/#_10","title":"\u6570\u7ec4","text":"<p>\u6570\u7ec4\u5207\u7247&amp;[T]\u5305\u542b\u6307\u9488\u548c\u957f\u5ea6\uff0c\u6570\u7ec4\u5207\u7247\u7684\u901a\u7528\u60c5\u51b5\uff0c\u5305\u542b</p> <ul> <li>\u6570\u7ec4\u5c40\u90e8\u5f15\u7528</li> <li>\u6570\u7ec4\u5168\u90e8\u5f15\u7528</li> </ul> <p>\u6570\u7ec4\u5207\u7247&amp;[T:len]\u7279\u6307\u5168\u90e8\u5143\u7d20\u6570\u7ec4\u7684\u5f15\u7528\uff0clen\u4e3a\u6570\u7ec4\u957f\u5ea6</p> <p>[T;len]\u4e3a\u6570\u7ec4\u7684\u7c7b\u578b</p>"},{"location":"software_development/backend/language/Rust/#_11","title":"\u6570\u7ec4\u7684\u6a21\u5f0f\u5339\u914d","text":"<p>https://course.rs/basic/match-pattern/all-patterns.html#%E8%A7%A3%E6%9E%84%E6%95%B0%E7%BB%84</p>"},{"location":"software_development/backend/language/Rust/#_12","title":"\u6240\u6709\u6743","text":"<p>\u8c28\u8bb0\u4e00\u53e5\u8bdd\uff0c\u6240\u6709\u6743\u9002\u7528\u4e8e\u6240\u6709\u53d8\u91cf\uff0c\u4f46\u662f\u6240\u6709\u6743\u7684\u8f6c\u79fb\u53d1\u751f\u5728\u590d\u6742\u7c7b\u578b\u4e0a\uff08\u6ca1\u6709\u5b9e\u73b0Copy\u7684Trait\uff09</p>"},{"location":"software_development/backend/language/Rust/#_13","title":"\u57fa\u7840\u4e09\u5927\u539f\u5219","text":"<ol> <li>Rust \u4e2d\u6bcf\u4e00\u4e2a\u503c\u90fd\u88ab\u4e00\u4e2a\u53d8\u91cf\u6240\u62e5\u6709\uff0c\u8be5\u53d8\u91cf\u88ab\u79f0\u4e3a\u503c\u7684\u6240\u6709\u8005</li> <li>\u4e00\u4e2a\u503c\u540c\u65f6\u53ea\u80fd\u88ab\u4e00\u4e2a\u53d8\u91cf\u6240\u62e5\u6709\uff0c\u6216\u8005\u8bf4\u4e00\u4e2a\u503c\u53ea\u80fd\u62e5\u6709\u4e00\u4e2a\u6240\u6709\u8005</li> <li>\u5f53\u6240\u6709\u8005\uff08\u53d8\u91cf\uff09\u79bb\u5f00\u4f5c\u7528\u57df\u8303\u56f4\u65f6\uff0c\u8fd9\u4e2a\u503c\u5c06\u88ab\u4e22\u5f03(drop)</li> </ol>"},{"location":"software_development/backend/language/Rust/#_14","title":"\u4f8b\u5b50","text":"<p>\u5bf9\u4e8e\u5b58\u50a8\u5728\u6808\u4e0a\u7684\u57fa\u7840\u6570\u636e\u7c7b\u578b\uff0c\u76f4\u63a5\u62f7\u8d1d\u5373\u53ef</p> <pre><code>//\u4f8b1\nlet x = 5;\nlet y = x;\n</code></pre> <p>\u4ee5\u4e0a\u4ee3\u7801\u6ca1\u6709\u53d1\u751f\u6240\u6709\u6743\u7684\u8f6c\u79fb</p> <p>\u5bf9\u4e8e\u5b58\u50a8\u5728\u5806\u4e0a\u7684\u590d\u5408\u7c7b\u578b\uff08\u4ee5String\u4e3a\u4f8b\uff09</p> <ul> <li>\u7ed9\u5b9a\u5806\u4e0a\u7684\u67d0\u4e2a\u5730\u5740\uff0c\u5728\u5806\u4e0a\u5b58\u50a8\u6570\u636e</li> <li>\u7531\u4e8e\u5730\u5740\u5927\u5c0f\u56fa\u5b9a\uff0c\u56e0\u6b64\u6808\u5b58\u50a8\u8be5\u5730\u5740</li> </ul> <pre><code>//\u4f8b2\nlet s1 = String::from(\"hello\");\nlet s2 = s1;\n\nprintln!(\"{}, world!\", s1); //\u4f1a\u62a5\u9519value borrowed here after move\n</code></pre> <p>\u4ee5\u4e0a\u4ee3\u7801\u53d1\u751f\u4e86\u6240\u6709\u6743\u8f6c\u79fb\uff0cs1\u53d8\u4e3a\u65e0\u6548\u4e86</p> <p>\u7279\u522b\u7684\uff0c</p> <pre><code>//\u4f8b3\nfn main() {\n    let x: &amp;str = \"hello, world\";\n    let y = x;\n    println!(\"{},{}\",x,y);\n}\n</code></pre> <p>\u4ee5\u4e0a\u4ee3\u7801\u4e5f\u6ca1\u6709\u53d1\u751f\u6240\u6709\u6743\u8f6c\u79fb\uff0cy\u590d\u5236\u4e86x\u7684\u5f15\u7528\uff0cx\u548cy\u90fd\u5f15\u7528\u540c\u4e00\u4e2a\u5b57\u7b26\u4e32</p>"},{"location":"software_development/backend/language/Rust/#_15","title":"\u3010\u91cd\u70b9\u3011\u6240\u6709\u6743\u8f6c\u79fb\u7684\u539f\u7406","text":"<p>\u5bf9\u4e8e\u590d\u6742\u7c7b\u578b\uff0c\u6808\u5b58\u50a8\u8be5\u7c7b\u578b\u7684\u6307\u9488\uff0c\u957f\u5ea6\u4ee5\u53ca\u5185\u5b58\u5927\u5c0f</p> <p>\u5bf9\u4e8e\u4f8b2\u7684\u4ee3\u7801\uff0cs2\u62f7\u8d1d\u4e86s1\u5728\u6808\u4e0a\u7684\u6570\u636e\u7ed3\u6784\uff08\u6307\u9488\uff0c\u957f\u5ea6\u4ee5\u53ca\u5185\u5b58\u5927\u5c0f\uff09\uff0c\u800c\u6ca1\u6709\u62f7\u8d1d\u6570\u636e\u672c\u8eab</p> <p>\u4e3a\u4e86\u907f\u514d\u4e8c\u6b21\u91ca\u653e\uff0crust\u5c06s1\u65e0\u6548\uff0c\u8fd9\u5c31\u662f\u6240\u6709\u6743\u8f6c\u79fb</p> <p>\u6709\u70b9\u50cfc++\u91cc\u7684std::move</p> <p></p>"},{"location":"software_development/backend/language/Rust/#_16","title":"\u3010\u91cd\u70b9\u3011\u4ec0\u4e48\u65f6\u5019\u4f1a\u53d1\u751f\u6240\u6709\u6743\u8f6c\u79fb\uff1f","text":"<ol> <li>\u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u5b9e\u73b0\u4e86Copy\u7684Trait\uff0c\u90a3\u4e48\u8be5\u7c7b\u578b\u8d4b\u503c\u7684\u8fc7\u7a0b\u5c31\u662f\u62f7\u8d1d\u7684\u8fc7\u7a0b\uff08\u5bf9\u5e94\u4f8b1\u548c\u4f8b3\uff09</li> </ol> <p>\u5982\u4e0b\u662f\u4e00\u4e9b <code>Copy</code> \u7684\u7c7b\u578b\uff1a</p> <ul> <li>\u6240\u6709\u6574\u6570\u7c7b\u578b\uff0c\u6bd4\u5982 <code>u32</code></li> <li>\u5e03\u5c14\u7c7b\u578b\uff0c<code>bool</code>\uff0c\u5b83\u7684\u503c\u662f <code>true</code> \u548c <code>false</code></li> <li>\u6240\u6709\u6d6e\u70b9\u6570\u7c7b\u578b\uff0c\u6bd4\u5982 <code>f64</code></li> <li>\u5b57\u7b26\u7c7b\u578b\uff0c<code>char</code></li> <li>\u5143\u7ec4\uff0c\u5f53\u4e14\u4ec5\u5f53\u5176\u5305\u542b\u7684\u7c7b\u578b\u4e5f\u90fd\u662f <code>Copy</code> \u7684\u65f6\u5019\u3002\u6bd4\u5982\uff0c<code>(i32, i32)</code> \u662f <code>Copy</code> \u7684\uff0c\u4f46 <code>(i32, String)</code> \u5c31\u4e0d\u662f</li> <li> <p>\u4e0d\u53ef\u53d8\u5f15\u7528 <code>&amp;T</code> \uff0c\u4f46\u662f\u6ce8\u610f\uff1a\u53ef\u53d8\u5f15\u7528 <code>&amp;mut T</code> \u662f\u4e0d\u53ef\u4ee5 Copy\u7684</p> </li> <li> <p>\u5426\u5219\uff0c\u5219\u4f1a\u53d1\u751f\u6240\u6709\u6743\u8f6c\u79fb</p> </li> </ul>"},{"location":"software_development/backend/language/Rust/#_17","title":"\u3010\u91cd\u70b9\u3011\u5982\u679c\u4e0d\u60f3\u53d1\u751f\u6240\u6709\u6743\u8f6c\u79fb\uff1f","text":"<p>\u5219\u53ef\u4ee5\u4f7f\u7528\u6df1\u62f7\u8d1dclone\uff0c\u4f46\u662f\u6027\u80fd\u4f1a\u4e0b\u964d</p> <pre><code>fn main() {\n    let x = String::from(\"hello\");\n    let y = x.clone();\n    println!(\"{} {}\",x,y);\n}\n</code></pre>"},{"location":"software_development/backend/language/Rust/#_18","title":"\u51fd\u6570\u4e2d\u7684\u6240\u6709\u6743","text":"<p>\u5c06\u503c\u4f20\u9012\u7ed9\u51fd\u6570\uff0c\u4e00\u6837\u4f1a\u53d1\u751f \u79fb\u52a8 \u6216\u8005 \u590d\u5236\uff0c\u5c31\u8ddf let \u8bed\u53e5\u4e00\u6837\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5c55\u793a\u4e86\u6240\u6709\u6743\u3001\u4f5c\u7528\u57df\u7684\u89c4\u5219\uff1a</p> <pre><code>fn main() {\n    let s = String::from(\"hello\");  // s \u8fdb\u5165\u4f5c\u7528\u57df\n\n    takes_ownership(s);             // s \u7684\u503c\u79fb\u52a8\u5230\u51fd\u6570\u91cc ...\n                                    // ... \u6240\u4ee5\u5230\u8fd9\u91cc\u4e0d\u518d\u6709\u6548\n\n    let x = 5;                      // x \u8fdb\u5165\u4f5c\u7528\u57df\n\n    makes_copy(x);                  // x \u5e94\u8be5\u79fb\u52a8\u51fd\u6570\u91cc\uff0c\n                                    // \u4f46 i32 \u662f Copy \u7684\uff0c\u6240\u4ee5\u5728\u540e\u9762\u53ef\u7ee7\u7eed\u4f7f\u7528 x\n\n} // \u8fd9\u91cc, x \u5148\u79fb\u51fa\u4e86\u4f5c\u7528\u57df\uff0c\u7136\u540e\u662f s\u3002\u4f46\u56e0\u4e3a s \u7684\u503c\u5df2\u88ab\u79fb\u8d70\uff0c\n  // \u6240\u4ee5\u4e0d\u4f1a\u6709\u7279\u6b8a\u64cd\u4f5c\n\nfn takes_ownership(some_string: String) { // some_string \u8fdb\u5165\u4f5c\u7528\u57df\n    println!(\"{}\", some_string);\n} // \u8fd9\u91cc\uff0csome_string \u79fb\u51fa\u4f5c\u7528\u57df\u5e76\u8c03\u7528 `drop` \u65b9\u6cd5\u3002\u5360\u7528\u7684\u5185\u5b58\u88ab\u91ca\u653e\n\nfn makes_copy(some_integer: i32) { // some_integer \u8fdb\u5165\u4f5c\u7528\u57df\n    println!(\"{}\", some_integer);\n} // \u8fd9\u91cc\uff0csome_integer \u79fb\u51fa\u4f5c\u7528\u57df\u3002\u4e0d\u4f1a\u6709\u7279\u6b8a\u64cd\u4f5c\n</code></pre> <p>\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u5728 takes_ownership \u4e4b\u540e\uff0c\u518d\u4f7f\u7528 s\uff0c\u770b\u770b\u5982\u4f55\u62a5\u9519\uff1f\u4f8b\u5982\u6dfb\u52a0\u4e00\u884c println!(\"\u5728move\u8fdb\u51fd\u6570\u540e\u7ee7\u7eed\u4f7f\u7528s: {}\",s);\u3002</p> <p>\u540c\u6837\u7684\uff0c\u51fd\u6570\u8fd4\u56de\u503c\u4e5f\u6709\u6240\u6709\u6743\uff0c\u4f8b\u5982:</p> <pre><code>fn main() {\n    let s1 = gives_ownership();         // gives_ownership \u5c06\u8fd4\u56de\u503c\n                                        // \u79fb\u7ed9 s1\n\n    let s2 = String::from(\"hello\");     // s2 \u8fdb\u5165\u4f5c\u7528\u57df\n\n    let s3 = takes_and_gives_back(s2);  // s2 \u88ab\u79fb\u52a8\u5230\n                                        // takes_and_gives_back \u4e2d,\n                                        // \u5b83\u4e5f\u5c06\u8fd4\u56de\u503c\u79fb\u7ed9 s3\n} // \u8fd9\u91cc, s3 \u79fb\u51fa\u4f5c\u7528\u57df\u5e76\u88ab\u4e22\u5f03\u3002s2 \u4e5f\u79fb\u51fa\u4f5c\u7528\u57df\uff0c\u4f46\u5df2\u88ab\u79fb\u8d70\uff0c\n  // \u6240\u4ee5\u4ec0\u4e48\u4e5f\u4e0d\u4f1a\u53d1\u751f\u3002s1 \u79fb\u51fa\u4f5c\u7528\u57df\u5e76\u88ab\u4e22\u5f03\n\nfn gives_ownership() -&gt; String {             // gives_ownership \u5c06\u8fd4\u56de\u503c\u79fb\u52a8\u7ed9\n                                             // \u8c03\u7528\u5b83\u7684\u51fd\u6570\n\n    let some_string = String::from(\"hello\"); // some_string \u8fdb\u5165\u4f5c\u7528\u57df.\n\n    some_string                              // \u8fd4\u56de some_string \u5e76\u79fb\u51fa\u7ed9\u8c03\u7528\u7684\u51fd\u6570\n}\n\n// takes_and_gives_back \u5c06\u4f20\u5165\u5b57\u7b26\u4e32\u5e76\u8fd4\u56de\u8be5\u503c\nfn takes_and_gives_back(a_string: String) -&gt; String { // a_string \u8fdb\u5165\u4f5c\u7528\u57df\n\n    a_string  // \u8fd4\u56de a_string \u5e76\u79fb\u51fa\u7ed9\u8c03\u7528\u7684\u51fd\u6570\n}\n</code></pre> <p>\u6240\u6709\u6743\u5f88\u5f3a\u5927\uff0c\u907f\u514d\u4e86\u5185\u5b58\u7684\u4e0d\u5b89\u5168\u6027\uff0c\u4f46\u662f\u4e5f\u5e26\u6765\u4e86\u4e00\u4e2a\u65b0\u9ebb\u70e6\uff1a \u603b\u662f\u628a\u4e00\u4e2a\u503c\u4f20\u6765\u4f20\u53bb\u6765\u4f7f\u7528\u5b83\u3002 \u4f20\u5165\u4e00\u4e2a\u51fd\u6570\uff0c\u5f88\u53ef\u80fd\u8fd8\u8981\u4ece\u8be5\u51fd\u6570\u4f20\u51fa\u53bb\uff0c\u7ed3\u679c\u5c31\u662f\u8bed\u8a00\u8868\u8fbe\u53d8\u5f97\u975e\u5e38\u5570\u55e6\uff0c\u5e78\u8fd0\u7684\u662f\uff0cRust \u63d0\u4f9b\u4e86\u65b0\u529f\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p>"},{"location":"software_development/backend/language/Rust/#_19","title":"\u501f\u7528","text":"<p>\u5f15\u7528\uff1a\u5bf9\u67d0\u4e2a\u53d8\u91cf\u53d6\u5730\u5740</p> <p>\u501f\u7528\uff1a\u4f7f\u7528\u67d0\u53d8\u91cf\u7684\u5f15\u7528\uff0c\u4f8b\u5982<code>let s = &amp;s1</code></p> <p>\u501f\u7528\u4e24\u5927\u7279\u6027</p> <ul> <li>\u540c\u4e00\u65f6\u523b\uff0c\u4f60\u53ea\u80fd\u62e5\u6709\u8981\u4e48\u4e00\u4e2a\u53ef\u53d8\u5f15\u7528\uff0c\u8981\u4e48\u4efb\u610f\u591a\u4e2a\u4e0d\u53ef\u53d8\u5f15\u7528</li> <li>\u5f15\u7528\u5fc5\u987b\u603b\u662f\u6709\u6548\u7684</li> </ul> <p></p> <p>\u6ce8\u610f\uff0c\u5f15\u7528\u7684\u4f5c\u7528\u57df <code>s</code> \u4ece\u521b\u5efa\u5f00\u59cb\uff0c\u4e00\u76f4\u6301\u7eed\u5230\u5b83\u6700\u540e\u4e00\u6b21\u4f7f\u7528\u7684\u5730\u65b9\uff0c\u8fd9\u4e2a\u8ddf\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u6709\u6240\u4e0d\u540c\uff0c\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u4ece\u521b\u5efa\u6301\u7eed\u5230\u67d0\u4e00\u4e2a\u82b1\u62ec\u53f7 <code>}</code></p> <p>\u5bf9\u4e8e\u8fd9\u79cd\u7f16\u8bd1\u5668\u4f18\u5316\u884c\u4e3a\uff0cRust \u4e13\u95e8\u8d77\u4e86\u4e00\u4e2a\u540d\u5b57 \u2014\u2014 Non-Lexical Lifetimes(NLL)\uff0c\u4e13\u95e8\u7528\u4e8e\u627e\u5230\u67d0\u4e2a\u5f15\u7528\u5728\u4f5c\u7528\u57df(<code>}</code>)\u7ed3\u675f\u524d\u5c31\u4e0d\u518d\u88ab\u4f7f\u7528\u7684\u4ee3\u7801\u4f4d\u7f6e\u3002</p> <pre><code>fn main() {\n   let mut s = String::from(\"hello\");\n\n    let r1 = &amp;s;\n    let r2 = &amp;s;\n    println!(\"{} and {}\", r1, r2);\n    // \u65b0\u7f16\u8bd1\u5668\u4e2d\uff0cr1,r2\u4f5c\u7528\u57df\u5728\u8fd9\u91cc\u7ed3\u675f\n\n    let r3 = &amp;mut s;\n    println!(\"{}\", r3);\n} // \u8001\u7f16\u8bd1\u5668\u4e2d\uff0cr1\u3001r2\u3001r3\u4f5c\u7528\u57df\u5728\u8fd9\u91cc\u7ed3\u675f\n  // \u65b0\u7f16\u8bd1\u5668\u4e2d\uff0cr3\u4f5c\u7528\u57df\u5728\u8fd9\u91cc\u7ed3\u675f\n</code></pre> <p>\u8fd4\u56de\u5f15\u7528\u53ef\u80fd\u4f1a\u5bfc\u81f4\u60ac\u5782\u6307\u9488\uff08\u8fd4\u56de\u6307\u9488\uff0c\u4f46\u662f\u6307\u9488\u6240\u6307\u5411\u7684\u5185\u5b58\u53ef\u80fd\u4e0d\u5b58\u5728\u4efb\u4f55\u503c\u6216\u5df2\u88ab\u5176\u5b83\u53d8\u91cf\u91cd\u65b0\u4f7f\u7528\uff09\uff0cRust\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519\uff0c\u89e3\u51b3\u8fd9\u90e8\u5206\u9700\u8981\u7528\u5230\u751f\u547d\u5468\u671f\u7684\u77e5\u8bc6</p>"},{"location":"software_development/backend/language/Rust/#_20","title":"\u6a21\u5f0f\u5339\u914d","text":"<p>\u65e0\u8bba\u662f <code>match</code> \u8fd8\u662f <code>if let</code>\uff0c\u8fd9\u91cc\u90fd\u662f\u4e00\u4e2a\u65b0\u7684\u4ee3\u7801\u5757\uff0c\u800c\u4e14\u8fd9\u91cc\u7684\u7ed1\u5b9a\u76f8\u5f53\u4e8e\u65b0\u53d8\u91cf\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u540c\u540d\u53d8\u91cf\uff0c\u4f1a\u53d1\u751f\u53d8\u91cf\u906e\u853d</p> <p>https://course.rs/basic/match-pattern/match-if-let.html#%E5%8F%98%E9%87%8F%E9%81%AE%E8%94%BD</p>"},{"location":"software_development/backend/language/Rust/#while-let","title":"while let \u6761\u4ef6\u5faa\u73af","text":"<p>\u4e00\u4e2a\u4e0e <code>if let</code> \u7c7b\u4f3c\u7684\u7ed3\u6784\u662f <code>while let</code> \u6761\u4ef6\u5faa\u73af\uff0c\u5b83\u5141\u8bb8\u53ea\u8981\u6a21\u5f0f\u5339\u914d\u5c31\u4e00\u76f4\u8fdb\u884c <code>while</code> \u5faa\u73af\u3002\u4e0b\u9762\u5c55\u793a\u4e86\u4e00\u4e2a\u4f7f\u7528 <code>while let</code> \u7684\u4f8b\u5b50\uff1a</p> <pre><code>// Vec\u662f\u52a8\u6001\u6570\u7ec4\nlet mut stack = Vec::new();\n\n// \u5411\u6570\u7ec4\u5c3e\u90e8\u63d2\u5165\u5143\u7d20\nstack.push(1);\nstack.push(2);\nstack.push(3);\n\n// stack.pop\u4ece\u6570\u7ec4\u5c3e\u90e8\u5f39\u51fa\u5143\u7d20\nwhile let Some(top) = stack.pop() {\n    println!(\"{}\", top);\n}\n</code></pre> <p>\u8fd9\u4e2a\u4f8b\u5b50\u4f1a\u6253\u5370\u51fa <code>3</code>\u3001<code>2</code> \u63a5\u7740\u662f <code>1</code>\u3002<code>pop</code> \u65b9\u6cd5\u53d6\u51fa\u52a8\u6001\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5e76\u8fd4\u56de <code>Some(value)</code>\uff0c\u5982\u679c\u52a8\u6001\u6570\u7ec4\u662f\u7a7a\u7684\uff0c\u5c06\u8fd4\u56de <code>None</code>\uff0c\u5bf9\u4e8e <code>while</code> \u6765\u8bf4\uff0c\u53ea\u8981 <code>pop</code> \u8fd4\u56de <code>Some</code> \u5c31\u4f1a\u4e00\u76f4\u4e0d\u505c\u7684\u5faa\u73af\u3002\u4e00\u65e6\u5176\u8fd4\u56de <code>None</code>\uff0c<code>while</code> \u5faa\u73af\u505c\u6b62\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>while let</code> \u6765\u5f39\u51fa\u6808\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u3002</p> <p>\u4f60\u4e5f\u53ef\u4ee5\u7528 <code>loop</code> + <code>if let</code> \u6216\u8005 <code>match</code> \u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u4f46\u662f\u4f1a\u66f4\u52a0\u5570\u55e6\u3002</p>"},{"location":"software_development/backend/language/Rust/#if-else","title":"If-else","text":"<p><code>if let</code> \u5199\u6cd5\u91cc\u7684 <code>x</code> \u53ea\u80fd\u5728 <code>if</code> \u5206\u652f\u5185\u4f7f\u7528\uff0c\u800c <code>let-else</code> \u5199\u6cd5\u91cc\u7684 <code>x</code> \u5219\u53ef\u4ee5\u5728 <code>let</code> \u4e4b\u5916\u4f7f\u7528\u3002</p> <p>https://course.rs/basic/match-pattern/pattern-match.html#let-elserust-165-%E6%96%B0%E5%A2%9E</p>"},{"location":"software_development/backend/language/Rust/#_21","title":"\u6570\u7ec4\u7684\u6a21\u5f0f\u5339\u914d","text":"<p>https://course.rs/basic/match-pattern/all-patterns.html#%E8%A7%A3%E6%9E%84%E6%95%B0%E7%BB%84</p>"},{"location":"software_development/backend/language/Rust/#_22","title":"\u7279\u6b8a\u7b26\u53f7","text":"<p><code>_</code> \u6a21\u5f0f\u5ffd\u7565\u4e00\u4e2a\u503c\uff0c\u6216\u8005\u4f7f\u7528 <code>..</code> \u5ffd\u7565\u591a\u4e2a\u503c\u3002</p>"},{"location":"software_development/backend/language/Rust/#_23","title":"\u7ed1\u5b9a@","text":"<p>@\u7ed1\u5b9a\u53ef\u80fd\u662f\u6240\u6709\u6a21\u5f0f\u5339\u914d\u4e2d\u6700\u96be\u8bb0\u5fc6\u7684\u4e00\u4e2a\u3002</p> <pre><code>let p @ Point {x: px, y: py } = Point {x: 10, y: 23};\n</code></pre> <p>\u6211\u73b0\u5728\u8fd9\u6837\u52a9\u8bb0\uff1a @ \u7b26\u53f7\u53f3\u4fa7\u7684 <code>Point {x: px, y: py }</code> \u662f\u4e00\u4e2a\u6a21\u5f0f(pattern), \u5982\u679c\u8fd9\u4e2a\u6a21\u5f0f\u5339\u914d\u5c31\u628a\u5339\u914d\u503c\u7ed1\u5b9a\u5230 @ \u7b26\u53f7\u5de6\u4fa7\u7684 <code>p</code> \u53d8\u91cf\u4e0a\u3002</p> <p>https://course.rs/basic/match-pattern/all-patterns.html#%E7%BB%91%E5%AE%9A</p>"},{"location":"software_development/backend/language/Rust/#_24","title":"\u6cdb\u578b","text":"<p>\u6cdb\u578b\u9002\u7528\u4e8e\u679a\u4e3e\u3001\u7ed3\u6784\u4f53\u3001\u51fd\u6570\u7b49</p> <p>https://course.rs/basic/trait/generic.html</p> <p>\u4e0d\u4ec5\u53ef\u4ee5\u7ed9\u6cdb\u578b\u5b9a\u4e49\u65b9\u6cd5\uff0c\u8fd8\u53ef\u4ee5\u7ed9\u7279\u5b9a\u7c7b\u578b\u5236\u5b9a\u65b9\u6cd5</p> <p>https://course.rs/basic/trait/generic.html#%E4%B8%BA%E5%85%B7%E4%BD%93%E7%9A%84%E6%B3%9B%E5%9E%8B%E7%B1%BB%E5%9E%8B%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95</p>"},{"location":"software_development/backend/language/Rust/#trait","title":"\u7279\u5f81Trait","text":"<p>\u7279\u5f81\u7c7b\u4f3c\u4e8eGo\u8bed\u8a00\u53ca\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u201c\u63a5\u53e3\u201d</p> <ul> <li>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7279\u5f81\u5b9a\u4e49\u4e00\u7cfb\u5217\u53ef\u4ee5\u88ab\u5171\u4eab\u884c\u4e3a\u7684\u96c6\u5408</li> <li>\u7279\u5f81\u7ea6\u675f\uff08Trait bound\uff09</li> <li>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e3a\u53c2\u6570\u8bbe\u5b9a\u7279\u5f81\u7ea6\u675f\uff0c\u4ece\u800c\u80fd\u591f\u66f4\u65b9\u4fbf\u4f20\u5165\u6240\u6709\u6ee1\u8db3\u8be5\u7279\u5f81\u7684\u7ed3\u6784\u4f53\u6216\u5176\u4ed6\u6570\u636e\u7c7b\u578b\uff1b\u540c\u65f6\u4e5f\u7ea6\u675f\u4e86\u53ea\u6709\u5b9e\u73b0\u8be5\u7279\u5f81\u7684\u53c2\u6570\u624d\u80fd\u4f20\u5165</li> <li>\u7279\u5f81\u652f\u6301\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u80fd\u591f\u5b9e\u73b0\u91cd\u8f7d</li> </ul> <p>\u6709\u51e0\u70b9\u9700\u8981\u6ce8\u610f</p> <ol> <li> <p>\u5982\u679c\u4f60\u60f3\u8981\u4e3a\u7c7b\u578b <code>A</code> \u5b9e\u73b0\u7279\u5f81 <code>T</code>\uff0c\u90a3\u4e48 <code>A</code> \u6216\u8005 <code>T</code> \u81f3\u5c11\u6709\u4e00\u4e2a\u662f\u5728\u5f53\u524d\u4f5c\u7528\u57df\u4e2d\u5b9a\u4e49\u7684\uff01</p> </li> <li> <p>\u5982\u679c\u5f53\u524d\u7279\u5f81\u4e0d\u5728/\u5982\u679c\u5f53\u524d\u7c7b\u578b\u4e0d\u5728\uff0c\u90a3\u4e48\u9700\u8981\u4f7f\u7528use\u5f15\u5165\u6216\u81ea\u884c\u521b\u5efa</p> </li> <li> <p>\u80fd\u591f\u4f7f\u7528\u7279\u5f81\u7ea6\u675f\u6709\u6761\u4ef6\u5730\u5b9e\u73b0\u65b9\u6cd5\u6216\u7279\u5f81</p> </li> </ol> <p>https://course.rs/basic/trait/trait.html#%E4%BD%BF%E7%94%A8%E7%89%B9%E5%BE%81%E7%BA%A6%E6%9D%9F%E6%9C%89%E6%9D%A1%E4%BB%B6%E5%9C%B0%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95%E6%88%96%E7%89%B9%E5%BE%81</p> <ol> <li> <p>\u901a\u8fc7derive\u6d3e\u751f\u7279\u5f81\uff1a\u88ab <code>derive</code> \u6807\u8bb0\u7684\u5bf9\u8c61\u4f1a\u81ea\u52a8\u5b9e\u73b0\u5bf9\u5e94\u7684\u9ed8\u8ba4\u7279\u5f81\u4ee3\u7801\uff0c\u7ee7\u627f\u76f8\u5e94\u7684\u529f\u80fd\u3002</p> </li> <li> <p>\u5982\u679c\u4f60\u8981\u4f7f\u7528\u4e00\u4e2a\u7279\u5f81\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u4f60\u9700\u8981\u5c06\u8be5\u7279\u5f81\u5f15\u5165\u5f53\u524d\u7684\u4f5c\u7528\u57df\u4e2d\uff08\u6682\u65f6\u6ca1\u61c2\uff1f</p> </li> </ol> <p>https://course.rs/basic/trait/trait.html#%E8%B0%83%E7%94%A8%E6%96%B9%E6%B3%95%E9%9C%80%E8%A6%81%E5%BC%95%E5%85%A5%E7%89%B9%E5%BE%81</p> <ol> <li>2</li> </ol>"},{"location":"software_development/backend/language/Rust/#_25","title":"\u683c\u5f0f\u5316\u8f93\u51fa","text":"<p>https://course.rs/basic/formatted-output.html</p> <ul> <li><code>{}</code> \u9002\u7528\u4e8e\u5b9e\u73b0\u4e86 <code>std::fmt::Display</code> \u7279\u5f81\u7684\u7c7b\u578b\uff0c\u7528\u6765\u4ee5\u66f4\u4f18\u96c5\u3001\u66f4\u53cb\u597d\u7684\u65b9\u5f0f\u683c\u5f0f\u5316\u6587\u672c\uff0c\u4f8b\u5982\u5c55\u793a\u7ed9\u7528\u6237</li> <li>\u9700\u8981\u81ea\u5df1\u5b9e\u73b0Display\u7279\u5f81</li> <li><code>{:?}</code> \u9002\u7528\u4e8e\u5b9e\u73b0\u4e86 <code>std::fmt::Debug</code> \u7279\u5f81\u7684\u7c7b\u578b\uff0c\u7528\u4e8e\u8c03\u8bd5\u573a\u666f</li> <li>\u76f4\u63a5\u4f7f\u7528\u6216\u4f7f\u7528\u6d3e\u751f\u7c7b#[derive(Debug)]</li> <li><code>:#?}</code> \u4e0e <code>{:?}</code> \u51e0\u4e4e\u4e00\u6837\uff0c\u552f\u4e00\u7684\u533a\u522b\u5728\u4e8e\u5b83\u80fd\u66f4\u4f18\u7f8e\u5730\u8f93\u51fa\u5185\u5bb9</li> </ul> <p>\u5176\u5b9e\u4e24\u8005\u7684\u9009\u62e9\u5f88\u7b80\u5355\uff0c\u5f53\u4f60\u5728\u5199\u4ee3\u7801\u9700\u8981\u8c03\u8bd5\u65f6\uff0c\u4f7f\u7528 <code>{:?}</code>\uff0c\u5269\u4e0b\u7684\u573a\u666f\uff0c\u9009\u62e9 <code>{}</code>\u3002</p>"},{"location":"software_development/backend/language/Rust/#_26","title":"\u751f\u547d\u5468\u671f","text":"<p>\u751f\u547d\u5468\u671f\u8bed\u6cd5\u7528\u6765\u5c06\u51fd\u6570\u7684\u591a\u4e2a\u5f15\u7528\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u4f5c\u7528\u57df\u5173\u8054\u5230\u4e00\u8d77\uff0c\u4e00\u65e6\u5173\u8054\u5230\u4e00\u8d77\u540e\uff0cRust \u5c31\u62e5\u6709\u5145\u5206\u7684\u4fe1\u606f\u6765\u786e\u4fdd\u6211\u4eec\u7684\u64cd\u4f5c\u662f\u5185\u5b58\u5b89\u5168\u7684\u3002</p>"},{"location":"software_development/backend/language/Rust/#_27","title":"\u751f\u547d\u5468\u671f\u672c\u8d28\u4e24\u5927\u89c4\u5219","text":"<ol> <li>\u751f\u547d\u5468\u671f\u6807\u6ce8\u5e76\u4e0d\u4f1a\u6539\u53d8\u4efb\u4f55\u5f15\u7528\u7684\u5b9e\u9645\u4f5c\u7528\u57df</li> <li>\u5728\u901a\u8fc7\u51fd\u6570\u7b7e\u540d\u6307\u5b9a\u751f\u547d\u5468\u671f\u53c2\u6570\u65f6\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u6539\u53d8\u4f20\u5165\u5f15\u7528\u6216\u8005\u8fd4\u56de\u5f15\u7528\u7684\u771f\u5b9e\u751f\u547d\u5468\u671f\uff0c\u800c\u662f\u544a\u8bc9\u7f16\u8bd1\u5668\u5f53\u4e0d\u6ee1\u8db3\u6b64\u7ea6\u675f\u6761\u4ef6\u65f6\uff0c\u5c31\u62d2\u7edd\u7f16\u8bd1\u901a\u8fc7\u3002</li> <li>\u751f\u547d\u5468\u671f <code>'a</code> \u4e0d\u4ee3\u8868\u751f\u547d\u5468\u671f\u7b49\u4e8e <code>'a</code>\uff0c\u800c\u662f\u5927\u4e8e\u7b49\u4e8e <code>'a</code></li> </ol>"},{"location":"software_development/backend/language/Rust/#_28","title":"\u751f\u547d\u5468\u671f\u4e09\u5927\u89c4\u5219","text":"<ol> <li>\u6bcf\u4e00\u4e2a\u5f15\u7528\u53c2\u6570\u90fd\u4f1a\u83b7\u5f97\u72ec\u81ea\u7684\u751f\u547d\u5468\u671f</li> </ol> <p>\u4f8b\u5982\u4e00\u4e2a\u5f15\u7528\u53c2\u6570\u7684\u51fd\u6570\u5c31\u6709\u4e00\u4e2a\u751f\u547d\u5468\u671f\u6807\u6ce8: <code>fn foo&lt;'a&gt;(x: &amp;'a i32)</code>\uff0c\u4e24\u4e2a\u5f15\u7528\u53c2\u6570\u7684\u6709\u4e24\u4e2a\u751f\u547d\u5468\u671f\u6807\u6ce8:<code>fn foo&lt;'a, 'b&gt;(x: &amp;'a i32, y: &amp;'b i32)</code>, \u4f9d\u6b64\u7c7b\u63a8\u3002</p> <ol> <li>\u82e5\u53ea\u6709\u4e00\u4e2a\u8f93\u5165\u751f\u547d\u5468\u671f\uff08\u51fd\u6570\u53c2\u6570\u4e2d\u53ea\u6709\u4e00\u4e2a\u5f15\u7528\u7c7b\u578b\uff09\uff0c\u90a3\u4e48\u8be5\u751f\u547d\u5468\u671f\u4f1a\u88ab\u8d4b\u7ed9\u6240\u6709\u7684\u8f93\u51fa\u751f\u547d\u5468\u671f\uff0c\u4e5f\u5c31\u662f\u6240\u6709\u8fd4\u56de\u503c\u7684\u751f\u547d\u5468\u671f\u90fd\u7b49\u4e8e\u8be5\u8f93\u5165\u751f\u547d\u5468\u671f</li> </ol> <p>\u4f8b\u5982\u51fd\u6570 <code>fn foo(x: &amp;i32) -&gt; &amp;i32</code>\uff0c<code>x</code> \u53c2\u6570\u7684\u751f\u547d\u5468\u671f\u4f1a\u88ab\u81ea\u52a8\u8d4b\u7ed9\u8fd4\u56de\u503c <code>&amp;i32</code>\uff0c\u56e0\u6b64\u8be5\u51fd\u6570\u7b49\u540c\u4e8e <code>fn foo&lt;'a&gt;(x: &amp;'a i32) -&gt; &amp;'a i32</code></p> <ol> <li> <p>\u82e5\u5b58\u5728\u591a\u4e2a\u8f93\u5165\u751f\u547d\u5468\u671f\uff0c\u4e14\u5176\u4e2d\u4e00\u4e2a\u662f <code>&amp;self</code> \u6216 <code>&amp;mut self</code>\uff0c\u5219 <code>&amp;self</code> \u7684\u751f\u547d\u5468\u671f\u88ab\u8d4b\u7ed9\u6240\u6709\u7684\u8f93\u51fa\u751f\u547d\u5468\u671f</p> </li> <li> <p>\u8fd9\u4e00\u89c4\u5219\u8bf4\u660e\u65b9\u6cd5\u4e0d\u9700\u8981\u6807\u6ce8\u751f\u547d\u5468\u671f</p> </li> <li>\u5982\u679c\u65b9\u6cd5\u4e2d\u4eba\u4e3a\u6807\u6ce8\u751f\u547d\u5468\u671f\uff0c\u6709\u65f6\u4f1a\u9700\u8981\u8bf4\u660e\u751f\u547d\u5468\u671f\u5927\u5c0f\u5173\u7cfb\uff0c\u8be6\u89c1https://course.rs/basic/lifetime.html#%E6%96%B9%E6%B3%95%E4%B8%AD%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F</li> </ol> <p>\u5982\u679c\u4e0d\u6ee1\u8db3\u4ee5\u4e0a\u4e09\u6761\u89c4\u5219\uff0c\u8bf4\u660e\u7f16\u8bd1\u5668\u65e0\u6cd5\u81ea\u884c\u6807\u6ce8\u751f\u547d\u5468\u671f\uff0c\u56e0\u6b64\u9700\u8981\u6211\u4eec\u4eba\u4e3a\u6807\u6ce8\u751f\u547d\u5468\u671f</p>"},{"location":"software_development/backend/language/Rust/#_29","title":"\u8fd4\u56de\u503c\u548c\u9519\u8bef\u5904\u7406","text":"<ul> <li>unwrap\uff1a\u5982\u679c\u8fd4\u56de\u6210\u529f\uff0c\u5c31\u5c06 <code>Ok(T)</code> \u4e2d\u7684\u503c\u53d6\u51fa\u6765\uff0c\u5982\u679c\u5931\u8d25\uff0c\u5c31\u76f4\u63a5 <code>panic</code></li> <li>expect\u5728unwrap\u57fa\u7840\u4e0a\uff0c\u9047\u5230\u9519\u8bef\u76f4\u63a5 <code>panic</code>, \u4f46\u662f\u4f1a\u5e26\u4e0a\u81ea\u5b9a\u4e49\u7684\u9519\u8bef\u63d0\u793a\u4fe1\u606f</li> </ul> <p>\u7b26\u53f7\uff1f\u76f8\u5f53\u4e8e\u4ee5\u4e0b\u4ee3\u7801</p> <p>\u7b26\u53f7?\u4f5c\u7528\uff1a</p> <ul> <li>\u5982\u679c\u6709\u503c\uff0c\u5bf9\u5e94<code>Ok(T)</code>\u6216<code>Some&lt;T&gt;</code>\u5219\u8fd4\u56de\u5bf9\u5e94\u7684\u503c\uff0c\u5426\u5219\u8fd4\u56de<code>Err(e)</code>\u6216<code>None</code>\uff08\u4f8b1\u548c\u4f8b2\uff09</li> <li>\u8fd8\u53ef\u4ee5\u94fe\u5f0f\u8c03\u7528\uff08\u4f8b3\uff09</li> <li>\uff1f\u8fd8\u80fd\u591f\u9690\u5f0f\u5b9e\u73b0\u9519\u8bef\u7c7b\u578b\u7684\u8f6c\u6362</li> </ul> <p>\u521d\u5b66\u8005\u5728\u7528 <code>?</code> \u65f6\uff0c\u8001\u662f\u4f1a\u72af\u9519\uff0c\u4f8b\u5982\u5199\u51fa\u8fd9\u6837\u7684\u4ee3\u7801\uff1a</p> <pre><code>fn first(arr: &amp;[i32]) -&gt; Option&lt;&amp;i32&gt; {\n   arr.get(0)?\n}\n</code></pre> <p>\u8fd9\u6bb5\u4ee3\u7801\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1\uff0c\u5207\u8bb0\uff1a<code>?</code> \u64cd\u4f5c\u7b26\u9700\u8981\u4e00\u4e2a\u53d8\u91cf\u6765\u627f\u8f7d\u6b63\u786e\u7684\u503c\uff0c\u8fd9\u4e2a\u51fd\u6570\u53ea\u4f1a\u8fd4\u56de <code>Some(&amp;i32)</code> \u6216\u8005 <code>None</code>\uff0c\u53ea\u6709\u9519\u8bef\u503c\u80fd\u76f4\u63a5\u8fd4\u56de\uff0c\u6b63\u786e\u7684\u503c\u4e0d\u884c\uff0c\u6240\u4ee5\u5982\u679c\u6570\u7ec4\u4e2d\u5b58\u5728 0 \u53f7\u5143\u7d20\uff0c\u90a3\u4e48\u51fd\u6570\u7b2c\u4e8c\u884c\u4f7f\u7528 <code>?</code> \u540e\u7684\u8fd4\u56de\u7c7b\u578b\u4e3a <code>&amp;i32</code> \u800c\u4e0d\u662f <code>Some(&amp;i32)</code>\u3002\u56e0\u6b64 <code>?</code> \u53ea\u80fd\u7528\u4e8e\u4ee5\u4e0b\u5f62\u5f0f\uff1a</p> <ul> <li><code>let v = xxx()?;</code></li> <li><code>xxx()?.yyy()?;</code></li> </ul> <p>\u4f8b1:\u53ef\u7528\u4e8eResult <pre><code>let mut f = File::open(\"hello.txt\")?;\n// \u7b49\u4ef7\u4e8e\nlet mut f = match f {\n    // \u6253\u5f00\u6587\u4ef6\u6210\u529f\uff0c\u5c06file\u53e5\u67c4\u8d4b\u503c\u7ed9f\n    Ok(file) =&gt; file,\n    // \u6253\u5f00\u6587\u4ef6\u5931\u8d25\uff0c\u5c06\u9519\u8bef\u8fd4\u56de(\u5411\u4e0a\u4f20\u64ad)\n    Err(e) =&gt; return Err(e),\n};\n</code></pre> <p>\u4f8b2:\u4e5f\u53ef\u7528\u4e8eOption <pre><code>pub enum Option&lt;T&gt; {\n    Some(T),\n    None\n}\n\nfn first(arr: &amp;[i32]) -&gt; Option&lt;&amp;i32&gt; {\n   let v = arr.get(0)?;\n   Some(v)\n}\n</code></pre> <p>\u4f8b3:</p> <pre><code>use std::fs::File;\nuse std::io;\nuse std::io::Read;\n\nfn read_username_from_file() -&gt; Result&lt;String, io::Error&gt; {\n    let mut s = String::new();\n\n    File::open(\"hello.txt\")?.read_to_string(&amp;mut s)?;\n\n    Ok(s)\n}\n</code></pre>"},{"location":"software_development/backend/language/Rust/#_30","title":"\u5de5\u7a0b","text":""},{"location":"software_development/backend/language/Rust/#_31","title":"\u57fa\u672c\u6307\u4ee4","text":"<pre><code>rustup update //\u66f4\u65b0rust\nrustup self uninstall //\u5378\u8f7drust\nrustup doc //\u67e5\u770b\u672c\u5730rust\u6587\u6863\n</code></pre> <p>rust\u7684\u6e90\u6587\u4ef6\u540e\u7f00\u4e3a.rs</p> <pre><code>rustc --version //\u68c0\u67e5rust\u7248\u672c\nrustc main.rs //\u8fd0\u884c\u7b80\u5355rust\u7a0b\u5e8f\n</code></pre>"},{"location":"software_development/backend/language/Rust/#cargo","title":"Cargo","text":"<p>cargo\u7528\u4e8erust\u7684\u9879\u76ee</p> <p>cargo\u751f\u6210\u6587\u4ef6\u7b80\u8981\u4ecb\u7ecd\uff1a</p> <ul> <li>cargo.toml\u4e3a\u914d\u7f6e\u6587\u4ef6</li> <li>\u4e0d\u8981\u4fee\u6539cargo.lock</li> </ul>"},{"location":"software_development/backend/language/Rust/#cargotoml","title":"cargo.toml","text":"<p>\u6e90\u4ee3\u7801\u653e\u5728src\u76ee\u5f55\u4e0b</p> <p>\u5176\u4f59\u4e0e\u7a0b\u5e8f\u6e90\u7801\u65e0\u5173\u6587\u4ef6\u653e\u7f6e\u5728\u9876\u5c42\u76ee\u5f55\uff08\u4e0etoml\u540c\u7ea7\uff09</p>"},{"location":"software_development/backend/language/Rust/#cargo_1","title":"cargo\u57fa\u672c\u6307\u4ee4","text":"<pre><code>cargo --version//\u68c0\u67e5cargo\u7248\u672c\ncargo new hello_cargo//\u751f\u6210\u65b0\u7684cargo\u9879\u76ee\n//\u8fdb\u5165cargo\u9879\u76ee\u540e\ncargo build//\u7f16\u8bd1rust\u7684cargo\u9879\u76ee\ncargo run//\u7f16\u8bd1\u5e76\u6267\u884c\uff0c\u82e5\u7b2c\u4e00\u6b21\u5df2\u7f16\u8bd1\u4e14\u7f16\u8bd1\u540e\u6ca1\u6709\u6539\u52a8\uff0c\u5219\u7b2c\u4e8c\u6b21\u76f4\u63a5\u6267\u884c\ncargo check//\u68c0\u67e5\u4ee3\u7801\uff0c\u4e0d\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6(\u5f00\u53d1\u65f6\u8c03\u8bd5\uff0c\u6bd4build\u5feb\u5f97\u591a)\ncargo build --release//\u7528\u4e8e\u53d1\u5e03\uff0c\u7f16\u8bd1\u65f6\u4f1a\u8fdb\u884c\u4f18\u5316\uff0c\u4ee3\u7801\u8fd0\u884c\u66f4\u5feb\uff0c\u4f46\u7f16\u8bd1\u65f6\u95f4\u66f4\u957f\n</code></pre> <p>\u4f7f\u7528cargo build\u4f1a\u5728target/debug\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6</p> <p>\u4f7f\u7528cargo build --release\u4f1a\u5728target/release\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6</p> <p>cargo.lockc\u5728\u7b2c\u4e00\u6b21cargo build\u751f\u6210\uff0c\u8bb0\u5f55\u5f53\u65f6\u7684\u6240\u6709\u4f9d\u8d56\u9879\u4fe1\u606f\uff08\u5305\u62ec\u7248\u672c\uff09\uff0c\u4e4b\u540e\u7684build\u90fd\u6309\u7167lock\u91cc\u7684\u4f9d\u8d56\u9879</p> <p>\u4e4b\u540e\u4fee\u6539\u4ee3\u7801\u518dbuild\u65f6\uff0c\u53ea\u4f1a\u7f16\u8bd1\u4ee3\u7801\uff0c\u4e0d\u4f1a\u7f16\u8bd1\u4f9d\u8d56\u9879</p>"},{"location":"software_development/backend/language/Rust/#print","title":"print","text":"<pre><code>{} - \u6253\u5370\u503c\u7684\u6807\u51c6\u8868\u793a\u5f62\u5f0f\uff08\u901a\u5e38\u4e0e\u5b9e\u73b0 Display trait \u7684\u7c7b\u578b\u4e00\u8d77\u4f7f\u7528\uff09\u3002\n{:?} - \u6253\u5370\u503c\u7684\u8c03\u8bd5\u8868\u793a\u5f62\u5f0f\uff08\u901a\u5e38\u4e0e\u5b9e\u73b0 Debug trait \u7684\u7c7b\u578b\u4e00\u8d77\u4f7f\u7528\uff09\u3002\n{:p} - \u6253\u5370\u503c\u7684\u5185\u5b58\u5730\u5740\uff08\u901a\u5e38\u7528\u4e8e\u5f15\u7528\u7c7b\u578b\uff09\n</code></pre>"},{"location":"software_development/frontend/JavaScript/","title":"JavaScript","text":""},{"location":"software_development/frontend/WebAssembly/","title":"WebAssembly","text":""},{"location":"software_development/frontend/WebAssembly/#webassembly_1","title":"\u4ec0\u4e48\u662fWebAssembly","text":"<p>WebAssembly\uff08\u7f29\u5199wasm\uff09\u662f\u80fd\u591f\u8fd0\u884c\u5728\u6d4f\u89c8\u5668\u7684\u300c\u4e2d\u95f4\u5f62\u5f0f\u300d</p> <p>\u6d4f\u89c8\u5668\u5f15\u64ce\u5b9e\u73b0\u4e86 WebAssembly \u865a\u62df\u673a\uff0c\u8fd9\u4f7f\u5f97\u7528\u6237\u80fd\u591f\u4e0e JavaScript \u4e00\u8d77\u8fd0\u884c wasm \u4ee3\u7801\u3002</p> <p>\u6211\uff1aWebAssembly\u4e0d\u662f\u7f16\u7a0b\u8bed\u8a00\uff0c\u5b83\u662f\u4e00\u79cd\u4e2d\u95f4\u683c\u5f0f\uff0c\u53eb\u5b57\u8282\u7801\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u5176\u4ed6\u8bed\u8a00\u7684\u7f16\u8bd1\u76ee\u6807\u3002</p> <p>\u300a\u7cbe\u901aRust\u300b\uff1aWebAssembly \u662f\u4e00\u5957\u6280\u672f\u548c\u89c4\u8303\uff0c\u5b83\u5141\u8bb8\u7528\u6237\u5c06\u539f\u751f\u4ee3\u7801\u7f16\u8bd1\u4e3a\u540d\u4e3a wasm \u7684\u4f4e\u7ea7\u8bed \u8a00\u5728 Web \u4e0a\u8fd0\u884c\u3002\u4ece\u53ef\u7528\u6027\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5b83\u662f\u4e00\u7ec4\u6280\u672f\uff0c\u5141\u8bb8\u4f60\u4f7f\u7528\u5176\u4ed6\u975e Web \u7f16\u7a0b\u8bed\u8a00 \u7f16\u5199\u7684\u7a0b\u5e8f\u5728 Web \u6d4f\u89c8\u5668\u4e0a\u8fd0\u884c\u3002\u4ece\u6280\u672f\u7684\u89d2\u5ea6\u6765\u770b\uff0cWebAssembly \u662f\u4e00\u79cd\u865a\u62df\u673a\u89c4\u8303\uff0c \u5177\u6709\u4e8c\u8fdb\u5236\u3001\u52a0\u8f7d\u671f\u6548\u7387\u6307\u4ee4\u96c6\u67b6\u6784(Instruction Set Architecture\uff0cISA)\u3002</p> <p>\u901a\u8fc7\u9ad8\u7ea7\u8bed\u8a00C/Rust\u7f16\u5199\u4e4b\u540e\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u7f16\u8bd1\u4e3awasm\u8fdb\u5165\u6d4f\u89c8\u5668\uff0c\u4ece\u800c\u4f7f\u5176\u80fd\u591f\u5728\u6211\u4eec\u7684CPU\u4e0a\u4ee5\u63a5\u8fd1\u539f\u751f\u7684\u901f\u5ea6\u8fd0\u884c</p> <p>WebAssembly\u4e0d\u80fd\u66ff\u4ee3 Javascript\uff0c\u76f8\u53cd\uff0c\u8fd9\u4e24\u79cd\u6280\u672f\u662f\u76f8\u8f85\u76f8\u6210\u7684\u3002</p> <p>\u901a\u8fc7 JavaScript API\uff0c\u4f60\u53ef\u4ee5\u5c06 WebAssembly\u6a21\u5757\u52a0\u8f7d\u5230\u4f60\u7684\u9875\u9762\u4e2d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 WebAssembly\u6765\u5145\u5206\u5229\u7528\u7f16\u8bd1\u4ee3\u7801\u7684\u6027\u80fd\uff0c\u540c\u65f6\u4fdd\u6301 JavaScript \u7684\u7075\u6d3b\u6027\u3002</p> <p>\u7531\u4e8e JavaScript\u9ad8\u5ea6\u62bd\u8c61\u6027\uff0c\u5728\u6d4f\u89c8\u5668\u4e0a\u8fd0\u884c JavaScript\u7684\u6027\u80fd\u5e76\u4e0d\u662f\u5f88\u7406\u60f3\uff0c WebAssembly\u7684\u51fa\u73b0\u4f7f\u5176\u80fd\u591f\u4f18\u5316 JavaScript\u7684\u6027\u80fd\uff08\u5177\u4f53\u6765\u8bf4\uff0c\u5c31\u662f\u901a\u8fc7\u7528 WebAssembly\u7f16\u5199\u67d0\u4e9b\u6a21\u5757\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6027\u80fd\uff09</p>"},{"location":"software_development/software_test/software_test_theory/","title":"\u8f6f\u4ef6\u6d4b\u8bd5","text":"<p>\u63a8\u8350\u7f51\u8bfe</p> <p>https://www.youtube.com/watch?v=E2t5XbWwj7I&amp;list=PLL34mf651faM_nn8uKlnwbQPw5zSh_F84</p>"},{"location":"util/Mac/","title":"Mac\u7684\u4e00\u4e9b\u95ee\u9898","text":"<p>Mac</p> <p>Java\u5b89\u88c5</p> <p>https://blog.csdn.net/Tan_LC/article/details/133745096</p>"},{"location":"util/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/","title":"\u670d\u52a1\u5668\u76f8\u5173\u95ee\u9898","text":""},{"location":"util/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/#vscode","title":"vscode\u8fdc\u7a0b\u8fde\u63a5","text":""},{"location":"util/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/#vscodessh","title":"\u91cd\u88c5\u670d\u52a1\u5668\u7cfb\u7edf\u540evscode\u65e0\u6cd5\u518d\u6b21ssh\u8fdc\u7a0b\u8fde\u63a5","text":"<p>\u4ec0\u4e48\u662fknown_hosts\u6587\u4ef6</p> <p>A\u901a\u8fc7ssh\u9996\u6b21\u8fde\u63a5\u5230B\uff0cB\u4f1a\u5c06\u516c\u94a51\uff08host key\uff09\u4f20\u9012\u7ed9A\uff0cA\u5c06\u516c\u94a51\u5b58\u5165known_hosts\u6587\u4ef6\u4e2d\uff0c\u4ee5\u540eA\u518d\u8fde\u63a5B\u65f6\uff0cB\u4f9d\u7136\u4f1a\u4f20\u9012\u7ed9A\u4e00\u4e2a\u516c\u94a52\uff0cOpenSSH\u4f1a\u6838\u5bf9\u516c\u94a5\uff0c\u901a\u8fc7\u5bf9\u6bd4\u516c\u94a51\u4e0e\u516c\u94a52 \u662f\u5426\u76f8\u540c\u6765\u8fdb\u884c\u7b80\u5355\u7684\u9a8c\u8bc1\uff0c\u5982\u679c\u516c\u94a5\u4e0d\u540c\uff0cOpenSSH\u4f1a\u53d1\u51fa\u8b66\u544a </p> <p>\u95ee\u9898\u539f\u56e0\uff1a</p> <p>\u91cd\u88c5\u670d\u52a1\u5668\u7cfb\u7edf\u540e\uff0cA\u7684known_hosts\u6587\u4ef6\u4e2d\u8bb0\u5f55\u7684B\u7684\u516c\u94a51 \u4e0e \u8fde\u63a5\u65f6B\u4f20\u8fc7\u6765\u7684\u516c\u94a52\u4e0d\u5339\u914d</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a</p> <p>known_hosts\u5728.ssh\u76ee\u5f55\u4e0b</p> <p>\u5220\u9664A\u7684known_hosts\u6587\u4ef6\u4e2d\u8bb0\u5f55\u7684B\u7684\u516c\u94a5</p>"}]}